@using WebApp.Library.Extensions
@using Orvosi.Shared.Enums
@model WebApp.ViewModels.DashboardViewModels.IndexViewModel

@if (User.Identity.IsAdmin())
{
    <div class="row" style="margin-bottom:20px">
        <div class="col-md-12">
            <form action="~/Dashboard/Index/" method="get" class="form-inline">
                <div class="form-group">
                    @Html.DropDownList("ServiceProviderId", new SelectList(Model.UserSelectList, "Value", "Text", "Group.Name", Model.SelectedUserId), "-- Service Provider --", new { @class = "form-control", onchange = "this.form.submit();" })
                </div>
            </form>
        </div>
    </div>
}

<div class="row">
    <div class="col-md-12">
        <ul class="nav nav-tabs nav-justified" role="tablist">
            <li role="presentation" class="active">
                <a href="#Assessments" aria-controls="Assessments" role="tab" data-toggle="tab">
                    <div class="h1 text-center">@Model.WeekFolders.Sum(c => c.AssessmentCount)</div>
                    <div class="text-muted text-center">Assessments</div>
                </a>
            </li>
            <li role="presentation">
                <a href="#AddOns" aria-controls="AddOns" role="tab" data-toggle="tab">
                    <div class="h1 text-center">@Model.WeekFolders.Sum(c => c.AssessmentCount)</div>
                    <div class="text-muted text-center">Addendums / Paper Reviews</div>
                </a>
            </li>
        </ul>
        <div class="tab-content">
            <div role="tabpanel" class="tab-pane active panel-body" id="Assessments">
                <div id="week-folders" class="panel-group">
                    @foreach (var weekFolder in Model.WeekFolders)//.ThisWeekCards)
                    {
                        <div class="panel panel-default">
                            <div id="header-weekfolder-@weekFolder.StartDateTicks" class="panel-heading" role="tab">
                                <a role="button" data-toggle="collapse" data-parent="#week-folders" href="#weekfolder-@weekFolder.StartDateTicks">
                                    <div class="panel-title">
                                        <div class="row">
                                            <span class="col-sm-3">
                                                @weekFolder.WeekFolderName
                                            </span>
                                            <span class="col-sm-3">
                                                <span id="assessment-total">@weekFolder.AssessmentCount</span> <span id="assessment-total-label" class="small text-muted">Assessments</span>
                                            </span>
                                            <span class="col-sm-6">
                                                <strong id="todo-total">@weekFolder.ToDoCount</strong>
                                                <span id="todo-total-label" style="margin-left:5px;" class="small label @(weekFolder.ToDoCount == 0 ? "label-success" : "label-danger")">To Do</span>
                                                &nbsp;&nbsp;&nbsp;
                                                <strong id="waiting-total">@weekFolder.WaitingCount</strong>
                                                <span id="waiting-total-label" style="margin-left:5px;" class="small label @(weekFolder.WaitingCount == 0 ? "label-success" : "label-warning")">Waiting</span>
                                            </span>
                                        </div>
                                    </div>
                                </a>
                            </div>
                            <div id="weekfolder-@weekFolder.StartDateTicks" class="panel-collapse collapse" role="tabpanel" aria-labelledby="headingOne">
                                <div class="panel-body">
                                    <div class="row">
                                        @foreach (var dayFolder in weekFolder.DayFolders)
                                        {
                                            <div class="col-sm-3" id="dayfolder-@dayFolder.Day.Ticks">
                                                <strong>
                                                    @dayFolder.DayFormatted_dddd<span class="small"> @dayFolder.DayFormatted_MMMdd</span>
                                                </strong>
                                                <div>
                                                    @dayFolder.Address
                                                </div>
                                                <div class="small text-muted">
                                                    @dayFolder.City
                                                </div>
                                                <hr />
                                                <div>
                                                    @foreach (var assessment in dayFolder.Assessments)
                                                    {
                                                        <div id="header-assessment-@assessment.Id">
                                                            <strong style="color: @assessment.ServiceColorCode;">@assessment.ServiceCode</strong>
                                                            &nbsp;
                                                            <span id="assessment-todo-total-label" class="small label @(assessment.ToDoCount == 0 ? "label-success" : "label-danger")">@assessment.ToDoCount</span>
                                                            <span id="assessment-waiting-total-label" class="small label @(assessment.WaitingCount == 0 ? "label-success" : "label-warning")">@assessment.WaitingCount</span>
                                                            &nbsp;
                                                            <a data-toggle="collapse" href="#assessment-@assessment.Id">@assessment.Title</a>
                                                            @Html.Partial("_ServiceStatus", assessment.ServiceStatusId, new ViewDataDictionary())
                                                        </div>
                                                        <div id="assessment-@assessment.Id" class="collapse">
                                                            <div style="padding-top: 25px;">
                                                                <a class="pull-left" target="_blank" href="~/ServiceRequest/Details/@assessment.Id"><i class="glyphicon glyphicon-list-alt"></i></a>
                                                                &nbsp;
                                                                <a target="_blank" href="@assessment.BoxCaseFolderURL"><img height="22" width="22" src="~/Content/images/box.jpg" /></a>
                                                                &nbsp;&nbsp;
                                                                @foreach (var person in assessment.People.Where(p => p.Id != Model.SelectedUserId))
                                                                {
                                                                    <span data-toggle="modal" title="@person.DisplayName" data-target="#assessment-@assessment.Id-person-@person.Id" data-trigger="focus" data-container="body" tabindex="-1">
                                                                        <span title="@(!string.IsNullOrEmpty(person.DisplayName) ? person.DisplayName : "Unassigned")"
                                                                              class="btn btn-sm btn-circle disabled"
                                                                              style="cursor: pointer; color: white; background-color: @(!string.IsNullOrEmpty(person.ColorCode) ? person.ColorCode : "red")">
                                                                            <span class="small">@(!string.IsNullOrEmpty(person.Initials) ? person.Initials : "?")</span>
                                                                        </span>
                                                                    </span>
                                                                    <div id="assessment-@assessment.Id-person-@person.Id" class="modal fade" tabindex="-1" role="dialog">
                                                                        <div class="modal-dialog modal-sm">
                                                                            <div class="modal-content">
                                                                                <div class="modal-header">
                                                                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                                                                                    <h4 class="modal-title" id="myModalLabel">@person.DisplayName</h4>
                                                                                </div>
                                                                                <div class="modal-body">
                                                                                    @foreach (var task in person.Tasks)
                                                                                    {
                                                                                        <div>
                                                                                            @Html.Partial("_TaskStatusLabel", task) @task.Name
                                                                                        </div>
                                                                                    }
                                                                                </div>
                                                                                <div class="modal-footer">
                                                                                    <button type="button" class="btn btn-default" data-dismiss="modal">Ping</button>
                                                                                </div>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                }
                                                            </div>
                                                            <div style="padding-top: 15px;">
                                                                @foreach (var task in assessment.People.First(p => p.Id == Model.SelectedUserId).Tasks)
                                                                {
                                                                    <form action="~/Dashboard/UpdateTaskStatus">
                                                                        <div class="checkbox">
                                                                            <label>
                                                                                <input id="task-checkbox-@task.Id" type="checkbox"
                                                                                       value="@task.IsComplete"
                                                                                       @(task.IsComplete ? "checked" : "")
                                                                                       @(task.StatusId == TaskStatuses.Waiting || task.StatusId == TaskStatuses.Obsolete ? "disabled" : "")
                                                                                       onclick="onTaskChecked(this, @task.Id, @assessment.Id, @dayFolder.DayTicks, @weekFolder.StartDateTicks);">
                                                                                @Html.Partial("_TaskStatusLabel", task) @task.Name
                                                                            </label>
                                                                        </div>
                                                                    </form>
                                                                }
                                                            </div>
                                                            <hr />
                                                        </div>
                                                        <div style="padding-top:10px"></div>
                                                    }
                                                </div>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>

                    }
                </div>
            </div>
            <div role="tabpanel" class="tab-pane panel-body" id="AddOns">
                <h1>Add Ons</h1>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="dependencies-modal">

</div>

@section Scripts{
    <script>

        function onTaskChecked(checkbox, taskId, assessmentId, day, week) {
            var params = {
                taskId: taskId,
                assessmentId: assessmentId,
                day: day,
                week: week,
                checkbox: checkbox
            }

            if (checkbox.checked) {
                console.log(taskId + ' is now checked');
            } else {
                console.log(taskId + ' is now unchecked');
            }

            $.ajax({
                type: "POST",
                url: '@Url.Content("~/Dashboard/UpdateTaskStatus")',
                data: JSON.stringify({
                    taskId: taskId,
                    isChecked: checkbox.checked,
                    serviceProviderGuid: '@Model.SelectedUserId'
                }),
                contentType: "application/json; charset=utf-8",
                success: function (result) {

                    // get the updated assessment data
                    var weekFolder = $.grep(result.WeekFolders, function (item) { return item.StartDateTicks == params.week; });

                    SetWeekTotals(weekFolder[0], week);

                    if (!weekFolder[0]) {
                        SetAllTasksToDone();
                    }
                    else {
                        var dayFolder = $.grep(weekFolder[0].DayFolders, function (item) { return item.DayTicks == params.day; });
                        if (!dayFolder[0]) {
                            SetAllTasksToDone();
                        }
                        else {
                            var assessment = $.grep(dayFolder[0].Assessments, function (item) { return item.Id == params.assessmentId; });
                            if (!assessment) {
                                SetAllTasksToDone();
                            }
                            else {
                                SetAssessmentTotals(assessment[0], params.assessmentId);
                                updateTaskStatuses(assessment[0], params.assessmentId);
                            }
                        }
                    }

                    console.log('success: ' + result);
                },
                error: function (err) {
                    alert(err.status + " - " + err.statusText);
                }
            }, this);
        }

        function SetWeekTotals(weekFolderFromResult, weekIdForEl) {
            var weekFolderEl = $('#header-weekfolder-' + weekIdForEl);

            var assessmentTotalEl = weekFolderEl.find('#assessment-total');
            var todoTotalEl = weekFolderEl.find('#todo-total');
            var waitingTotalEl = weekFolderEl.find('#waiting-total');

            assessmentTotalEl.text(weekFolderFromResult.AssessmentCount);
            todoTotalEl.text(weekFolderFromResult.ToDoCount);
            waitingTotalEl.text(weekFolderFromResult.WaitingCount);

            if (weekFolderFromResult.ToDoCount == 0)
                weekFolderEl.find('#todo-total-label').removeClass().addClass('small label label-success');
            else
                weekFolderEl.find('#todo-total-label').removeClass().addClass('small label label-danger');

            if (weekFolderFromResult.WaitingCount == 0)
                weekFolderEl.find('#waiting-total-label').removeClass().addClass('small label label-success');
            else
                weekFolderEl.find('#waiting-total-label').removeClass().addClass('small label label-warning');
        }

        function SetAssessmentTotals(assessmentFromResult, assessmentIdForEl) {
            var assessmentEl = $('#header-assessment-' + assessmentIdForEl);

            if (assessmentFromResult.ToDoCount == 0)
                assessmentEl.find('#assessment-todo-total-label').removeClass().addClass('small label label-success').text(assessmentFromResult.ToDoCount);
            else
                assessmentEl.find('#assessment-todo-total-label').removeClass().addClass('small label label-danger').text(assessmentFromResult.ToDoCount);

            if (assessmentFromResult.WaitingCount == 0)
                assessmentEl.find('#assessment-waiting-total-label').removeClass().addClass('small label label-success').text(assessmentFromResult.WaitingCount);
            else
                assessmentEl.find('#assessment-waiting-total-label').removeClass().addClass('small label label-warning').text(assessmentFromResult.WaitingCount);
        }

        function updateTaskStatuses(assessmentFromResult, assessmentIdForEl) {
            var taskStatuses = {
                "ToDo": 102,
                "InProgress": 104,
                "Waiting": 100,
                "Done": 101,
                "Obsolete": 103
            };
            var assessmentEl = $('#asessment-' + assessmentIdForEl);
            var tasksEl = assessmentEl.find("span[id^='task-statuslabel-]'");

            $.each(assessmentFromResult.People, function (index, person) {
                $.each(person.Tasks, function (index, task) {
                    taskEl = $('#task-statuslabel-' + task.Id);
                    taskEl.removeClass();
                    taskCheckboxEl = $('#task-checkbox-' + task.Id);
                    if (task.StatusId == taskStatuses.Done) {
                        MarkTaskAsDone(taskEl, taskCheckboxEl);
                    }
                    else if (task.StatusId == taskStatuses.ToDo) {
                        MarkTaskAsToDo(taskEl, taskCheckboxEl);
                    }
                    else if (task.StatusId == taskStatuses.Waiting) {
                        MarkTaskAsWaiting(taskEl, taskCheckboxEl);
                    }
                    else if (task.StatusId == taskStatuses.Obsolete) {
                        MarkTaskAsObsolete(taskEl, taskCheckboxEl);
                    }
                });
            });
        }

        function MarkTaskAsDone(label, checkbox) {
            label.addClass("label label-success").text("Done");
            checkbox.prop('disabled', false);
        }

        function MarkTaskAsToDo(label, checkbox) {
            label.addClass("label label-danger").text("To Do");
            checkbox.prop('disabled', false);
        }

        function MarkTaskAsWaiting(label, checkbox) {
            label.addClass("label label-warning").text("Waiting");
            checkbox.prop('disabled', true);
        }

        function MarkTaskAsObsolete(label, checkbox) {
            label.addClass("label label-info").text("Obsolete");
            checkbox.prop('disabled', true);
        }

        function onShowTaskHierarchy(serviceRequestId, taskId) {
            // get the html and display it in the model
            $.ajax({
                type: "GET",
                url: '@Url.Content("~/Dashboard/TaskHierarchy")' + '?serviceRequestId=' + serviceRequestId + '&taskId=' + taskId,
                contentType: "text/html",
                success: function (result) {
                    // inject the html into the modal and display it
                    var modalDiv = $("#dependencies-modal");
                    modalDiv.html(result);
                    modalDiv.modal('toggle');
                },
                error: function (err) {
                    alert(err.status + " - " + err.statusText);
                }
            }, this);
        }

    </script>
}
