@using WebApp.Library
@using Features = Orvosi.Shared.Enums.Features
@model TaskListViewModel

@{
    var session = DependencyResolver.Current.GetService<SessionService>();
    var features = session.AuthorizedFeatures;
    var identity = session.identity;
    var viewDataService = DependencyResolver.Current.GetService<ViewDataService>();
    var teamMemberSelectList = viewDataService.GetCollaborationSelectList(Model.Physician.Id);
    teamMemberSelectList.Add(new SelectListItem
    {
        Text = Model.Physician.Name,
        Value = Model.Physician.Id.ToString()
    });
    var args = ViewData.TaskListArgs_Get();
}

@functions {
    string IsOverdue(TaskViewModel task)
    {
        return task.IsOverdue || task.IsDueToday ? "text-danger" : "";
    }
    string IsSelected(int taskId)
    {
        int selectedTask;
        if (int.TryParse(this.Request.QueryString.Get("selectedTask"), out selectedTask))
        {
            return taskId == selectedTask ? "bg-info" : "";
        }
        return "";
    }
}

@if (Model.Tasks.Count() == 0)
{
    <div>No tasks are assigned to you.</div>
}
<div class="panel @(ViewBag.ViewOptions == ViewTarget.Details ? "panel-default" : null)">
    <div class="panel-body">
        <table class="table table-condensed" style="cursor:pointer;">
            @foreach (var task in Model.Tasks)
            {
                <tr id="tasklist-row-@task.Id" onclick="selectTask(@task.Id , @task.ServiceRequestId)" class="@IsSelected(task.Id)">
                    <td width="50px">
                        @if (task.TaskId == Tasks.AssessmentDay)
                        {
                            <span class="btn btn-sm btn-circle">
                                <i class="fa fa-calendar fa-lg"></i>
                            </span>
                        }
                        else
                        {
                            @Html.Partial("_Initials2", task.AssignedTo == null ? new LookupViewModel<Guid>() : task.AssignedTo)
                        }
                    </td>
                    <td width="20px">
                        @if (features.Contains(Features.ServiceRequest.UpdateTaskStatus))
                        {
                            <form action="~/ServiceRequestTask/ToggleCompleted" method="post" class="pull-left">
                                @Html.Hidden("serviceRequestTaskId", task.Id)
                                <span class="checkbox" style="margin-top:0px; margin-bottom:0px;">
                                    <label>
                                        <input id="task-checkbox-@task.Id" type="checkbox"
                                               name="isChecked"
                                               value="@(task.StatusId == TaskStatuses.Done || task.StatusId == TaskStatuses.Archive)"
                                               @(task.StatusId == TaskStatuses.Done || task.StatusId == TaskStatuses.Archive ? "checked" : "")
                                               @*@(task.StatusId == TaskStatuses.Waiting || task.StatusId == TaskStatuses.Obsolete ? "disabled" : "")*@
                                               onclick="toggleCompleted(event, this)">
                                    </label>
                                </span>
                            </form>
                        }
                    </td>
                    <td width="100px" data-toggle="tooltip" title="@("Last changed to " + task.Status.Name + " by " + (task.TaskStatusChangedDate.HasValue ? task.TaskStatusChangedBy.Name + " on " + task.TaskStatusChangedDate.Value.ToString("ddd, MMM dd") + " at " + task.TaskStatusChangedDate.Value.ToShortTimeString() : "was not recorded"))">
                        @Html.Partial("_TaskStatusLabel2", task.StatusId)
                    </td>
                    <td>
                        <span style="@(task.TaskId == Tasks.AssessmentDay || task.TaskId == Tasks.SubmitReport ? "font-size:20px;" : "")">@task.Name</span>
                        &nbsp;&nbsp;    
                        <small style="@(task.TaskId == Tasks.AssessmentDay || task.TaskId == Tasks.SubmitReport ? "font-size:20px;" : "")" class="text-muted">@task.DueDate.ToOrvosiDateFormat()</small>
                    </td>
                    <td>
                        @if (args.ViewTarget == ViewTarget.Agenda && task.TaskId == Tasks.SubmitInvoice)
                        {
                            <i class="fa fa-wrench"></i>
                        }
                    </td>
            </tr>
            }
        </table>
    </div>
</div>

<script>
    $(function () {
        $('[data-toggle="tooltip"]').tooltip({ container: 'body' });
    })
</script>