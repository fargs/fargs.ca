@using Orvosi.Data
@using Orvosi.Shared.Enums
@using WebApp.Library.Extensions
@model WebApp.ViewModels.ServiceRequestViewModels.IndexViewModel

@{
    ViewBag.Title = "Service Requests";

    var db = new OrvosiDbContext();

    ViewBag.ServiceRequestStatuses = db.LookupItems
        .Where(l => l.LookupId == Lookups.ServiceRequestStatus)
        .Select(c => new SelectListItem()
        {
            Text = c.Text,
            Value = c.Id.ToString()
        })
        .ToList();

    ViewBag.Physicians = db.Physicians
        .AsEnumerable()
        .Select(c => new SelectListItem()
        {
            Text = c.AspNetUser.GetDisplayName(),
            Value = c.Id.ToString()
        }).ToList();

    ViewBag.Staff = db.AspNetUsers
        .AsEnumerable()
        .Select(c => new SelectListItem()
        {
            Text = c.GetDisplayName(),
            Value = c.Id.ToString(),

        }).ToList();
}

<h2>Cases</h2>

<div class="row">
    <div class="col-md-2">
        <div class="well well-sm">
            <form action="@Url.Content("~/ServiceRequest/Index")" method="get">
                <div class="form-group form-group-sm">
                    <label class="control-label small">Claimant / Reference Id</label>
                    <input type="text" class="form-control" name="FilterArgs.ClaimantName" value="@Model.FilterArgs.ClaimantName" />
                </div>
                <div class="form-group form-group-sm">
                    <label class="control-label small">Id(s) (csv)</label>
                    <input type="text" class="form-control" name="FilterArgs.Ids" value="@Model.FilterArgs.Ids" />
                </div>
                <div class="form-group form-group-sm">
                    <label class="control-label small">Status</label>
                    @Html.DropDownList("FilterArgs.StatusId", new SelectList(ViewBag.ServiceRequestStatuses, "Value", "Text", Model.FilterArgs.StatusId), new { @class = "form-control" })
                </div>
                <div class="form-group form-group-sm">
                    <label class="control-label small">Sort</label>
                    <select class="form-control" name="FilterArgs.Sort">
                        <option value="Newest" @(Model.FilterArgs.Sort == "Newest" ? "selected" : string.Empty)>Newest</option>
                        <option value="Oldest" @(Model.FilterArgs.Sort == "Oldest" ? "selected" : string.Empty)>Oldest</option>
                    </select>
                </div>
                @if (User.Identity.GetRoleId() == AspNetRoles.SuperAdmin || User.Identity.GetRoleId() == AspNetRoles.CaseCoordinator || User.Identity.GetRoleId() == AspNetRoles.DocumentReviewer || User.Identity.GetRoleId() == AspNetRoles.IntakeAssistant)
                {
                    <fieldset>
                        <legend class="small">Staff Only</legend>
                        <div class="form-group form-group-sm">
                            <label class="control-label small">Physician</label>
                            @Html.DropDownList("FilterArgs.PhysicianId", new SelectList(ViewBag.Physicians, "Value", "Text", Model.FilterArgs.PhysicianId), string.Empty, new { @class = "form-control" })
                        </div>
                    </fieldset>
                }
                @if (User.Identity.GetRoleId() == AspNetRoles.SuperAdmin || User.Identity.GetRoleId() == AspNetRoles.CaseCoordinator)
                {
                    <fieldset>
                        <legend class="small">Admin Only</legend>
                        <div class="form-group form-group-sm">
                            <select class="form-control" name="FilterArgs.ShowAll">
                                <option value="false" @(Model.FilterArgs.ShowAll == false ? "selected" : string.Empty)>Only Mine</option>
                                <option value="true" @(Model.FilterArgs.ShowAll == true ? "selected" : string.Empty)>Show All</option>
                            </select>
                        </div>
                    </fieldset>
                }
                <button class="btn btn-primary">Apply</button>
            </form>
        </div>
    </div>
    <div class="col-md-10">
        <table class="table">
            <tr>
                <th class="col-md-1"></th>
                <th>
                    What
                </th>
                <th>
                    Where
                </th>
                <th>
                    When
                </th>
                <th>
                    Tasks
                </th>
                <th>
                    Id
                </th>
            </tr>

            @foreach (var item in Model.ServiceRequests)
            {
                <tr>
                    @*<td class="@(item.StatusId == ServiceRequestStatus.Open ? "bordered-left-success" : "bordered-left-warning")">*@
                    <td class="col-md-1">
                        <div class="btn-group" style="width:100px">
                            @if (item.ServiceRequestStatusId == ServiceRequestStatus.Closed)
                            {
                                <a href="~/ServiceRequest/Details/@item.Id">View</a>
                            }
                            else
                            {
                                @Html.ActionLink("View", "Details", new { id = item.Id }, new { @class = "btn btn-default" })
                                if (User.Identity.GetRoleId() == AspNetRoles.CaseCoordinator || User.Identity.GetRoleId() == AspNetRoles.SuperAdmin)
                                {
                                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="caret"></span>
                                        <span class="sr-only">Toggle Dropdown</span>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a href="~/ServiceRequest/Edit/@item.Id">Edit</a></li>
                                        @if (item.ServiceCategoryId != ServiceCategories.AddOn)
                                        {
                                            <li><a href="~/ServiceRequest/Reschedule/@item.Id">Reschedule</a></li>
                                        }
                                        <li><a href="~/ServiceRequest/ResourceAssignment/@item.Id">Resource Assignment</a></li>
                                        @if (item.ServiceStatusId != ServiceStatus.NoShow)
                                        {
                                            <li role="separator" class="divider"></li>
                                            if (item.ServiceStatusId == ServiceStatus.Cancellation || item.ServiceStatusId == ServiceStatus.LateCancellation)
                                            {
                                                <li>@Html.ActionLink("Undo Cancellation", "UndoCancel", new { id = item.Id })</li>
                                            }
                                            else
                                            {
                                                <li>@Html.ActionLink("Cancellation", "Cancel", new { id = item.Id })</li>
                                            }
                                        }
                                    </ul>
                                }
                            }
                        </div>
                    </td>
                    @if (item.ServiceRequestStatusId == ServiceRequestStatus.Closed)
                    {
                        <td colspan="4">
                            <div class="text-muted">
                                <strong>Closed</strong>
                                @item.Title
                                @Html.Partial("_ServiceStatusLabel", item.ServiceStatusId)
                            </div>
                        </td>
                    }
                    else
                    {
                        <td>
                            <strong>@item.ClaimantName</strong>
                            @if (item.ServiceStatusId == ServiceStatus.NoShow)
                            {
                                <span class="label label-danger"><strong>No Show</strong></span>
                            }
                            else if (item.ServiceStatusId == ServiceStatus.Cancellation)
                            {
                                <span class="label label-warning"><strong>Cancellation</strong></span>
                            }
                            else if (item.ServiceStatusId == ServiceStatus.LateCancellation)
                            {
                                <span class="label label-danger"><strong>Late Cancellation</strong></span>
                            }
                            <div class="text-muted">
                                @item.CompanyName<br />
                                @item.ServiceName
                            </div>
                        </td>
                        <td>
                            <strong>@item.City</strong>
                            <div class="text-muted">@item.AddressName</div>
                        </td>
                        <td>
                            @if (item.ServiceCategoryId != ServiceCategories.AddOn)
                            {
                                <div><i class="glyphicon glyphicon-calendar"></i><span class="font-bold"> @item.AppointmentDate.Value.ToString("ddd, MMM dd")</span> @item.AppointmentDate.Value.Add(item.StartTime.Value).ToShortTimeString()</div>
                            }
                            <div><i class="glyphicon glyphicon-file"></i><span class="@(item.DueDate.HasValue ? string.Empty : "text-muted")"> @(item.DueDate.HasValue ? item.DueDate.Value.ToString("ddd, MMM dd") : "Not Set")</span></div>
                        </td>
                        <td>
                            @Html.Action("NextTaskList", "ServiceRequestTask", new { serviceRequest = item, serviceRequestTasks = Model.ServiceRequestTasks.Where(srt => srt.ServiceRequestId == item.Id).ToList()})
                        </td>
                        <td>
                            <div class="btn btn-circle disabled" style="color: white; background-color: @item.PhysicianColorCode;">@item.PhysicianInitials</div>
                            <div><strong>@item.Id</strong></div>
                        </td>
                    }
                </tr>
            }

        </table>
    </div>
</div>
