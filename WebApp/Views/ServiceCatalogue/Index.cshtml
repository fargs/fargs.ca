@using Orvosi.Data
@using Orvosi.Shared.Enums
@using WebApp.Library.Extensions
@model WebApp.ViewModels.ServiceCatalogueViewModels.IndexViewModel

@{
    ViewBag.Title = "Service Catalogue";

    var db = new OrvosiDbContext();

    ViewBag.Companies = db.Companies
        .Select(c => new SelectListItem()
        {
            Text = c.Name,
            Value = c.Id.ToString(),
            Group = new SelectListGroup() { Name = c.Parent.Name }
        }).ToList();

    var services = db.Services
        .Where(c => c.ServicePortfolioId == ServicePortfolios.Physician)
        .OrderBy(c => c.Name)
        .ToList();

    ViewBag.LocationAreas = db.LocationAreas
        .OrderBy(c => c.ItemText)
        .ToList();

    ViewBag.LocationAreas.Add(new LocationArea()
    {
        LookupId = 4,
        LookupName = "Locations",
        ItemId = 0,
        ItemText = null,
        ItemValue = null
    });

    var userContext = User.Identity.GetUserContext();
}


<div class="row">
    <div class="col-md-12">
        <form action="~/ServiceCatalogue/Index/" method="get" class="form-inline">
            <div class="form-group">
                @Html.DropDownList("CompanyId", new SelectList(ViewBag.Companies, "Value", "Text", "Group.Name", Model.FilterArgs.CompanyId), "-- Select a client --", new { @class = "form-control", onchange = "this.form.submit();" })
            </div>
        </form>
    </div>
</div>
<p />
<div class="h3 lead">
    @if (Model.SelectedCompany != null)
    {
        <span>Services for @userContext.DisplayName and <strong>@Model.SelectedCompany.Name</strong></span>
    }
    else
    {
        <span>Services for @userContext.DisplayName</span>
    }
</div>

@if (Model.ServiceCatalogueRate == null)
{
    <div class="text-info">No Show Rate and Late Cancellation Rate have not been set.</div>
}
else
{
    <div>
        <form>
            <div class="form-group">
                <label class="control-label">No Show Rate</label>
                @{ var noShowFormat = Model.ServiceCatalogueRate.NoShowRate.HasValue && Model.ServiceCatalogueRate.NoShowRate > 1 ? "C2" : "0%"; }
                <input type="text" class="form-control" name="NoShowRate" value="@Model.ServiceCatalogueRate.NoShowRate.GetValueOrDefault(0).ToString(noShowFormat)" readonly />
            </div>
            <div class="form-group">
                <label class="control-label">Late Cancellation Rate</label>
                @{ var lateCancellationFormat = Model.ServiceCatalogueRate.LateCancellationRate.HasValue && Model.ServiceCatalogueRate.LateCancellationRate > 1 ? "C2" : "0%"; }
                <input type="text" class="form-control" name="NoShowRate" value="@Model.ServiceCatalogueRate.LateCancellationRate.GetValueOrDefault(0).ToString(lateCancellationFormat)" readonly />
            </div>
        </form>
    </div>
}
<a class="btn btn-primary" style="margin-bottom:20px;" href="~/@(string.Format("ServiceCatalogue/EditRates?ServiceProviderGuid={0}&CustomerGuid={1}", userContext.Id, Model.SelectedCompany != null ? Model.SelectedCompany.ObjectGuid.ToString() : string.Empty))">Set Rates</a>

<table class="table table-bordered">
    <thead>
        <tr>
            <th>
                Service
            </th>
            @foreach (var item in ViewBag.LocationAreas)
            {
                <th>
                    @item.ItemText
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var service in services.OrderBy(c => c.ServiceCategoryId).ThenBy(c => c.Name))
        {
            <tr>
                <td>
                    <div>@service.Name</div>
                </td>
                @foreach (var location in ViewBag.LocationAreas)
                {
                    <td>
                        @{
                            var serviceCatalogueItem = Model.ServiceCatalogues.SingleOrDefault(c => c.ServiceId == service.Id && c.LocationId == location.ItemId);
                        }
                        @if ((serviceCatalogueItem.ServiceCategoryId == ServiceCategories.AddOn) && (serviceCatalogueItem.LocationId ?? 0) != 0)
                        {
                            <span>N/A</span>
                        }
                        else
                        {
                            <a href="~/@(string.Format("ServiceCatalogue/Edit?UserId={0}&CompanyId={1}&LocationId={2}&ServiceId={3}", Model.FilterArgs.UserId, Model.FilterArgs.CompanyId, (location.ItemId == 0 ? null : location.ItemId), service.Id))">
                                @if (serviceCatalogueItem.Price.HasValue)
                                {
                                    <span>@serviceCatalogueItem.Price</span>
                                }
                                else
                                {
                                    <span>Edit</span>
                                }
                            </a>
                        }
                    </td>
                            }
            </tr>
                            }
    </tbody>
</table>
