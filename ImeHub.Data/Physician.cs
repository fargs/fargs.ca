// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ImeHub.Data
{

    // Physician
    public partial class Physician
    {
        public System.Guid Id { get; set; } // Id (Primary key)
        public string CompanyName { get; set; } // CompanyName (length: 250)
        public string Code { get; set; } // Code (length: 10)
        public string ColorCode { get; set; } // ColorCode (length: 10)
        public System.Guid? OwnerId { get; set; } // OwnerId
        public System.Guid ManagerId { get; set; } // ManagerId
        public short? PrimaryAddressId { get; set; } // PrimaryAddressId
        public string Designations { get; set; } // Designations (length: 128)

        // Reverse navigation

        /// <summary>
        /// Child Addresses where [Address].[PhysicianId] point to this entity (FK_Address_Physician)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Address> Addresses { get; set; } // Address.FK_Address_Physician
        /// <summary>
        /// Child Companies where [Company].[PhysicianId] point to this entity (FK_Company_Physician)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Company> Companies { get; set; } // Company.FK_Company_Physician
        /// <summary>
        /// Child PhysicianInvites where [PhysicianInvite].[PhysicianId] point to this entity (FK_PhysicianInvite_Physician)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PhysicianInvite> PhysicianInvites { get; set; } // PhysicianInvite.FK_PhysicianInvite_Physician
        /// <summary>
        /// Child TeamMembers where [TeamMember].[PhysicianId] point to this entity (FK_TeamMember_Physician)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TeamMember> TeamMembers { get; set; } // TeamMember.FK_TeamMember_Physician

        // Foreign keys

        /// <summary>
        /// Parent User pointed by [Physician].([ManagerId]) (FK_Physician_Manager)
        /// </summary>
        public virtual User Manager { get; set; } // FK_Physician_Manager

        /// <summary>
        /// Parent User pointed by [Physician].([OwnerId]) (FK_Physician_Owner)
        /// </summary>
        public virtual User Owner { get; set; } // FK_Physician_Owner

        public Physician()
        {
            Addresses = new System.Collections.Generic.List<Address>();
            Companies = new System.Collections.Generic.List<Company>();
            PhysicianInvites = new System.Collections.Generic.List<PhysicianInvite>();
            TeamMembers = new System.Collections.Generic.List<TeamMember>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
