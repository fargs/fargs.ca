@using WebApp.Library.Extensions;
@model WebApp.Areas.Admin.ViewModels.ListViewModel

<script type="text/javascript">
    // Generate client side model from server object

    var User = function(data) {
        ko.mapping.fromJS(data, {}, this);

        this.hasFocus = ko.observable(false);
        this.hasFocus.subscribe(function(newValue) {
            if (!newValue && this.Name.hasChanged(1)) {
                $.ajax({
                    type: "POST",
                    url: '@Url.Content("~/User/Update")',
                    data: ko.toJSON({
                        id: User.Id,
                        name: User.Name
                    }),
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {
                        self.Description = ko.observable(result.data.Name); // can't use self.Description(result.data.Description) because we want to set the version back to 1, otherwise you will not be able to set the value back to its original because of the hasChanged check.
                    },
                    error: function (err) {
                        alert(err.status + " - " + err.statusText);
                    }
                });
            }
        }, this);
    };

    // Add computed values
    var UserMapping = {
        create: function(options) {
            return new User(options.data);
        },
        key: function(data) {
            return ko.utils.unwrapObservable(data.Id);
        }
    };

    var vm = function() {
        self = this;

        self.newName = ko.observable();

        self.Users = ko.mapping.fromJS(@Html.Raw(Model.Users.ToJson()), UserMapping);

        self.Remove = function(record) {
            var url = '@Url.Content("~/Admin/User/Delete")';
            $.post(
                url,
                {
                    id: record.Id()
                }
            ).done(function (response) {
                //$("#AssignUsersList").html(response);
            });
        };

        self.Insert = function () {
            $.ajax({
                type: "POST",
                url: '@Url.Content("~/User/Insert")',
                data: ko.toJSON({
                    name: self.newName()
                }),
                contentType: "application/json; charset=utf-8",
                success: function (result) {
                    ko.mapping.fromJS(result.list, UserMapping, self.Users);
                    self.newName('');
                },
                error: function (err) {
                    alert(err.status + " - " + err.statusText);
                }
            });
        };
    };

    $(document).ready(function () {

        var self = this;


        $('#UserTableRows').on('click', '#SendActivationEmailButton', function(e) {
            var url = '@Url.Content("~/Admin/User/SendActivationEmail")';
            $.post(
                url,
                {
                    userId: this.attributes['data-userid'].value
                }
            ).done(function (response) {
                if (response.success == true) {
                    // display a success message
                    toastr.info("Activation email has been sent. They will be prompted to reset their password.", 'Success');
                }
                else {
                    toastr.info(response.message, 'Errors');
                }
            });
        });

        $('#UserTableRows').on('click', '#ResetPasswordButton', function(e) {
            var url = '@Url.Content("~/Admin/User/ResetPassword")';
            $.post(
                url,
                {
                    userId: this.attributes['data-userid'].value
                }
            ).done(function (response) {
                if (response.success == true) {
                    // display a success message
                    toastr.info("Reset Password email has been sent. They will be prompted to reset their password.", 'Success');
                }
                else {
                    toastr.info(response.message, 'Errors');
                }
            });
        });

        $('#UserTableRows').on('click', '#DeleteButton', function (e) {
            console.log(this.name + ' ' + this.value);
            var url = '@Url.Content("~/Admin/User/Delete")';
            $.post(
                url,
                {
                    id: this.attributes['data-userid'].value
                }
            ).done(function (response) {
                $("#UserTableRows").html(response);
            });
        });

        $('#UserTableRows').on('blur', 'input[type=date]', function (e) {
            console.log(this.name + ' ' + this.value);
            var url = '@Url.Content("~/Admin/User/Update")';
            $.post(
                url,
                {
                    id: this.attributes['data-userid'].value,
                    lockoutEndDateUtc: this.value
                }
            ).done(function (response) {
                $("#UserTableRows").html(response);
            });
        });
    });
</script>
