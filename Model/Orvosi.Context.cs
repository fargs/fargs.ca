//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OrvosiEntities : DbContext
    {
        public OrvosiEntities()
            : base("name=OrvosiEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<SpecialRequest> SpecialRequests { get; set; }
    
        [DbFunction("OrvosiEntities", "fn_Weekdays")]
        public virtual IQueryable<fn_Weekdays_Result> fn_Weekdays(Nullable<System.DateTime> startDate)
        {
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Weekdays_Result>("[OrvosiEntities].[fn_Weekdays](@StartDate)", startDateParameter);
        }
    
        [DbFunction("OrvosiEntities", "fn_Timeframe")]
        public virtual IQueryable<fn_Timeframe_Result> fn_Timeframe(string datePart, Nullable<System.DateTime> startDate, Nullable<System.DateTime> endDate)
        {
            var datePartParameter = datePart != null ?
                new ObjectParameter("DatePart", datePart) :
                new ObjectParameter("DatePart", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var endDateParameter = endDate.HasValue ?
                new ObjectParameter("EndDate", endDate) :
                new ObjectParameter("EndDate", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<fn_Timeframe_Result>("[OrvosiEntities].[fn_Timeframe](@DatePart, @StartDate, @EndDate)", datePartParameter, startDateParameter, endDateParameter);
        }
    
        public virtual ObjectResult<GetPhysicianGoogleAccount_Result> GetPhysicianGoogleAccount(string id)
        {
            var idParameter = id != null ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetPhysicianGoogleAccount_Result>("GetPhysicianGoogleAccount", idParameter);
        }
    
        public virtual int SpecialRequest_Insert(string physicianId, Nullable<int> serviceId, string timeframe, string additionalNotes, Nullable<System.DateTime> modifiedDate, string modifiedUser)
        {
            var physicianIdParameter = physicianId != null ?
                new ObjectParameter("PhysicianId", physicianId) :
                new ObjectParameter("PhysicianId", typeof(string));
    
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var timeframeParameter = timeframe != null ?
                new ObjectParameter("Timeframe", timeframe) :
                new ObjectParameter("Timeframe", typeof(string));
    
            var additionalNotesParameter = additionalNotes != null ?
                new ObjectParameter("AdditionalNotes", additionalNotes) :
                new ObjectParameter("AdditionalNotes", typeof(string));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var modifiedUserParameter = modifiedUser != null ?
                new ObjectParameter("ModifiedUser", modifiedUser) :
                new ObjectParameter("ModifiedUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpecialRequest_Insert", physicianIdParameter, serviceIdParameter, timeframeParameter, additionalNotesParameter, modifiedDateParameter, modifiedUserParameter);
        }
    
        public virtual int SpecialRequest_Update(Nullable<short> id, string physicianId, Nullable<int> serviceId, string timeframe, string additionalNotes, Nullable<System.DateTime> modifiedDate, string modifiedUser)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(short));
    
            var physicianIdParameter = physicianId != null ?
                new ObjectParameter("PhysicianId", physicianId) :
                new ObjectParameter("PhysicianId", typeof(string));
    
            var serviceIdParameter = serviceId.HasValue ?
                new ObjectParameter("ServiceId", serviceId) :
                new ObjectParameter("ServiceId", typeof(int));
    
            var timeframeParameter = timeframe != null ?
                new ObjectParameter("Timeframe", timeframe) :
                new ObjectParameter("Timeframe", typeof(string));
    
            var additionalNotesParameter = additionalNotes != null ?
                new ObjectParameter("AdditionalNotes", additionalNotes) :
                new ObjectParameter("AdditionalNotes", typeof(string));
    
            var modifiedDateParameter = modifiedDate.HasValue ?
                new ObjectParameter("ModifiedDate", modifiedDate) :
                new ObjectParameter("ModifiedDate", typeof(System.DateTime));
    
            var modifiedUserParameter = modifiedUser != null ?
                new ObjectParameter("ModifiedUser", modifiedUser) :
                new ObjectParameter("ModifiedUser", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SpecialRequest_Update", idParameter, physicianIdParameter, serviceIdParameter, timeframeParameter, additionalNotesParameter, modifiedDateParameter, modifiedUserParameter);
        }
    }
}
