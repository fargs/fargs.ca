@using WebApp.Library.Helpers
@using WebApp.Library.Extensions
@using Orvosi.Shared.Enums
@using Orvosi.Shared.Enums.Features
@using Orvosi.Data
@using WebApp.Library
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    var roleId = User.Identity.GetRoleId();
    var roles = new Guid[3] { AspNetRoles.AppTester, AspNetRoles.SuperAdmin, AspNetRoles.CaseCoordinator };

    var features = User.Identity.GetFeatures();

    var context = ContextPerRequest.db;

    Guid userId = User.Identity.GetGuidUserId();

    Guid serviceProviderId = User.Identity.GetUserContext().Id;

    Orvosi.Shared.Model.Invoice selectedInvoice = null;
    var paramInvoiceId = Request.QueryString.Get("invoiceId");
    int invoiceId;
    if (int.TryParse(paramInvoiceId, out invoiceId))
    {
        selectedInvoice = context.Invoices.Where(i => i.Id == invoiceId).Select(i => new Orvosi.Shared.Model.Invoice
        {
            Id = i.Id,
            InvoiceNumber = i.InvoiceNumber
        }).Single();
    }
}

<p class="h3 text-muted">Accounting</p>

@if (features.Contains(Accounting.SearchInvoices))
{
<div class="row">
    <div class="col-xs-12 col-sm-8 col-md-4">
        <form action="~/Accounting/AllInvoices/" method="get">
            @Html.Hidden("ServiceProviderId", serviceProviderId)
            <div class="form-group">
                <select class="find-invoice-select" name="InvoiceId" value="@invoiceId" style="width:100%" onchange="this.form.submit()">
                    @if (selectedInvoice != null)
                    {
                        <option value="@selectedInvoice.Id" selected>@selectedInvoice.InvoiceNumber</option>
                    }
                </select>
            </div>
        </form>
    </div>
</div>
}

<ul class="nav nav-tabs">
    @if (features.Contains(Accounting.ViewUnsentInvoices))
    {
        <li role="presentation" class="@Html.IsActive("Accounting", "UnsentInvoices")"><a href="~/Accounting/UnsentInvoices?@(Request.QueryString)">Unsent</a></li>
    }
    @if (features.Contains(Accounting.ViewUnpaidInvoices))
    {
        <li role="presentation" class="@Html.IsActive("Accounting", "UnpaidInvoices")"><a href="~/Accounting/UnpaidInvoices?@(Request.QueryString)">Unpaid</a></li>
    }
    @if (features.Contains(Accounting.SearchInvoices))
    {
        <li role="presentation" class="@Html.IsActive("Accounting", "AllInvoices")"><a href="~/Accounting/AllInvoices?@(Request.QueryString)">All</a></li>
    }
    @if (features.Contains(Accounting.Analytics))
    {
        <li role="presentation" class="@Html.IsActive("Accounting", "Analytics")"><a href="~/Accounting/Analytics?@(Request.QueryString)">Analytics</a></li>
    }
    @if (features.Contains(Accounting.CreateInvoice))
    {
        <li role="presentation" class="pull-right @Html.IsActive("Accounting", "CreateInvoice")"><a href="~/Accounting/CreateInvoice?@(Request.QueryString)"><i class="fa fa-plus-circle fa-lg" style="color:green"></i></a></li>
    }
</ul>
<section class="tab-content">
    <div role="tabpanel" class="tab-pane active panel-body">
        @RenderBody()
    </div>
</section>

@section Scripts{

    <script type="text/javascript">

        function formatInvoiceListItem(invoice) {
            if (invoice.loading) return invoice.text;

            var markup =
                '<div class="clearfix">' +
                    '<div><strong>' + invoice.InvoiceNumber + '</strong></div>' +
                    '<div><strong>' + invoice.ServiceRequest.ServiceCode + '</strong> <strong>' + invoice.ServiceRequest.ClaimantName + '</strong></div>' +
                    '<div><em>' + moment(new Date(parseInt(invoice.InvoiceDate.substr(6)))).format('YYYY-MM-DD') + '</em> ' + invoice.ServiceRequest.City + '</div>' +
                '</div>';

            return markup;
        }

        function formatInvoiceListItemSelection(invoice) {
            return invoice.InvoiceNumber || invoice.text;
        }

        $(document).ready(function () {

            var url = '@Url.Content("~/Accounting/Search")';

            $findInvoiceSelect = $(".find-invoice-select");
            $findInvoiceSelect.select2({
                placeholder: 'Find an invoice',
                allowClear: true,
                ajax: {
                    url: url,
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            serviceProviderId: '@serviceProviderId',
                            searchTerm: params.term, // search term
                            page: params.page
                        };
                    },
                    processResults: function (data, params) {
                        // parse the results into the format expected by Select2
                        // since we are using custom formatting functions we do not need to
                        // alter the remote JSON data, except to indicate that infinite
                        // scrolling can be used
                        params.page = params.page || 1;

                        return {
                            results: data.items,
                            pagination: {
                                more: (params.page * 30) < data.total_count
                            }
                        };
                    },
                    cache: true
                },
                escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
                minimumInputLength: 3,
                templateResult: formatInvoiceListItem, // omitted for brevity, see the source of this page
                templateSelection: formatInvoiceListItemSelection // omitted for brevity, see the source of this page
            });

        });
    </script>

    @RenderSection("scripts", required: false)
}