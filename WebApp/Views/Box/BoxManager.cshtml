@using Orvosi.Data
@using WebApp.Library
@using Features = Orvosi.Shared.Enums.Features
@model WebApp.ViewModels.ServiceRequestViewModels.BoxManagerViewModel

@{
    var roleId = User.Identity.GetRoleId();
    var userId = User.Identity.GetGuidUserId();
    var physicianId = User.Identity.GetUserContext().Id;
    var features = User.Identity.GetFeatures();

    var vds = ContextPerRequest.ViewDataService;
    var userSelectList = vds.GetCollaborationSelectList(physicianId);
}


<div>
    <div class="row">
        <div class="col-sm-12">
            @if (Model.BoxFolder != null)
            {
                <small><strong>@Model.BoxFolder.Name</strong></small>
                if (Model.BoxFolder.Name != Model.ExpectedFolderName)
                {
                    <div class="text-danger">Expected folder name: @Model.ExpectedFolderName</div>
                        <form onclick="updateBoxCaseFolderName(@Model.ServiceRequestId)">
                            <button type="button" class="btn btn-danger">Update Case Folder Name</button>
                        </form>
                }
            }
            else
            {
                if (features.Contains(Features.ServiceRequest_Box.CreateFolder))
                {
                    <div>
                        <form onclick="createBoxCaseFolder(@Model.ServiceRequestId)">
                            <button type="button" class="btn btn-primary">Create Case Folder</button>
                        </form>
                    </div>
                }
            }
        </div>
    </div>
    @if (features.Contains(Features.ServiceRequest_Box.ManageBoxFolder))
    {
        if (Model.BoxFolder != null)
        {
            foreach (var item in Model.Resources)
            {
                <div class="row top-buffer">
                    <div class="col-sm-12">
                        <span title="@string.Concat(item.Resource.GetDisplayName(), " - ", string.Join(" & ", item.Resource.AspNetUserRoles.Select(r => r.RoleId)))" class="btn btn-circle disabled pull-left" style="cursor: default; color: white; background-color: @item.Resource.ColorCode;">@item.Resource.GetInitials()</span>
                        @if (string.IsNullOrEmpty(item.Resource.BoxUserId))
                        {
                            <div>User does not have a box account.</div>
                        }
                        else if (item.BoxFolder == null)
                        {
                            <form onclick="shareBoxFolder(this)">
                                @Html.Hidden("ServiceRequestId", Model.ServiceRequestId)
                                @Html.Hidden("FolderId", Model.BoxFolder.Id)
                                @Html.Hidden("UserId", item.Resource.Id)
                                &nbsp;
                                <button type="button" class="btn btn-sm btn-primary">Share</button>
                            </form>
                        }
                        else if (item.BoxFolder != null && item.Resource.ServiceRequestBoxCollaborations.FirstOrDefault(b => b.ServiceRequestId == Model.ServiceRequestId) != null)
                        {
                            var boxCollaboration = item.Resource.ServiceRequestBoxCollaborations.FirstOrDefault(b => b.ServiceRequestId == Model.ServiceRequestId);
                            if (boxCollaboration != null)
                            {
                                var collaboration = Model.BoxFolderCollaborations.SingleOrDefault(c => c.Id == boxCollaboration.BoxCollaborationId);
                                if (collaboration != null)
                                {
                                    <form onclick="unshareBoxFolder(this)" class="pull-left">
                                        @Html.Hidden("CollaborationId", boxCollaboration.BoxCollaborationId)
                                        @Html.Hidden("ServiceRequestId", Model.ServiceRequestId)
                                        &nbsp;
                                        <button type="button" class="btn btn-sm btn-primary" title="@string.Format("Box Collaboration Id: {0}", collaboration.Id)">Unshare</button>
                                    </form>
                                    if (item.BoxFolder.SyncState == "synced")
                                    {
                                        <form onclick="unsyncBoxFolder(this)" class="pull-left">
                                            @Html.Hidden("ServiceRequestId", Model.ServiceRequestId)
                                            @Html.Hidden("FolderId", Model.BoxFolder.Id)
                                            @Html.Hidden("BoxUserId", item.Resource.BoxUserId)
                                            &nbsp;
                                            <button type="button" class="btn btn-sm btn-primary" title="This removes the folder from the users BoxSync folder but it is still accessible from the box website.">Unsync</button>
                                        </form>
                                    }
                                    else
                                    {
                                        <form onclick="syncBoxFolder(this)" class="pull-left">
                                            @Html.Hidden("ServiceRequestId", Model.ServiceRequestId)
                                            @Html.Hidden("FolderId", Model.BoxFolder.Id)
                                            @Html.Hidden("BoxUserId", item.Resource.BoxUserId)
                                            &nbsp;
                                            <button type="button" class="btn btn-sm btn-primary" title="This syncs the folder to the users computer using BoxSync">Sync</button>
                                        </form>
                                    }
                                }
                                else
                                {
                                    <div> Something went wrong</div>
                                }
                            }
                        }
                        else
                        {
                            <span class="small">&nbsp;Already has higher level access.</span>
                            if (item.BoxFolder.SyncState == "synced")
                            {
                                <form onclick="unsyncBoxFolder(this)" class="pull-left">
                                    @Html.Hidden("ServiceRequestId", Model.ServiceRequestId)
                                    @Html.Hidden("FolderId", Model.BoxFolder.Id)
                                    @Html.Hidden("BoxUserId", item.Resource.BoxUserId)
                                    &nbsp;
                                    <button type="button" class="btn btn-sm btn-primary" title="This removes the folder from the users BoxSync folder but it is still accessible from the box website.">Unsync</button>
                                </form>
                            }
                            else
                            {
                                <form onclick="syncBoxFolder(this)" class="pull-left">
                                    @Html.Hidden("ServiceRequestId", Model.ServiceRequestId)
                                    @Html.Hidden("FolderId", Model.BoxFolder.Id)
                                    @Html.Hidden("BoxUserId", item.Resource.BoxUserId)
                                    &nbsp;
                                    <button type="button" class="btn btn-sm btn-primary" title="This syncs the folder to the users computer using BoxSync">Sync</button>
                                </form>
                            }
                        }
                    </div>
                </div>
            }
        }
    }
</div>
@if (features.Contains(Features.ServiceRequest_Box.Reconcile))
{
    if (Model.BoxFolder != null)
    {
        <h4>Integration Reconciliation</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>
                        Shared Collaboration Id
                    </th>
                    <th>
                        Orvosi
                    </th>
                    <th>
                        Box
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Reconciliations)
                {
                    <tr>
                        <td>@item.BoxCollaborationId</td>
                        <td>
                            @foreach (var inner in item.OrvosiCollaborations)
                            {
                                if (!item.BoxCollaborations.Any())
                                {
                                    <button class="btn btn-link">Delete</button>
                                }
                                <span>
                                    @inner.AspNetUser.GetDisplayName()
                                </span>
                            }
                        </td>
                        <td>
                            @foreach (var inner in item.BoxCollaborations)
                            {
                                if (inner.AccessibleBy.Type == BoxType.user.ToString())
                                {
                                    <span>@((inner.AccessibleBy as Box.V2.Models.BoxUser).Name)</span>
                                }
                                else if (inner.AccessibleBy.Type == BoxType.group.ToString())
                                {
                                    <span>@((inner.AccessibleBy as Box.V2.Models.BoxGroup).Name)</span> <span class="label label-warning">Group</span>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
        @*<form action="~/ServiceRequest/AddCollaboration/" method="get" class="form-inline">
                <div class="form-group">
                    @Html.DropDownList("userId", new SelectList(userSelectList, "Value", "Text", "Group.Name", new { }), "-- User --", new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <button class="btn btn-primary">Share</button>
                </div>
            </form>*@
