@using WebApp.Library
@using e = Orvosi.Shared.Enums
@model WebApp.ViewModels.DashboardViewModels.TaskViewModel

<div class="btn-group">
    <button type="button" class="btn btn-link dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
        <i class="glyphicon glyphicon-menu-hamburger"></i>
    </button>
    <ul class="dropdown-menu dropdown-menu-right dropdown-menu-large">
        <li>
            <form action="~/ServiceRequestTask/PickUp" method="post">
                @Html.AntiForgeryToken()
                @Html.Hidden("serviceRequestTaskId", Model.Task.Id)
                <input type="submit" value="Pick Up" class="btn btn-link" />
            </form>
        </li>
        <li>
            <form action="~/ServiceRequestTask/ToggleObsolete" method="post">
                @Html.AntiForgeryToken()
                @Html.Hidden("serviceRequestTaskId", Model.Task.Id)
                <input type="submit" value="@(Model.Task.StatusId == e.TaskStatuses.Obsolete ? "Undo Obsolete" : "Obsolete")" class="btn btn-link" />
            </form>
        </li>
        <li>
            <form action="~/ServiceRequestTask/AssignTo" method="post">
                @Html.AntiForgeryToken()
                @Html.Hidden("serviceRequestTaskId", Model.Task.Id)
                <div class="form-group">
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Task.AssignedTo, new SelectList(Model.UserSelectList, "Value", "Text"), string.Empty, new { @class = "form-control", placeholder="Assign To", onchange = "this.form.submit();" })
                        @Html.ValidationMessageFor(model => model.Task.AssignedTo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </form>
        </li>
    </ul>
</div>