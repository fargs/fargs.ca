@using Features = Orvosi.Shared.Enums.Features
@using WebApp.Library.Extensions
@model WebApp.ViewModels.PhysicianCompanyViewModels.IndexViewModel

@{
    var features = User.Identity.GetFeatures();
    var userId = User.Identity.GetUserContext().Id;
}

<h1>Companies </h1>

@if (features.Contains(Features.PhysicianCompany.Create))
{
    <div class="row">
        <div class="col-xs-12 col-sm-8 col-md-4">
            <form action="~/Company/Create/" method="post" id="add-company-form">
                <div class="input-group">
                    <select class="find-company-select" id="companyId" name="companyId" style="width:100%"></select>
                    <span class="input-group-btn">
                        <button class="btn btn-success btn-sm" onclick="addCompany()" type="button">Add</button>
                    </span>
                </div>
            </form>
        </div>
    </div>
}
<p></p>
<div id="company-list">
    @Html.Action("List", "PhysicianCompany", null)
</div>

@section Scripts{

<script type="text/javascript">

    function addCompany() {
        var url = '@Url.Content("~/PhysicianCompany/Create")';
        var form = $('#add-company-form');

        $.post(url,
            form.serialize()
        )
        .done(function (result) {
            if (result.success) {
                toastr.success("Company added successfully");
                refreshCompanyList();
            }
            else {
                toastr.error(result.errorMessage);
            }
        });
    }

    function removeCompany(id) {
        var url = '@Url.Content("~/PhysicianCompany/Remove?id=")' + id;

        $.post(url)
        .done(function (result) {
            if (result.success) {
                toastr.success("Company removed successfully");
                refreshCompanyList();
            }
            else {
                toastr.error(result.errorMessage);
            }
        });
    }

    function refreshCompanyList() {
        let url = '@Url.Content("~/PhysicianCompany/List")';
        $.get(url)
            .done(function (result) {
                $('#company-list').html(result);
            })
            .error(function () {
                window.location.reload();
            });
    }

    function formatCompanyListItem(company) {
        if (company.loading) return company.text;

        var markup =
            '<div>' +
                company.Name
        '</div>';

        return markup;
    }

    function formatCompanyListItemSelection(company) {
        return company.Name || company.text;
    }

    $(document).ready(function () {

        var url = '@Url.Content("~/PhysicianCompany/Search")';

        $findCompanySelect = $(".find-company-select");
        $findCompanySelect.select2({
            placeholder: 'Find a company',
            allowClear: true,
            ajax: {
                url: url,
                dataType: 'json',
                delay: 250,
                data: function (params) {
                    return {
                        searchTerm: params.term, // search term
                        page: params.page
                    };
                },
                processResults: function (data, params) {
                    // parse the results into the format expected by Select2
                    // since we are using custom formatting functions we do not need to
                    // alter the remote JSON data, except to indicate that infinite
                    // scrolling can be used
                    params.page = params.page || 1;

                    return {
                        results: data.items,
                        pagination: {
                            more: (params.page * 30) < data.total_count
                        }
                    };
                },
                cache: false
            },
            escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 3,
            templateResult: formatCompanyListItem, // omitted for brevity, see the source of this page
            templateSelection: formatCompanyListItemSelection, // omitted for brevity, see the source of this page
            tags: true
        });
    });
</script>
}