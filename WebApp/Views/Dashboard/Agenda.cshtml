@using WebApp.Library.Extensions
@using WebApp.ViewModels.CalendarViewModels
@model DayViewModel
@{
    Layout = "~/Views/Dashboard/_Layout.cshtml";
    var roleId = User.Identity.GetRoleId();
    var userId = User.Identity.GetGuidUserId();
    var physicianId = User.Identity.GetUserContext().Id;
    var features = User.Identity.GetFeatures();
}

@Html.Action("CalendarNavigation")

@Html.Partial("~/Views/ServiceRequest/Agenda.cshtml", Model)

@Html.Partial("~/Views/Note/_NoteModalForm.cshtml")

@Html.Partial("ModalContainer")


@section Scripts {

    <script src="@Url.Content("~/signalr/hubs")"></script>

    @Html.Partial("~/Views/ServiceRequestTask/TaskListJS.cshtml")
    @Html.Partial("~/Views/Cancellation/CancellationJS.cshtml")
    @Html.Partial("~/Views/ServiceRequest/CaseJS.cshtml")
    @Html.Partial("~/Views/Reschedule/_RescheduleJS.cshtml")
    @Html.Partial("~/Views/ServiceRequest/InvoiceJS.cshtml")

    @if (Model != null)
    {
        var ids = Model.Cases.Any() ? Model.Cases.Select(c => c.ServiceRequestId).ToArray() : new int[0];
        <span>
            @Html.Partial("~/Views/ServiceRequestMessage/_ServiceRequestMessageJS.cshtml", new ServiceRequestMessageJSViewModel { ServiceRequestIds = ids })
        </span>
    }

    <script>

        let serviceRequestId = null;

        $('#AppointmentDatePicker').datepicker({
            format: 'yyyy-mm-dd',
            autoclose: true
        })

        function refreshServiceStatus(serviceRequestId) {

            $.ajax({
                type: "GET",
                url: '@Url.Content("~/Dashboard/RefreshServiceStatus?serviceRequestId=")' + serviceRequestId,
                contentType: "text/html",
                success: function (result) {
                    $('#service-status-' + serviceRequestId).replaceWith(result);
                },
                error: function (err) {
                    // undo the UI change made before the ajax call
                    window.location.reload();
                }
            }, this);

        }

        function onEditNote(serviceRequestId) {

            $.ajax({
                type: "GET",
                url: '@Url.Content("~/Note/EditNote?serviceRequestId=")' + serviceRequestId,
                contentType: "application/json; charset=utf-8",
                success: function (result) {

                    var modalDiv = $("#edit-note-modal");
                    modalDiv.find('#ServiceRequestId').val(result.ServiceRequestId); // hidden field
                    modalDiv.find('#Notes').val(result.Notes);
                    modalDiv.find('#ClaimantName').html(result.ClaimantName);

                    modalDiv.modal('toggle');
                },
                error: function (err) {
                    alert(err.status + " - " + err.statusText);
                }
            }, this);
        }

        $("#edit-note-form").submit(function (e) {

            var url = '@Url.Content("~/Note/UpdateNote")';

            var form = $("#edit-note-form");
            var serviceRequestId = form.find('#ServiceRequestId').val();

            $.ajax({
                type: "POST",
                url: url,
                data: form.serialize(), // serializes the form's elements.
                success: function () {
                    $("#edit-note-modal").modal('toggle');
                    toastr.success("The note was updated successfully.");
                    refreshNote(serviceRequestId);
                }
            });
            e.preventDefault();
        });

        function refreshNote(serviceRequestId) {

            var url = '@Url.Content("~/ServiceRequest/RefreshNote")';
            $.get(url, {
                serviceRequestId: serviceRequestId,
                allowEdit: true
            }).done(function (result) {
                $('#note-' + serviceRequestId).replaceWith(result);
            });

        }

        function taskChanged(serviceRequestTaskId, serviceRequestId) {
            let url = '@Url.Content("~/ServiceRequestTask/TaskList")';
            $.get(url,
                {
                    ServiceRequestId: serviceRequestId,
                    ViewTarget: '@ViewTarget.Agenda',
                    ViewFilter: '@TaskListViewModelFilter.CriticalPathOrAssignedToUser'
                })
                .done(function (result) {
                    document.getElementById('tasklist-container-' + serviceRequestId).innerHTML = result;
                    selectTask(serviceRequestTaskId);
                });
        }

        function taskDeleted(serviceRequestTaskId, serviceRequestId) {
            let url = '@Url.Content("~/ServiceRequestTask/TaskList")';
            $.get(url,
                {
                    ServiceRequestId: serviceRequestId,
                    ViewTarget: '@ViewTarget.Agenda',
                    ViewFilter: '@TaskListViewModelFilter.CriticalPathOrAssignedToUser'
                })
                .done(function (result) {
                    document.getElementById('tasklist-container-' + serviceRequestId).innerHTML = result;
                    $('#task-editform-container-' + serviceRequestId).html("");
                });
        }

        function tasklistChanged(serviceRequestId) {
            let url = '@Url.Content("~/ServiceRequestTask/TaskList")';

            $.get(url, {
                ServiceRequestId: serviceRequestId,
                ViewTarget: '@ViewTarget.Agenda',
                ViewFilter: '@TaskListViewModelFilter.CriticalPathOrAssignedToUser'
            })
            .done(function (result) {
                document.getElementById('tasklist-container-' + serviceRequestId).innerHTML = result;
                //joinRoom(serviceRequestId);
                //refreshValidationResults(serviceRequestId);
            })
            .always(function () {
                //loader.hide();
            });

            $.get('@Url.Content("~/ServiceRequest/AgendaActionMenu/")', {
                serviceRequestId: serviceRequestId
            })
            .done(function (result) {
                $('#actionmenu-' + serviceRequestId).html(result);
            });
        }

        function serviceRequestStatusChanged(serviceRequestId) {
            $.get('@Url.Content("~/ServiceRequest/Case")',
                {
                    serviceRequestId: serviceRequestId,
                    viewOptions: '@ViewTarget.Agenda',
                })
                .done(function (result) {
                    document.getElementById('case-container-' + serviceRequestId).innerHTML = result;
                });
        }

        function taskSelected(serviceRequestTaskId) {

            $.get('@Url.Content("~/ServiceRequestTask/GetRelatedServiceRequestId/")', {
                serviceRequestTaskId: serviceRequestTaskId
            })
            .done(function (data) {
               // refresh the edit task form
                $.get('@Url.Content("~/ServiceRequestTask/ShowEditTaskForm/")', {
                    serviceRequestTaskId: serviceRequestTaskId
                })
                .done(function (result) {
                    $('#task-editform-container-' + data.serviceRequestId).html(result);
                });

                // refresh the task tools
                $.get('@Url.Content("~/ServiceRequestTask/ShowTaskTools/")', {
                    serviceRequestTaskId: serviceRequestTaskId
                })
                .done(function (result) {
                    $('#task-tools-container-' + data.serviceRequestId).html(result);
                });
            });
        }

        function showTaskTools(serviceRequestTaskId, serviceRequestId) {

            taskSelected(serviceRequestTaskId, serviceRequestId);

            $('#tabs-' + serviceRequestId + ' a[href="#task-details-' + serviceRequestId + '"]').tab('show');
        }

        function onCreateInvoiceForServiceRequest(serviceRequestId) {
            let url = '@Url.Content("~/Accounting/Create")';

            $.post(url, {
                serviceRequestId: serviceRequestId
            })
            .done(function (result) {
                toastr.success("Invoice created successfully");
                invoiceChanged(result.id, serviceRequestId);
            });
        }

        function invoiceChanged(invoiceId) {
            $.get('@Url.Content("~/Accounting/GetRelatedServiceRequestId/")', {
                invoiceId: invoiceId
            })
            .done(function (data) {

                $.get('@Url.Content("~/ServiceRequest/GetInvoices/")', {
                    serviceRequestId: data.serviceRequestId
                })
                .done(function (result) {
                    $('#invoice-list-container-' + data.serviceRequestId).html(result);
                    console.log('from invoice changed');
                });

            });
        }

        function invoiceListChanged(serviceRequestId) {
            $.get('@Url.Content("~/ServiceRequest/GetInvoices/")', {
                serviceRequestId: serviceRequestId
            })
            .done(function (result) {
                $('#invoice-list-container-' + serviceRequestId).html(result);
                console.log('from invoice list changed');
            });
        }
    </script>
}
