@using WebApp.Library
@using Orvosi.Data
@using Features = Orvosi.Shared.Enums.Features
@using WebApp.Components.Grid
@model TaskGridViewModel

@{ 
    var identity = User.Identity.GetClaimsIdentity();
    var features = identity.GetFeatures();
}

@helper ShowTree(IEnumerable<Orvosi.Data.ServiceRequestTask> tasks, byte level)
{
    <div style="margin-left:30px;">
        @foreach (var item in tasks)
        {
            var rowId = Guid.NewGuid().ToString();
            <div class="row">
                <div class="col-xs-12">
                    <span class="pull-left" style="margin-right: 5px;">
                        @Html.Partial("_TaskButton", item)
                    </span>
                    <span>
                        @(ViewBag.UseShortName ? item.ShortName : item.TaskName)
                    </span>
                    <span class="pull-right" style="margin-left: 5px;">
                        @if (item.AssignedTo.HasValue)
                        {
                            @Html.Partial("_Initials", item.AspNetUser_AssignedTo)
                        }
                    </span>
                    @if (item.GetStatus(SystemTime.Now()) == TaskStatuses.Done)
                    {
                        <span class="small pull-right">@item.CompletedDate.Value.ToString("ddd, MMM dd") at @item.CompletedDate.Value.ToShortTimeString()</span>
                    }
                    else if (item.GetStatus(SystemTime.Now()) == TaskStatuses.Waiting)
                    {
                        <span class="pull-right">
                            <a href="#task-row-@rowId">
                                <span class="badge">
                                    @(item.DependsOn == "ExamDate" ? "E" : item.GetDependents().Count().ToString())
                                </span>
                            </a>
                        </span>
                    }
                    @if (item.GetStatus(SystemTime.Now()) == TaskStatuses.Waiting)
                    {
                        <div id="task-row-@rowId">
                            @ShowTree(item.GetDependents(), level++)
                        </div>
                    }

                </div>
            </div>
        }
    </div>
}

@if (Model.Data.Count() == 0)
{
    <div>No tasks are assigned to you.</div>
}
<div class="panel @(ViewBag.ViewOptions == ViewTarget.Details ? "panel-default" : null)">

    <div class="panel-body">
        <table class="table table-condensed table-hover">
            <thead>
                <tr>
                    @foreach (var col in Model.Columns)
                    {
                        <th>@Html.GridColumnHeader(col, Model.Args)</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var task in Model.Data)
                {
                    @Html.Partial("Task", task)
                }
            </tbody>
            <tfoot>
                <tr>
                    <td colspan="12">
                        <span>
                            <strong>@Model.Total </strong>records
                        </span>
                        <span class="pull-right">
                            Showing page
                            <strong>@Model.Pager.CurrentPage </strong>
                            of
                            <strong>@Model.Pager.PageCount </strong>
                            &nbsp;&nbsp; Page Size
                            <select onchange="taskgridArgsChanged(this.value)">
                                <option></option>
                                <option value="@Request.Url.AddQuery("take", "10")">10</option>
                                <option value="@Request.Url.AddQuery("take", "20")">20</option>
                                <option value="@Request.Url.AddQuery("take", "40")">40</option>
                                <option value="@Request.Url.AddQuery("take", "60")">60</option>
                                <option value="@Request.Url.AddQuery("take", "100")">100</option>
                            </select>
                        </span>
                    </td>
                </tr>
            </tfoot>
        </table>
    </div>
</div>