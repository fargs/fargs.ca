@using WebApp.Library.Extensions
@using WebApp.ViewDataModels
@using WebApp.ViewModels.CalendarViewModels
@model IEnumerable<DayViewModel>
@{
    var roleId = User.Identity.GetRoleId();
    var userId = User.Identity.GetGuidUserId();
    var physicianId = User.Identity.GetUserContext().Id;
    var features = User.Identity.GetFeatures();
    var viewData = new ViewDataDictionary();
    viewData.ViewTarget_Set(ViewTarget.Schedule);
}
@if (Model != null)
{

    <div style="display:flex; flex-direction: row; flex-wrap: wrap;">
        @foreach (var day in Model.OrderBy(c => c.Day))
        {
            <div style="padding:10px; min-width: 400px;">
                <div style="padding-top:10px;">
                    <strong>@day.Day.ToOrvosiDateFormat()</strong>
                </div>
                <div style="display:flex; flex-wrap:nowrap; flex-direction:row; align-content:center; align-self:stretch;">
                    <div style="padding-top:5px; padding-bottom:5px">
                        @foreach (var address in day.Addresses)
                    {
                            <div>@address</div>
                        }
                    </div>
                </div>
                <table class="table table-condensed">
                    @foreach (var item in day.CaseLinks.OrderBy(c => c.AppointmentDate).ThenBy(c => c.StartTime))
                    {
                        <tr>
                            @Html.Partial("CaseLink", item, viewData)   
                        </tr>

                    }
                </table>
            </div>
        }
    </div>
}
else
{
    <p></p>
    <p><strong> No assessments today</strong></p>
}
