@using WebApp.Library.Extensions
@using Features = Orvosi.Shared.Enums.Features
@using WebApp.ViewDataModels
    @model CaseViewModel

    @{
        var identity = User.Identity.GetClaimsIdentity();
        var roleId = identity.GetRoleId();
        var features = identity.GetFeatures();
        var viewData = new ViewDataDictionary();
        viewData.ViewTarget_Set(ViewTarget.Details);
    }

    <div id="actionmenu-container" class="col-md-12">
        @Html.Partial("ActionMenu", Model)
    </div>

    <div class="row">
        <div class="col-md-3">
            @Html.Partial("PhysicianLabel", Model.Physician, viewData)
            <hr />
            <div id="case-container">
                @Html.Partial("Case", Model, viewData)
            </div>
            <hr />
            <div id="box-integration"></div>
            <hr />
            <div id="google-calendar-integration"></div>
        </div>
        <div class="col-md-4">
            <h4>Tasks</h4>
            <hr />
            <div id="tasklist-container">
                @Html.Action("TaskList", "ServiceRequestTask", new TaskListArgs
                {
                    ServiceRequestId = Model.ServiceRequestId,
                    ViewTarget = ViewTarget.Details,
                    ViewFilter = TaskListViewModelFilter.AllTasks
                })
            </div>
        </div>
        <div class="col-md-5">
            <h4>Messages</h4>
            <hr />
            <div id="notes">
                @Html.Partial("Note", new WebApp.ViewModels.ServiceRequestViewModels.NoteViewModel() { ServiceRequestId = Model.ServiceRequestId, Note = Model.Notes })
            </div>
            <div id="livechat-container">
                @Html.Partial("~/Views/ServiceRequestMessage/_Discussion.cshtml", Model)
                @Html.Partial("~/Views/ServiceRequestMessage/_PostMessage.cshtml", Model)
            </div>
        </div>
    </div>



    @*@if (roleId == AspNetRoles.SuperAdmin || roleId == AspNetRoles.Physician)
            {
            <h4 style="line-height:30px;" class="section-top-padding">Invoice</h4>
            <hr />
            if (roleId == AspNetRoles.SuperAdmin)
            {
                <form action="~/Invoice/Create" method="post">
                    @Html.Hidden("Id", Model.Id)
                    <input type="submit" class="btn btn-link btn-sm" name="Create" value="Add Invoice" />
                </form>
            }
            else if (Model.InvoiceDetails.Count() == 0)
            {
                <div>Invoice has not been generated.<br />Your case coordinator will take care of this.</div>
            }

            foreach (var invoiceDetail in Model.InvoiceDetails)
            {
                <div class="panel panel-default">
                    <div class="panel-heading">
                        Invoice @invoiceDetail.Invoice.InvoiceNumber
                        @if (roleId == AspNetRoles.SuperAdmin)
                        {
                            <div class="pull-right">
                                @Html.Partial("_InvoiceActionMenu", invoiceDetail.Invoice)
                            </div>
                        }
                    </div>
                    <div class="panel-body">
                        @Html.Partial("~/Views/Invoice/_ReadOnly.cshtml", invoiceDetail.Invoice)
                    </div>
                </div>
            }
        }*@



    @Html.Partial("ModalContainer")

    @Html.Partial("~/Views/Note/_NoteModalForm.cshtml")

    @section Scripts {

        <script type="text/javascript">

            $(document).ready(function(){
                //$('.dropdown-submenu a.assign-to').on("click", function(e){
                //    $(this).next('ul').toggle();
                //    e.stopPropagation();
                //    e.preventDefault();
                //});
                @if (Model.AppointmentDate.HasValue)
            {
                @:refreshGoogleCalendarIntegration();
                            }
            });

            let serviceRequestId = @Model.ServiceRequestId;

            function onEdit(serviceRequestId) {

                $.ajax({
                    type: "GET",
                    url: '@Url.Content("~/Note/EditNote?serviceRequestId=")' + serviceRequestId,
                    contentType: "application/json; charset=utf-8",
                    success: function (result) {

                        var modalDiv = $("#edit-note-modal");
                        modalDiv.find('#ServiceRequestId').val(result.ServiceRequestId); // hidden field
                        modalDiv.find('#Notes').html(result.Notes);
                        modalDiv.find('#ClaimantName').html(result.ClaimantName);

                        modalDiv.modal('toggle');
                    },
                    error: function (err) {
                        alert(err.status + " - " + err.statusText);
                    }
                }, this);
            }

            $("#edit-note-form").submit(function (e) {

                var url = '@Url.Content("~/Note/UpdateNote")';

                var form = $("#edit-note-form");
                var serviceRequestId = form.find('#ServiceRequestId').val();

                $.ajax({
                    type: "POST",
                    url: url,
                    data: form.serialize(), // serializes the form's elements.
                    success: function () {
                        $("#edit-note-modal").modal('toggle');
                        toastr.success("The note was updated successfully.");
                        refreshNote(serviceRequestId);
                    }
                });
                e.preventDefault();
            });

            function refreshNote(serviceRequestId) {

                $.ajax({
                    type: "GET",
                    url: '@Url.Content("~/ServiceRequest/RefreshNote?serviceRequestId=")' + serviceRequestId,
                    contentType: "text/html",
                    success: function (result) {
                        $('#notes').replaceWith(result);
                    },
                    error: function (err) {
                        // undo the UI change made before the ajax call
                        window.location.reload();
                    }
                }, this);
            }

            function tasklistChanged(serviceRequestId) {
                let url = '@Url.Content("~/ServiceRequestTask/TaskList")';
                $.get(url,
                    {
                        serviceRequestId: serviceRequestId,
                        viewOptions: '@ViewTarget.Details',
                        options: '@TaskListViewModelFilter.AllTasks'
                    })
                    .done(function (result) {
                        document.getElementById('tasklist-container').innerHTML = result;
                    });
            }

            function serviceRequestStatusChanged(serviceRequestId) {
                $.get('@Url.Content("~/ServiceRequest/Case")',
                    {
                        serviceRequestId: serviceRequestId
                    })
                    .done(function (result) {
                        document.getElementById('case-container').innerHTML = result;
                    });

                $.get('@Url.Content("~/ServiceRequest/ActionMenu")',
                    {
                        serviceRequestId: serviceRequestId
                    })
                    .done(function (result) {
                        document.getElementById('actionmenu-container').innerHTML = result;
                    });
            }

            function refreshGoogleCalendarIntegration() {
                $.ajax({
                    type: "GET",
                    url: '@string.Format("{0}?serviceRequestId={1}", Url.Content("~/Google/Calendar/Get"), Model.ServiceRequestId)',
                    contentType: "text/html",
                    success: function (result) {
                        $('#google-calendar-integration').html(result);
                    },
                    error: function (err) {
                        // undo the UI change made before the ajax call
                        toastr.error(err);
                    }
                });
            }

            function addGoogleCalendarEvent(eventId) {
                $.ajax({
                    type: "POST",
                    url: '@string.Format("{0}?serviceRequestId={1}", Url.Content("~/Google/Calendar/Add"), Model.ServiceRequestId)',
                    contentType: "text/html",
                    success: function (result) {
                        refreshGoogleCalendarIntegration();
                    },
                    error: function (err) {
                        // undo the UI change made before the ajax call
                        toastr.error(err);
                    }
                });
            }

        </script>

        <script src="@Url.Content("~/signalr/hubs")"></script>
        @Html.Partial("~/Views/ServiceRequestMessage/_ServiceRequestMessageJS.cshtml", new ServiceRequestMessageJSViewModel { ServiceRequestIds = new int[1] { Model.ServiceRequestId } })
        @Html.Partial("~/Views/ServiceRequestTask/TaskListJS.cshtml")
        @Html.Partial("~/Views/Cancellation/CancellationJS.cshtml")
        @Html.Partial("~/Views/ServiceRequest/CaseJS.cshtml")

    }
