@model  WebApp.Models.Appointment.Index
@{
    ViewBag.Title = "Appointments";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<a href="~/Appointment">Appointment List</a>

<h2>Book an Appointment</h2>

<form>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="Claimant">Claimant</label>
                <input type="text" class="form-control" name="Claimant" value="" />
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                <label for="Physician">Type</label>
                <select class="form-control" name="AssessmentType">
                    <option></option>
                    <option value="E3F80FDC-3127-49B1-A84D-154688F6730E">Accidental Benefit</option>
                    <option value="45D296D0-4895-41FF-96DE-47DF8B8D8A77">Medical Legal</option>
                </select>
            </div>
        </div>
    </div>
    <div class="form-group">
        <label for="Physician">Physician</label>
        <select id="physician" class="form-control" name="Physician">
            <option></option>
            <option value="e62ebead-c270-4711-81cb-2cbd6b8031ad">Dr. Leslie Farago</option>
            <option value="c1cc5280-246b-49e4-96a3-d48ae828aea8">Dr. Anna Waseem</option>
        </select>
    </div>
    <div class="form-group">
        <label for="Date">When</label>
        <div>
            <a id="toggleavailability" class="btn btn-primary" role="button" data-toggle="collapse" href="#availability" aria-expanded="false" aria-controls="availability">
                Select Available Timeslot
            </a>
        </div>
    </div>
    <div class="form-group">
        <div id="availability"></div>
    </div>
</form>
<h3>Documents</h3>
<form id="medbriefs">
    <div class="form-group">
        <div class="btn btn-success fileinput-button">
            <i class="glyphicon glyphicon-plus"></i>
            <span>Add files...</span>
            <input id="fileupload" type="file" name="files[]" multiple="">
        </div>
    </div>
</form>
<table class="table table-bordered table-responsive">
    <thead>
        <tr>
            <th>
                Name
            </th>
            <th>
                Upload Date
            </th>
            <th>
                File Type
            </th>
            <th>
                Contains PHI
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>Some important document</td>
            <td>2015-07-10 13:13</td>
            <td>PDF</td>
            <td>YES</td>
        </tr>
        <tr>
            <td>Some other important document</td>
            <td>2015-07-11 11:13</td>
            <td>DOCX</td>
            <td>NO</td>
        </tr>
    </tbody>
</table>


@section Scripts {

    @Scripts.Render("~/bundles/fullcalendar")


    <script type="text/javascript">
        $(document).ready(function () {

            var fc = $.fullCalendar;
            var formatDate = fc.formatDate;
            var parseISO8601 = fc.parseISO8601;
            var addDays = fc.addDays;
            var applyAll = fc.applyAll;

            var physicianId = null;

            $('#physician').on('change', function (e) {
                physicianId = $('#physician').find(":selected").val();
                if ($('#availability').fullCalendar) {
                    $('#availability').fullCalendar('refetchEvents');
                }
            });

            $('#availability').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                defaultView: 'agendaWeek',
                selectable: true,
                minTime: 7,
                maxTime: 21,
                events: function (start, end, callback) {
                    if (physicianId != null) {
                        $.ajax({
                            url: '@Url.Content("~/Calendar/GetAvailability/")',
                            dataType: 'json',
                            data: {
                                // our hypothetical feed requires UNIX timestamps
                                id: physicianId,
                                start: start.toISOString(),
                                end: end.toISOString()
                            },
                            success: function (result) {
                                var events = [];
                                $.each(result.data.Items, function (i, entry) {
                                    var startStr = entry.Start.DateTimeRaw;
                                    var start = parseISO8601(startStr, true);
                                    var end = parseISO8601(entry.End.DateTimeRaw, true);
                                    var allDay = startStr.indexOf('T') == -1;
                                    var url;
                                    //$.each(entry.link, function (i, link) {
                                    //    if (link.type == 'text/html') {
                                    //        url = link.href;
                                    //        if (ctz) {
                                    //            url += (url.indexOf('?') == -1 ? '?' : '&') + 'ctz=' + ctz;
                                    //        }
                                    //    }
                                    //});
                                    if (allDay) {
                                        addDays(end, -1); // make inclusive
                                    }
                                    events.push({
                                        id: entry.ICalUID,
                                        title: entry.Summary,
                                        url: url,
                                        start: start,
                                        end: end,
                                        allDay: allDay,
                                        location: entry.Location,
                                        description: entry.Description
                                    });
                                });
                                var args = [events].concat(Array.prototype.slice.call(arguments, 1));
                                var res = applyAll(callback, this, args);
                                if ($.isArray(res)) {
                                    return res;
                                }
                                //return events;
                                callback(events);
                            }
                        });
                    }
                }
            });

            $('#availability').on('shown.bs.collapse', function () {
                $('#availability').fullCalendar('render');
            })

            //$('#fileupload').fileupload({
            //    dataType: 'json',
            //    done: function (e, data) {
            //        $.each(data.result.files, function (index, file) {
            //            $('<p/>').text(file.name).appendTo(document.body);
            //        });
            //    }
            //});
        });

    </script>
}
