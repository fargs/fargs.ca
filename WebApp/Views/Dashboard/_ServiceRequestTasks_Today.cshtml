@using WebApp.Library.Extensions
@using Orvosi.Shared.Enums

@model Orvosi.Shared.Model.ServiceRequest

@{
    var roleId = User.Identity.GetRoleId();
    var userId = User.Identity.GetGuidUserId();
    var assessment = Model;
}

    <table id="service-request-tasks-@assessment.Id">
        @foreach (var task in assessment.ServiceRequestTasks.Where(srt => (srt.ProcessTask.Id != Tasks.AssessmentDay) && (srt.ProcessTask.ResponsibleRole.Id == AspNetRoles.Physician || srt.ProcessTask.ResponsibleRole.Id == AspNetRoles.IntakeAssistant || srt.ProcessTask.ResponsibleRole.Id == AspNetRoles.DocumentReviewer)).OrderBy(srt => srt.ProcessTask.Sequence))
        {
            <tr style="padding: 5px 0px">
                <td>
                    <span title="@(task.AssignedTo.Id.HasValue ? task.AssignedTo.DisplayName : "Unassigned")"
                          class="btn btn-sm btn-circle btn-circle-groupitem"
                          style="margin-right: 10px; @(task.AssignedTo.Id.HasValue ? string.Format("color: white;background-color: {0};", task.AssignedTo.ColorCode)  : string.Format("border-color: red;")); cursor: default;">
                        <span class="small">@(task.AssignedTo.Id.HasValue ? task.AssignedTo.Initials : "?")</span>
                    </span>
                </td>
                <td>
                    @if ((roleId == AspNetRoles.SuperAdmin || roleId == AspNetRoles.CaseCoordinator || roleId == AspNetRoles.Physician || userId == task.AssignedTo.Id) && task.ProcessTask.Id != Tasks.AssessmentDay)
                    {
                        <form action="~/Dashboard/UpdateTaskStatus">
                            <div class="checkbox" style="margin: 5px;" title="@(task.Status.Id == TaskStatuses.Done && task.CompletedBy != null ? string.Format("{0} on {1}", task.CompletedBy.DisplayName, task.CompletedDate.ToOrvosiDateTimeFormat()) : "")">
                                <label>
                                    <input id="task-checkbox-@task.Id" type="checkbox" style="cursor:pointer;"
                                           value="@(task.Status.Id == TaskStatuses.Done)"
                                           @(task.Status.Id == TaskStatuses.Done ? "checked" : "")
                                           @(task.Status.Id == TaskStatuses.Waiting || task.Status.Id == TaskStatuses.Obsolete ? "disabled" : "")
                                           onclick="onTaskChecked(this, @task.Id, @assessment.Id)">
                                    @Html.Partial("_TaskStatusLabel2", task) @task.ProcessTask.Name
                                </label>
                            </div>
                        </form>
                    }
                    else
                    {
                        <div class="checkbox" style="margin:5px;">
                            <label style="cursor:default;">
                                @Html.Partial("_TaskStatusLabel2", task) @task.ProcessTask.Name
                            </label>
                        </div>
                    }
                </td>
            </tr>
        }
    </table>