@using Orvosi.Data
@using Orvosi.Shared.Enums
@model Address

@{
    ViewBag.Title = "Create";

    var db = new OrvosiDbContext();

    ViewBag.Owners = db.Companies
        .AsEnumerable()
        .Select(c => new SelectListItem()
        {
            Text = c.Name,
            Value = c.ObjectGuid.ToString()
        })
        .Union(
            db.Physicians
            .AsEnumerable()
            .Select(c => new SelectListItem()
            {
                Text = c.AspNetUser.GetDisplayName(),
                Value = c.Id.ToString()
            })
        )
        .ToList();

    ViewBag.Locations = db.LookupItems
        .Where(c => c.LookupId == Lookups.LocationAreas)
        .Select(c => new SelectListItem()
        {
            Text = c.Text,
            Value = c.Id.ToString()
        }).ToList();

    ViewBag.Provinces = db.Provinces
        .Where(c => c.CountryId == 124) // Canada
        .Select(c => new SelectListItem()
        {
            Text = c.ProvinceName,
            Value = c.Id.ToString()
        }).ToList();

    ViewBag.AddressTypes = db.AddressTypes
        .Select(c => new SelectListItem()
        {
            Text = c.Name,
            Value = c.Id.ToString()
        }).ToList();
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Location</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        
        <div class="form-group">
            <label class="control-label col-md-2">Address Type</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.AddressTypeId, new SelectList(ViewBag.AddressTypes, "Value", "Text"), string.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.AddressTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Owner</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.OwnerGuid, new SelectList(ViewBag.Owners, "Value", "Text"), string.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.OwnerGuid, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Location</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LocationId, new SelectList(ViewBag.Locations, "Value", "Text"), string.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LocationId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Attention, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Attention, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Attention, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Postal Code</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-md-2">Province</label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProvinceId, new SelectList(ViewBag.Provinces, "Value", "Text"), string.Empty, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProvinceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
