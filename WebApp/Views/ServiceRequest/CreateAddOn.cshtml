@using WebApp.Library.Extensions
@using WebApp.Library
@using Orvosi.Data
@model WebApp.ViewModels.ServiceRequestViewModels.CreateViewModel

@{
    ViewBag.Title = "Create a Paper Review/Addendum - Details";
    var userContext = User.Identity.GetUserContext();
    var viewDataService = ContextPerRequest.ViewDataService; // This should eventually be injected from the DI container
    var physicianSelectList = viewDataService.GetPhysicianSelectList();
    var companySelectList = viewDataService.GetPhysicianCompanySelectList(userContext.Id);
    var serviceSelectList = viewDataService.GetPhysicianServiceSelectList(userContext.Id);
    var addressSelectList = viewDataService.GetPhysicianAddressSelectList(userContext.Id);
    var caseCoordinatorSelectList = viewDataService.GetPhysicianCaseCoordinatorSelectList(userContext.Id);
    var processTemplateSelectList = viewDataService.GetPhysicianProcessTemplateSelectList(userContext.Id);
}

<h3>Create Paper Review/Addendum</h3>

<form action="@Url.Content("~/ServiceRequest/CreateAddOn")" method="post" class="form-horizontal">

    @Html.AntiForgeryToken()

    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-group">
        <label class="control-label col-md-2">Physician</label>
        <div class="col-md-6">
            @Html.DropDownList("PhysicianId", new SelectList(physicianSelectList, "Value", "Text", "Group.Name", userContext.Id), string.Empty, new { @class = "form-control", onchange="refreshCompanyDropDown(this)" })
            @Html.ValidationMessage("PhysicianId", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Company</label>
        <div class="col-md-6">
            @Html.DropDownList("CompanyId", new SelectList(companySelectList, "Value", "Text", "Group.Name", new { }), string.Empty, new { @class = "form-control" })
            @Html.ValidationMessage("CompanyId", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Service</label>
        <div class="col-md-6">
            @Html.DropDownList("ServiceId", new SelectList(serviceSelectList, "Value", "Text", new { }), string.Empty, new { @class = "form-control" })
            @Html.ValidationMessage("ServiceId", "", new { @class = "text-danger" })
        </div>
    </div>

    @if (ViewBag.ServiceIdHasErrors == true)
    {
        <div class="checkbox col-md-push-2">
            <label>
                @Html.CheckBox("OverrideServiceCatalogueMissingError", false) Override Service Catalogue Errors
            </label>
        </div>
    }

    <div class="form-group">
        <label class="control-label col-md-2">Claimant</label>
        <div class="col-md-6">
            @Html.Editor("ClaimantName", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage("ClaimantName", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Due Date</label>
        <div class="col-md-6">
            <div class="input-group date" style="width:100%" id="DueDatePicker">
                @Html.TextBox("DueDate", "", new { @class = "form-control", size = "16" })
                <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
            @Html.ValidationMessage("DueDate", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Company Reference Id</label>
        <div class="col-md-6">
            @Html.Editor("CompanyReferenceId", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessage("CompanyReferenceId", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Case Coordinator</label>
        <div class="col-md-6">
            @Html.DropDownList("CaseCoordinatorId", new SelectList(caseCoordinatorSelectList, "Value", "Text"), string.Empty, new { @class = "form-control" })
            @Html.ValidationMessage("CaseCoordinatorId", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Process Template</label>
        <div class="col-md-6">
            @Html.DropDownList("ServiceRequestTemplateId", new SelectList(processTemplateSelectList, "Value", "Text"), string.Empty, new { @class = "form-control" })
            @Html.ValidationMessage("ServiceRequestTemplateId", "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-push-2 col-md-6">
            <button class="btn btn-primary">Submit</button>
        </div>
    </div>

</form>

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">

        function refreshCompanyDropDown(e) {
            let url = '@Url.Content("~/ServiceRequest/RefreshCompanyDropDown")';
            $.get(url, {
                physicianId: e.value
            })
            .done(function (result) {
                $('#CompanyId').html(result);
            });

            url = '@Url.Content("~/ServiceRequest/RefreshServiceDropDown")';
            $.get(url, {
                physicianId: e.value
            })
            .done(function (result) {
                $('#ServiceId').html(result);
            });

            url = '@Url.Content("~/ServiceRequest/RefreshCaseCoordinatorDropDown")';
            $.get(url, {
                physicianId: e.value
            })
            .done(function (result) {
                $('#CaseCoordinatorId').html(result);
            });

            url = '@Url.Content("~/ServiceRequest/RefreshProcessTemplateDropDown")';
            $.get(url, {
                physicianId: e.value
            })
            .done(function (result) {
                $('#ServiceRequestTemplateId').html(result);
            });
        }

        $(function () {

            $('#DueDatePicker').datepicker({
                startDate: '-1d',
                format: 'yyyy-mm-dd',
                autoclose: true
            });

            //var dueDate = $('#DueDate').datepicker();
            $('#AppointmentDatePicker').datepicker({
                startDate: '-1d',
                format: 'yyyy-mm-dd',
                autoclose: true
            });

            $('#RequestedDatePicker').datepicker({
                format: 'yyyy-mm-dd'
            });
        });

    </script>
}
