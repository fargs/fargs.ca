<script type="text/javascript">


    function menuDropdownClick(e, element) {
        $(element).next('ul').toggle();
        e.stopPropagation();
        e.preventDefault();
    };

    function toggleCompleted(e, context) {

        e.stopPropagation();

        let url = '@Url.Content("~/ServiceRequestTask/ToggleTaskCompleted")';

        $.post(url, $(context.form).serialize())
            .done(function (data) {
                taskChanged(data.id, data.serviceRequestId);
                serviceRequestStatusChanged(data.serviceRequestId);
            });
    }

    function toggleTaskStatus(serviceRequestTaskId, taskStatusId) {

        let url = '@Url.Content("~/ServiceRequestTask/ToggleTaskStatus")';

        $.post(url,
            {
                serviceRequestTaskId: serviceRequestTaskId,
                taskStatusId: taskStatusId
            })
            .done(function (data) {
                taskChanged(data.id, data.serviceRequestId);
                serviceRequestStatusChanged(data.serviceRequestId);
            });
    }

    function changeToDoTasksToWaiting(serviceRequestId) {
        let url = '@Url.Content("~/ServiceRequestTask/UpdateDependentTaskStatuses")';
        $.post(
            url,
            {
                serviceRequestId: serviceRequestId
            },
            function (data) {
                taskChanged(data.id, data.serviceRequestId);
                serviceRequestStatusChanged(data.serviceRequestId);
            }
        );
    }

    function onHold(form) {
        let url = '@Url.Content("~/ServiceRequestTask/OnHold")';
        $.post(url,
            form.serialize()
        ).done(function (data) {
            taskChanged(data.id, data.serviceRequestId);
            serviceRequestStatusChanged(data.serviceRequestId);
            showCommentForm(data.serviceRequestId, null, 4);  //default to hold type
        });
    }

    function archiveTask(serviceRequestTaskId) {
        let url = '@Url.Content("~/ServiceRequestTask/ArchiveTask")';
        $.post(url,
            {
                serviceRequestTaskId: serviceRequestTaskId
            }
        ).done(function (data) {
            taskChanged(data.id, data.serviceRequestId);
        });
    }

    function pickupTask(serviceRequestTaskId) {
        let url = '@Url.Content("~/ServiceRequestTask/PickUp")';
        $.post(
            url,
            {
                serviceRequestTaskId: serviceRequestTaskId
            },
            function (data) {
                taskChanged(data.id, data.serviceRequestId);
                serviceRequestStatusChanged(data.serviceRequestId);
            }
        );
    }

    function assignTask(serviceRequestTaskId, assignedTo) {
        let url = '@Url.Content("~/ServiceRequestTask/AssignTo")';
        $.post(
            url,
            {
                serviceRequestTaskId: serviceRequestTaskId,
                assignedTo: assignedTo
            },
            function (data) {
                taskChanged(data.id, data.serviceRequestId);
                serviceRequestStatusChanged(data.serviceRequestId);
            }
        );
    }

    function showPickupTasksAssignedToRole(serviceRequestId, roleId, assignedTo) {
        var url = '@Url.Content("~/ServiceRequestTask/ShowPickupTasksAssignedToRoleForm")';

        $.get(url, {
            ServiceRequestId: serviceRequestId,
            RoleId: roleId,
            UserId: assignedTo
        }).done(function (result) {
            $('#modal-content').html(result);
            $('#modal-container').modal('toggle');
        });
    }

    function pickupTasksAssignedToRole(serviceRequestId, roleId, assignedTo) {
        let url = '@Url.Content("~/ServiceRequestTask/PickupTasksAssignedToRole")';
        $.post(
            url,
            {
                ServiceRequestId: serviceRequestId,
                RoleId: roleId,
                UserId: assignedTo
            },
            function (data) {
                tasklistChanged(data.serviceRequestId);
                $('#modal-container').modal('toggle');
            }
        );
    }

    function assignRequiredResourcesToTasks(serviceRequestId) {
        var url = '@Url.Content("~/ServiceRequest/AssignRequiredResourcesToTasks")';

        $.post(
            url,
            {
                serviceRequestId: serviceRequestId
            },
            function (data) {
                tasklistChanged(data.serviceRequestId);
            }
        );
    }

    function addTask(serviceRequestId, taskId) {
        let url = '@Url.Content("~/ServiceRequestTask/AddTask")';
        $.post(
            url,
            {
                serviceRequestId: serviceRequestId,
                taskId: taskId
            },
            function (data) {
                taskChanged(data.id, data.serviceRequestId);
                serviceRequestStatusChanged(data.serviceRequestId);
            }
        );
    };

    function showDeleteTaskRequest(serviceRequestTaskId) {
        let url = '@Url.Content("~/ServiceRequestTask/ShowDeleteRequest")';
        $.get(url,
            {serviceRequestTaskId: serviceRequestTaskId}
        ).done(function (result) {
            $('#modal-content').html(result);
            $('#modal-container').modal('toggle');
        });
    }

    function deleteTask(serviceRequestTaskId) {
        let url = '@Url.Content("~/ServiceRequestTask/Delete")';

        $.post(url,
            {
                serviceRequestTaskId: serviceRequestTaskId
            })
            .done(function (data) {
                $('#modal-container').modal('toggle');
                taskDeleted(data.id, data.serviceRequestId);
                serviceRequestStatusChanged(data.serviceRequestId);
            });
    }

    function selectTask(serviceRequestTaskId, serviceRequestId) {
        // hightlight the selected task
        $('#tasklist-row-' + serviceRequestTaskId).addClass('bg-info').siblings().removeClass('bg-info');
        taskSelected(serviceRequestTaskId, serviceRequestId);
    }

    function updateTaskDueDate(event, form) {
        let url = '@Url.Content("~/ServiceRequestTask/UpdateTaskDueDate")';
        $.post(url, {
            serviceRequestTaskId: form["ServiceRequestTaskId"].value,
            dueDate: form["DueDate"].value
        }).done(function (data) {
            $('#modal-container').modal('toggle');
            taskChanged(data.id, data.serviceRequestId);
            serviceRequestStatusChanged(data.serviceRequestId);
        })
        .error(function (result) {
            $('#modal-content').html(result.responseText);
        });;
    }

    // these are default handlers.

    function showEditTaskForm(serviceRequestTaskId) {
        let url = '@Url.Content("~/ServiceRequestTask/ShowEditTaskForm")';
        $.get(url,
            {serviceRequestTaskId: serviceRequestTaskId}
        ).done(function (result) {
            $('#modal-content').html(result);
            $('#modal-container').modal('toggle');
        });
    }

    function showRescheduleForm(serviceRequestTaskId) {
        let url = '@Url.Content("~/Reschedule/ShowRescheduleForm")';
        $.get(url, {
                serviceRequestTaskId: serviceRequestTaskId
        }).done(function(result) {
            $('#modal-content-sm').html(result);
            $('#modal-container-sm').modal('toggle');
        });
    }

    function showEditTaskDependenciesForm(serviceRequestTaskId) {
        let url = '@Url.Content("~/ServiceRequestTask/ShowEditTaskDependenciesForm")';
        $.get(url, {
                serviceRequestTaskId: serviceRequestTaskId
        }).done(function(result) {
            $('#modal-content-sm').html(result);
            $('#modal-container-sm').modal('toggle');
        });
    }

    function updateTaskDependencies(event, form) {
        let url = '@Url.Content("~/ServiceRequestTask/UpdateTaskDependencies")';
        $.post(url,
            $(form).serialize())
        .done(function (data) {
            $('#modal-container-sm').modal('toggle');
            taskChanged(data.id, data.serviceRequestId);
            serviceRequestStatusChanged(data.serviceRequestId);
        })
        .error(function (result) {
            $('#modal-content').html(result.responseText);
        });
    }

    function showTaskTools(serviceRequestTaskId, serviceRequestId) {

    }

    function taskChanged(serviceRequestTaskId, serviceRequestId) {

    }

    function taskDeleted(serviceRequestTaskId, serviceRequestId) {

    }

    function tasklistChanged(serviceRequestId) {

    }

    function serviceRequestStatusChanged(serviceRequestId) {

    }

    function taskSelected(serviceRequestTaskId, serviceRequestId) {
        console.log('this should be overridden');
    }

</script>
