@inherits LayoutComponentBase
@using ImeHub.Portal.Components.Layout
@using ImeHub.Portal.Components.App.Branding
@using TailBlazor.Toast.Configuration

<TailBlazorToasts 
    Timeout="10" 
    Position="ToastPosition.TopRight"
    IconStyle="TailBlazor.HeroIcons.IconStyle.Outline"
    SuccessIcon="TailBlazor.HeroIcons.HeroIcon.Check"  />

<div>
    <nav class="bg-gray-800">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex items-center justify-between h-16">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <LogoWithText></LogoWithText>
                    </div>
                    <div class="hidden md:block">
                        <NavMenu></NavMenu>
                    </div>
                </div>
                <div class="hidden md:block">
                    <div class="ml-4 flex items-center md:ml-6">
                        <LoginDisplay></LoginDisplay>
                    </div>
                </div>
                <div class="-mr-2 flex md:hidden">
                    <!-- Mobile menu button -->
                    <button type="button" @onclick="() => showMobileMenu = !showMobileMenu" class="bg-gray-800 inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white" aria-controls="mobile-menu" aria-expanded="false">
                        <span class="sr-only">Open main menu</span>
                        <!--
                          Heroicon name: outline/menu

                          Menu open: "hidden", Menu closed: "block"
                        -->
                        @if (showMobileMenu)
                        {
                            <svg class="block h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                            </svg>   
                        }
                        <!--
                          Heroicon name: outline/x

                          Menu open: "block", Menu closed: "hidden"
                        -->
                        @if (!showMobileMenu)
                        {
                            <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                            </svg>
                        }
                    </button>
                </div>
            </div>
        </div>

        <!-- Mobile menu, show/hide based on menu state. -->
        @if (showMobileMenu)
        {
            <div class="md:hidden" id="mobile-menu">
                <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3">
                    <!-- Current: "bg-gray-900 text-white", Default: "text-gray-300 hover:bg-gray-700 hover:text-white" -->
                    <a href="#" class="bg-gray-900 text-white block px-3 py-2 rounded-md text-base font-medium">Invoices</a>
                </div>
                <div class="pt-4 pb-3 border-t border-gray-700">
                    <div class="flex items-center px-5">
                        <div class="flex-shrink-0">
                            <span class="inline-flex items-center justify-center h-8 w-8 rounded-full bg-gray-500">
                                <span class="text-sm font-medium leading-none text-white">@Initials</span>
                            </span>
                            <a href="Identity/Account/Manage/Profile" class="block px-3 py-2 rounded-md text-base font-medium text-gray-400 hover:text-white hover:bg-gray-700" role="menuitem">
                                <div>
                                    @DisplayName
                                </div>
                                <div class="text-gray-500 text-sm">
                                    @Email
                                </div>
                            </a>
                        </div>
                    </div>
                    <div class="mt-3 px-2 space-y-1">
                        <a href="Identity/Account/LogOut" class="block px-3 py-2 rounded-md text-base font-medium text-gray-400 hover:text-white hover:bg-gray-700" role="menuitem">Sign out</a>
                    </div>
                </div>
            </div>
        }
    </nav>

    @Body

</div>
@code {
    [CascadingParameter] private Task<AuthenticationState> authenticationStateTask { get; set; }
    private bool showMobileMenu = false;

    private string DisplayName {get;set;}
    private string Email { get; set; }
    private string Initials {get;set;}

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var user = (await authenticationStateTask).User;
        DisplayName = user.DisplayName();
        Email = user.Email();
        Initials = user.Initials();
    }
}