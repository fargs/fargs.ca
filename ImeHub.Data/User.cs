// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ImeHub.Data
{

    // User
    public partial class User
    {
        public System.Guid Id { get; set; } // Id (Primary key)
        public string Email { get; set; } // Email (length: 256)
        public bool EmailConfirmed { get; set; } // EmailConfirmed
        public string PasswordHash { get; set; } // PasswordHash
        public string SecurityStamp { get; set; } // SecurityStamp
        public string PhoneNumber { get; set; } // PhoneNumber (length: 128)
        public bool PhoneNumberConfirmed { get; set; } // PhoneNumberConfirmed
        public bool TwoFactorEnabled { get; set; } // TwoFactorEnabled
        public System.DateTime? LockoutEndDateUtc { get; set; } // LockoutEndDateUtc
        public bool LockoutEnabled { get; set; } // LockoutEnabled
        public int AccessFailedCount { get; set; } // AccessFailedCount
        public string UserName { get; set; } // UserName (length: 256)
        public string Title { get; set; } // Title (length: 50)
        public string FirstName { get; set; } // FirstName (length: 128)
        public string LastName { get; set; } // LastName (length: 128)
        public System.DateTime? LastActivationDate { get; set; } // LastActivationDate
        public string LogoCssClass { get; set; } // LogoCssClass (length: 50)
        public string ColorCode { get; set; } // ColorCode (length: 50)
        public string Notes { get; set; } // Notes
        public bool IsTestRecord { get; set; } // IsTestRecord
        public bool IsAppTester { get; set; } // IsAppTester
        public System.Guid? PhysicianId { get; set; } // PhysicianId
        public System.Guid RoleId { get; set; } // RoleId

        // Reverse navigation

        /// <summary>
        /// Child Physicians where [Physician].[ManagerId] point to this entity (FK_Physician_Manager)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Physician> Physicians_ManagerId { get; set; } // Physician.FK_Physician_Manager
        /// <summary>
        /// Child Physicians where [Physician].[OwnerId] point to this entity (FK_Physician_Owner)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<Physician> Physicians_OwnerId { get; set; } // Physician.FK_Physician_Owner
        /// <summary>
        /// Child PhysicianInvites where [PhysicianInvite].[UserId] point to this entity (FK_PhysicianInvite_User)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<PhysicianInvite> PhysicianInvites { get; set; } // PhysicianInvite.FK_PhysicianInvite_User
        /// <summary>
        /// Child TeamMembers where [TeamMember].[UserId] point to this entity (FK_TeamMember_User)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<TeamMember> TeamMembers { get; set; } // TeamMember.FK_TeamMember_User
        /// <summary>
        /// Child UserRoles where [UserRole].[UserId] point to this entity (FK_UserRole_User)
        /// </summary>
        public virtual System.Collections.Generic.ICollection<UserRole> UserRoles { get; set; } // UserRole.FK_UserRole_User

        // Foreign keys

        /// <summary>
        /// Parent Role pointed by [User].([RoleId]) (FK_User_Role)
        /// </summary>
        public virtual Role Role { get; set; } // FK_User_Role

        public User()
        {
            IsTestRecord = false;
            IsAppTester = false;
            Physicians_ManagerId = new System.Collections.Generic.List<Physician>();
            Physicians_OwnerId = new System.Collections.Generic.List<Physician>();
            PhysicianInvites = new System.Collections.Generic.List<PhysicianInvite>();
            TeamMembers = new System.Collections.Generic.List<TeamMember>();
            UserRoles = new System.Collections.Generic.List<UserRole>();
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
