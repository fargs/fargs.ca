<script type="text/javascript">

    // Commands
    function noShow(serviceRequestId, isNoShow) {
        let url = '@Url.Content("~/ServiceRequest/ToggleNoShow")';
        $.post(url,
            {
                ServiceRequestId: serviceRequestId,
                IsNoShow: isNoShow
            }
        ).done(function (data) {
            refreshTaskList(data.serviceRequestId);
            refreshServiceRequestSummary(data.serviceRequestId);
            refreshServiceRequestActionMenu(data.serviceRequestId);

            serviceRequestStatusChanged(data.serviceRequestId);
        });
    }
    function onHold(serviceRequestId, isOnHold) {
        let url = '@Url.Content("~/ServiceRequest/ToggleOnHold")';
        $.post(url,
            {
                ServiceRequestId: serviceRequestId,
                IsOnHold: isOnHold
            }
        ).done(function (data) {
            // bulk update bypasses the taskChanged handler
            refreshTaskList(serviceRequestId);
            // service request status
            refreshServiceRequestSummary(data.serviceRequestId);
            refreshServiceRequestActionMenu(data.serviceRequestId);

            serviceRequestStatusChanged(data.serviceRequestId);

            // navigation
            showCommentForm(serviceRequestId, null, 4); // 4 = OnHold
        });
    }
    function saveCaseDetails(form) {
        let url = '@Url.Content("~/ServiceRequest/ChangeCaseDetails")';
        $.post(url,
            form.serialize()
        ).done(function (data) {
            toastr.success("Changes was saved successfully.");
            refreshServiceRequestSummary(data.serviceRequestId);
        })
        .error(function (result) {
            toastr.error("Changes were not saved.");
        });
    }

    // Task List Event Handlers (override in parent containers if needed)
    function taskSelected(serviceRequestTaskId) {
        showTaskTool(serviceRequestTaskId);
    }
    function taskChanged(serviceRequestTaskId, serviceRequestId) {
        refreshTaskList(serviceRequestId);
    }
    function taskDeleted(serviceRequestTaskId, serviceRequestId) {
        refreshTaskList(serviceRequestId);
    }
    function tasklistChanged(serviceRequestId) {
        refreshTaskList(serviceRequestId);
    }
    // Invoice List Event Handlers
    function invoiceChanged(invoiceId) {
        $.get('@Url.Content("~/Accounting/GetRelatedServiceRequestId")',
            {
                invoiceId: invoiceId
            })
            .done(function (result) {
                refreshInvoiceList(result.serviceRequestId);
            });
    }

    function invoiceListChanged(serviceRequestId) {
        refreshInvoiceList(serviceRequestId);
    }

    function invoiceErrors(entityValidationErrorsViewModel) {
        var selector = "#invoice-list-container-" + $(entityValidationErrorsViewModel).data().id;
        $(selector).before(entityValidationErrorsViewModel);
    }
    // Comments Event Handlers
    function commentsChanged(serviceRequestId) {
        refreshComments(serviceRequestId);
    }
    
    // private functions
    function refreshServiceRequestSummary(serviceRequestId) {
        $.get('@Url.Content("~/Work/DaySheet/ServiceRequestSummary")',
            {
                serviceRequestId: serviceRequestId
            })
            .done(function (result) {
                document.getElementById('summary-container-' + serviceRequestId).innerHTML = result;
            });
    }
    function refreshServiceRequestActionMenu(serviceRequestId) {
        $.get('@Url.Content("~/Work/DaySheet/ServiceRequestActionMenu")',
            {
                serviceRequestId: serviceRequestId
            })
            .done(function (result) {
                document.getElementById('actionmenu-container-' + serviceRequestId).innerHTML = result;
            });
    }
    function refreshTaskList(serviceRequestId) {
        let url = '@Url.Content("~/Work/DaySheet/TaskList")';
        $.get(url,
            {
                ServiceRequestId: serviceRequestId
            })
            .done(function (result) {
                document.getElementById('tasklist-container-' + serviceRequestId).innerHTML = result;
            });
    }
    function refreshInvoiceList(serviceRequestId) {
        $.get('@Url.Content("~/Work/DaySheet/InvoiceList/")', {
                serviceRequestId: serviceRequestId
            })
            .done(function (result) {
                document.getElementById('invoice-list-container-' + serviceRequestId).innerHTML = result;
            });
    }
    function refreshComments(serviceRequestId) {
        $.get('@Url.Content("~/Comment/List/")', {
                serviceRequestId: serviceRequestId
            })
            .done(function (result) {
                document.getElementById('comment-list-container-' + serviceRequestId).innerHTML = result;
            });
    }

    // Navigation
    function showCaseDetails(serviceRequestId) {
        let url = '@Url.Content("~/ServiceRequest/Details/")' + serviceRequestId;
        window.location = url;
    }
    function showTaskTool(serviceRequestTaskId) {
        $.get('@Url.Content("~/ServiceRequestTask/GetRelatedServiceRequestId/")', {
            serviceRequestTaskId: serviceRequestTaskId
        })
        .done(function (data) {
            if (data.taskId === 24) // enum Tasks.SubmitInvoice
            {
                $('#tabs-' + data.serviceRequestId + ' a[href="#invoices-' + data.serviceRequestId + '"]').tab('show');
            }
            else {
                $('#tabs-' + data.serviceRequestId + ' a[href="#live-chat-' + data.serviceRequestId + '"]').tab('show');
            }
        });
    }
</script>
