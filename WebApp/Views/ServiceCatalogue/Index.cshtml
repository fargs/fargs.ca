@using Orvosi.Data
@using Orvosi.Shared.Enums
@using WebApp.Library.Extensions
@model WebApp.ViewModels.ServiceCatalogueViewModels.IndexViewModel

@{
    ViewBag.Title = "Service Catalogue";

    var db = new OrvosiDbContext();

    ViewBag.Users = db.AspNetUsers
        .Where(c => c.AspNetUserRoles.FirstOrDefault().RoleId == AspNetRoles.Physician)
        .AsEnumerable()
        .Select(c => new SelectListItem()
        {
            Text = c.GetDisplayName(),
            Value = c.Id.ToString(),
            Group = new SelectListGroup() { Name = c.GetRole().Name }
        }).ToList();

    ViewBag.Companies = db.Companies
        .Select(c => new SelectListItem()
        {
            Text = c.Name,
            Value = c.Id.ToString(),
            Group = new SelectListGroup() { Name = c.Parent.Name }
        }).ToList();

    var services = db.Services
        .Where(c => c.ServicePortfolioId == ServicePortfolios.Physician)
        .OrderBy(c => c.Name)
        .ToList();

    ViewBag.LocationAreas = db.LocationAreas
        .OrderBy(c => c.ItemText)
        .ToList();
        
    ViewBag.LocationAreas.Add(new LocationArea()
        {
            LookupId = 4,
            LookupName = "Locations",
            ItemId = 0,
            ItemText = null,
            ItemValue = null
        });
}


<div class="row">
    <div class="col-md-12">
        <form action="~/ServiceCatalogue/Index/" method="get" class="form-inline">
            @if (User.Identity.GetRoleId() == AspNetRoles.SuperAdmin || User.Identity.GetRoleId() == AspNetRoles.CaseCoordinator)
            {
                <div class="form-group">
                    @Html.DropDownList("UserId", new SelectList(ViewBag.Users, "Value", "Text", Model.FilterArgs.UserId), string.Empty, new { @class = "form-control" })
                </div>
            }
            <div class="form-group">
                @Html.DropDownList("CompanyId", new SelectList(ViewBag.Companies, "Value", "Text", "Group.Name", Model.FilterArgs.CompanyId), string.Empty, new { @class = "form-control" })
            </div>
            <button type="submit" class="btn btn-primary">Go</button>
        </form>
    </div>
</div>
<p />
@if (Model.SelectedUser == null)
{
    <div class="text-info">No service catalogue is available</div>
}
else
{
    <div class="h3 lead">
        @if (Model.SelectedCompany != null)
        {
            <span>Service Catalogue for @Model.SelectedUser.GetDisplayName() and <strong>@Model.SelectedCompany.Name</strong></span>
        }
        else
        {
            <span>Default Service Catalogue for @Model.SelectedUser.GetDisplayName()</span>
        }
    </div>

    if (Model.ServiceCatalogueRate == null)
    {
        <div class="text-info">No Show Rate and Late Cancellation Rate have not been set.</div>      
    }
    else
    {
        <div>
            <form>
                <div class="form-group">
                    <label class="control-label">No Show Rate</label>
                    @{ var noShowFormat = Model.ServiceCatalogueRate.NoShowRate.HasValue && Model.ServiceCatalogueRate.NoShowRate > 1 ? "C2" : "0%"; }
                    <input type="text" class="form-control" name="NoShowRate" value="@Model.ServiceCatalogueRate.NoShowRate.GetValueOrDefault(0).ToString(noShowFormat)" readonly />
                </div>
                <div class="form-group">
                    <label class="control-label">Late Cancellation Rate</label>
                    @{ var lateCancellationFormat = Model.ServiceCatalogueRate.LateCancellationRate.HasValue && Model.ServiceCatalogueRate.LateCancellationRate > 1 ? "C2" : "0%"; }
                    <input type="text" class="form-control" name="NoShowRate" value="@Model.ServiceCatalogueRate.LateCancellationRate.GetValueOrDefault(0).ToString(lateCancellationFormat)" readonly />
                </div>
            </form>
        </div>
    }
    <a class="btn btn-primary" style="margin-bottom:20px;" href="~/@(string.Format("ServiceCatalogue/EditRates?ServiceProviderGuid={0}&CustomerGuid={1}", Model.SelectedUser.Id, Model.SelectedCompany != null ? Model.SelectedCompany.ObjectGuid.ToString() : string.Empty))">Set Rates</a>

    <table class="table table-bordered">
        <thead>
            <tr>
                <th>
                    Service
                </th>
                @foreach (var item in ViewBag.LocationAreas)
                {
                    <th>
                        @item.ItemText
                    </th>
                }
            </tr>
        </thead>
        <tbody>
            @foreach (var service in services.OrderBy(c => c.ServiceCategoryId).ThenBy(c => c.Name))
            {
                <tr>
                    <td>
                        <div>@service.Name</div>
                    </td>
                    @foreach (var location in ViewBag.LocationAreas)
                    {
                        <td>
                            @{
                                var serviceCatalogueItem = Model.ServiceCatalogues.SingleOrDefault(c => c.ServiceId == service.Id && c.LocationId == location.ItemId);
                            }
                            @if ((serviceCatalogueItem.ServiceId == Services.PaperReview
        || serviceCatalogueItem.ServiceId == Services.Addendum
        || serviceCatalogueItem.ServiceId == Services.TeleConference)
        && serviceCatalogueItem.LocationId != 0)
                            {
                                <span>N/A</span>
                            }
                            else if ((serviceCatalogueItem.ServiceId != Services.PaperReview
                                && serviceCatalogueItem.ServiceId != Services.Addendum
                                && serviceCatalogueItem.ServiceId != Services.TeleConference)
                                && serviceCatalogueItem.LocationId == 0)
                            {
                                <span>N/A</span>
                            }
                            else
                            {
                                <a href="~/@(string.Format("ServiceCatalogue/Edit?UserId={0}&CompanyId={1}&LocationId={2}&ServiceId={3}", Model.FilterArgs.UserId, Model.FilterArgs.CompanyId, (location.ItemId == 0 ? null : location.ItemId), service.Id))">
                                    @if (serviceCatalogueItem.Price.HasValue)
                                    {
                                        <span>@serviceCatalogueItem.Price</span>
                                    }
                                    else
                                    {
                                        <span>Edit</span>
                                    }
                                </a>
                            }
                        </td>
                                }
                </tr>
            }
        </tbody>
    </table>
}