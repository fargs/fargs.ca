// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable EmptyNamespace
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.7
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning


namespace ImeHub.Data
{

    // Address
    public partial class Address
    {
        public System.Guid Id { get; set; } // Id (Primary key)
        public System.Guid? PhysicianId { get; set; } // PhysicianId
        public System.Guid? CompanyId { get; set; } // CompanyId
        public byte AddressTypeId { get; set; } // AddressTypeID
        public string Name { get; set; } // Name (length: 256)
        public string Attention { get; set; } // Attention (length: 255)
        public string Address1 { get; set; } // Address1 (length: 255)
        public string Address2 { get; set; } // Address2 (length: 255)
        public System.Guid CityId { get; set; } // CityId
        public string PostalCode { get; set; } // PostalCode (length: 50)
        public short TimeZoneId { get; set; } // TimeZoneId

        // Foreign keys

        /// <summary>
        /// Parent AddressType pointed by [Address].([AddressTypeId]) (FK_Address_AddressType)
        /// </summary>
        public virtual AddressType AddressType { get; set; } // FK_Address_AddressType

        /// <summary>
        /// Parent City pointed by [Address].([CityId]) (FK_Address_City)
        /// </summary>
        public virtual City City { get; set; } // FK_Address_City

        /// <summary>
        /// Parent Physician pointed by [Address].([PhysicianId]) (FK_Address_Physician)
        /// </summary>
        public virtual Physician Physician { get; set; } // FK_Address_Physician

        /// <summary>
        /// Parent TimeZone pointed by [Address].([TimeZoneId]) (FK_Address_TimeZone)
        /// </summary>
        public virtual TimeZone TimeZone { get; set; } // FK_Address_TimeZone

        public Address()
        {
            InitializePartial();
        }

        partial void InitializePartial();
    }

}
// </auto-generated>
