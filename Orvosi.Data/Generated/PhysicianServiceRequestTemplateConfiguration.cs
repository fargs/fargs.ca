// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Orvosi.Data
{

    // Physician_ServiceRequestTemplate
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class PhysicianServiceRequestTemplateConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<PhysicianServiceRequestTemplate>
    {
        public PhysicianServiceRequestTemplateConfiguration()
            : this("dbo")
        {
        }

        public PhysicianServiceRequestTemplateConfiguration(string schema)
        {
            ToTable(schema + ".Physician_ServiceRequestTemplate");
            HasKey(x => new { x.PhysicianId, x.ServiceRequestTemplateId });

            Property(x => x.PhysicianId).HasColumnName(@"PhysicianId").IsRequired().HasColumnType("uniqueidentifier").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ServiceRequestTemplateId).HasColumnName(@"ServiceRequestTemplateId").IsRequired().HasColumnType("smallint").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ServiceCategoryId).HasColumnName(@"ServiceCategoryId").IsOptional().HasColumnType("smallint");
            Property(x => x.ServiceId).HasColumnName(@"ServiceId").IsOptional().HasColumnType("smallint");
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").IsRequired().HasColumnType("datetime");
            Property(x => x.ModifiedUser).HasColumnName(@"ModifiedUser").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);

            // Foreign keys
            HasRequired(a => a.ServiceRequestTemplate).WithMany(b => b.PhysicianServiceRequestTemplates).HasForeignKey(c => c.ServiceRequestTemplateId).WillCascadeOnDelete(false); // FK_Physician_ServiceRequestTemplate_ServiceRequestTemplate
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
