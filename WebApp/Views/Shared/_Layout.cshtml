@using WebApp.Library.Extensions
@using System.Security.Claims
@using Orvosi.Data
@using Orvosi.Shared.Enums
@using Features = Orvosi.Shared.Enums.Features
@using WebApp.ViewModels.ServiceRequestViewModels
@using WebApp.Library.Projections
@using WebApp.Library
@using Orvosi.Data.Filters

@{
    var features = User.Identity.GetFeatures();
    var userContext = User.Identity.GetUserContext();
    var physicianContext = User.Identity.GetPhysicianContext();
    var physicianId = physicianContext == null ? (Guid?)null : physicianContext.Id;
    var userId = User.Identity.GetGuidUserId();
    var roleId = User.Identity.GetRoleId();

    var context = DependencyResolver.Current.GetService<OrvosiDbContext>();

    IEnumerable<CaseSearchListItem> caseSearchList = new List<CaseSearchListItem>();
    if (features.Contains(Features.ServiceRequest.Search))
    {
        var list = context.ServiceRequests.Where(sr => sr.IsDeleted == false).CanAccess(userId, physicianId, roleId).AsQueryable();
        caseSearchList = list
            .Select(sr => new
            {
                Id = sr.Id,
                ClaimantName = sr.ClaimantName
            })
            .ToList()
            .Select(sr => new CaseSearchListItem
            {
                Id = sr.Id,
                Claimant = sr.ClaimantName,
                Url = Url.Content("~/ServiceRequest/Details/" + sr.Id)
            });
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <script src="https://use.fontawesome.com/3877822095.js"></script>
    @Styles.Render("~/Bundles/Content/css")
    @Styles.Render("~/Bundles/Content/markdown")
    @Scripts.Render("~/bundles/modernizr")
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/bundles/bootstrap")
</head>
<body>
    <div class="navbar navbar-default">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a href="~/" class="navbar-brand top-nav"><div class="image-logo-sm"></div></a>
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    @if (HttpContext.Current.User.Identity.IsAuthenticated)
                    {
                        if (features.Contains(Features.ServiceRequest.Search))
                        {
                            <li>
                                <div id="cases">
                                    <form class="navbar-form navbar-left" role="search">
                                        <div class="form-group dropdown">
                                            <input onfocus="dropdownSearch()" type="text" class="form-control search dropdown-toggle" placeholder="Search" data-toggle="dropdown">
                                            <ul id="case-list" class="list dropdown-menu scrollable-menu"></ul>
                                        </div>
                                    </form>
                                </div>
                            </li>
                        }
                        if (features.Contains(Features.ServiceRequest.SubmitRequest))
                        {
                            <li class="dropdown">
                                <a href="~/ServiceRequest" class="dropdown-toggle" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false"><i class="fa fa-plus fa-lg text-success"></i></a>
                                <ul class="dropdown-menu">
                                    <li><a href="~/Availability/Index">Book an Assessment</a></li>
                                    <li><a href="~/ServiceRequest/CreateAddOn">Request a Service</a></li>
                                </ul>
                            </li>
                        }
                        if (features.Contains(Features.Work.WorkSection))
                        {
                            <li>@Html.ActionLink("Work", "DaySheet", "Work", new { area = "" }, null)</li>
                        }
                        if (features.Contains(Features.Availability.AvailabilitySection))
                        {
                            <li>@Html.ActionLink("Availability", "Home", "Availability", new { area = "" }, null)</li>
                        }
                        if (features.Contains(Features.Accounting.AccountingSection))
                        {
                            <li>@Html.ActionLink("Invoices", "UnsentInvoices", "Accounting", new { area = "" }, null)</li>
                        }
                        if (features.Contains(Features.Services.Manage))
                        {
                            <li>@Html.ActionLink("MyOrvo", "Index", "ServiceCatalogue", new { area = "" }, null)</li>
                        }
                        if (features.Contains(Features.Reports.View))
                        {
                            <li>@Html.ActionLink("Reports", "Index", "Home", new { area = "Reports" }, null)</li>
                        }
                        if (features.Contains(Features.Admin.Section))
                        {
                            <li role="presentation" class="dropdown">
                                <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                                    Admin <span class="caret"></span>
                                </a>
                                <ul class="dropdown-menu">
                                    @if (features.Contains(Features.Collaborator.CollaboratorSection))
                                    {
                                        <li>@Html.ActionLink("Team", "Index", "Collaborator", new { area = "" }, null)</li>
                                    }
                                    @if (features.Contains(Features.Admin.ViewCompanies))
                                    {
                                        <li>@Html.ActionLink("Companies", "", "PhysicianCompany", new { area = "" }, null)</li>
                                    }
                                    @if (features.Contains(Features.Admin.ViewServices))
                                    {
                                        <li>@Html.ActionLink("Services", "", "Service", new { area = "" }, null)</li>
                                    }
                                </ul>
                            </li>
                        }
                        if (features.Contains(Features.SysAdmin.Section))
                        {
                            <li role="presentation" class="dropdown">
                                <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                                    Sys Admin <span class="caret"></span>
                                </a>
                                <ul class="dropdown-menu">
                                    @if (features.Contains(Features.SysAdmin.ViewProcessTemplates))
                                    {
                                        <li>@Html.ActionLink("Workflow Master List", "", "ServiceRequestTemplate", new { area = "" }, null)</li>
                                    }
                                    @if (features.Contains(Features.SysAdmin.ViewCompanies))
                                    {
                                        <li>@Html.ActionLink("Company Master List", "", "Company", new { area = "Admin" }, null)</li>
                                    }
                                    @if (features.Contains(Features.SysAdmin.ViewAddresses))
                                    {
                                        <li>@Html.ActionLink("Address Master List", "", "Location", new { area = "Admin" }, null)</li>
                                    }
                                    @if (features.Contains(Features.SysAdmin.ViewServices))
                                    {
                                        <li>@Html.ActionLink("Service Master List", "", "Service", new { area = "Admin", parentId = ServicePortfolios.Physician }, null)</li>
                                    }
                                    @if (features.Contains(Features.SysAdmin.ManageTasks))
                                    {
                                        <li>@Html.ActionLink("Task Master List", "", "Task", new { area = "" }, null)</li>
                                    }
                                    @if (features.Contains(Features.ServiceRequest.View))
                                    {
                                        <li>@Html.ActionLink("Case Master List", "Index", "ServiceRequest", new { area = "" }, null)</li>
                                    }
                                </ul>
                            </li>
                        }
                        if (features.Contains(Features.SecurityAdmin.Section))
                        {
                            <li role="presentation" class="dropdown">
                                <a class="dropdown-toggle" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false">
                                    Security <span class="caret"></span>
                                </a>
                                <ul class="dropdown-menu">
                                    <li>@Html.ActionLink("Users", "", "User", new { area = "Admin", parentId = RoleCategories.Physician }, null)</li>
                                    <li>@Html.ActionLink("Roles", "", "AspNetRoles", new { area = "Admin" }, null)</li>
                                    <li>@Html.ActionLink("Features", "", "Feature", new { area = "Admin" }, null)</li>
                                    <li class="divider"></li>
                                    <li><a href="http://orvosi-hangfire.azurewebsites.net/522b64d4-53c7-450f-85b1-a82191a33704">Hangfire</a></li>
                                    <li><a onclick="updateAssessmentDayTaskStatuses()">Update Assessment Day Task Statuses</a></li>
                                    <li><a onclick="updateTaskStatuses()">Update Task Statuses</a></li>
                                    <li><a onclick="updateServiceRequestStatuses()">Update Service Request Statuses</a></li>
                                </ul>
                            </li>
                        }
                    }
                </ul>
                @Html.Action("_LoginPartial", "Account", new { area = "" })
            </div>
        </div>
    </div>
    <div class="container-fluid body-content">
        @if (features.Contains(Features.AppContext.ChangeUserContext))
        {
            var viewDataService = DependencyResolver.Current.GetService<ViewDataService>();
            var physicianSelectList = viewDataService.GetPhysicianSelectList();

            <div class="row">
                <div class="col-xs-8 col-md-6">
                    <div class="text-danger">@TempData["UserContextMessage"]</div>
                    <form action="~/Account/ChangeUserContext/" method="get" class="form-inline">
                        <div>
                            @Html.DropDownList("userId", new SelectList(physicianSelectList, "Value", "Text", "Group.Name", userContext.Id), "-- All physicians --", new { @class = "form-control input-sm", onchange = "this.form.submit();" })
                        </div>
                    </form>
                </div>
            </div>
            <hr />
        }
        @RenderBody()

        <div id="admin-tasks-messages"></div>
    </div>
    <footer class="sticky-footer">
        <div class="container-fluid">
            <div class="row">
                <div class="col-md-12">
                    <div class="copyright text-muted small pull-left">Orvosi Inc. &copy; @DateTime.Now.Year. All Rights Reserved</div>
                    <div class="pull-right">
                        <ul class="list-inline quicklinks small">
                            <li>
                                <a href="#">Privacy Policy</a>
                            </li>
                            <li>
                                <a href="#">Terms of Use</a>
                            </li>
                            @*
                                <li>
                                    @SystemTime.Now()
                                </li>*@
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </footer>

    @Html.Partial("ModalContainerForLoader");
    <!--
    To collect end-user usage analytics about your application,
    insert the following script into each page you want to track.
    Place this code immediately before the closing </head> tag,
    and before any other scripts. Your first data will appear
    automatically in just a few seconds.
    -->

    @Scripts.Render("~/bundles/signalr")
    @Scripts.Render("~/bundles/markdown")

    <script src="~/MVCGridHandler.axd/script.js"></script>

    <script type="text/javascript">

        function showLoader(message) {
            $('#modal-container-for-loader').modal({backdrop: 'static'});
            $('.loading-text').html(message);
        }

        function hideLoader() {
            $('#modal-container-for-loader').modal('hide');
            $('.loading-text').html('Loading ...');
        }

        $(document).ajaxError(function( event, jqxhr, settings, thrownError ) {
            if ( jqxhr.status === 403 ) {
                toastr.error("Sorry, you do not have access to this feature.");
            }
            else {
                toastr.error("Sorry, an unexpected error occurred.");
            }
        });

        $(document).ready(function(){
            $('.dropdown-submenu a.change-role').on("click", function(e){
                $(this).next('ul').toggle();
                e.stopPropagation();
                e.preventDefault();
            });
        });

        function dropdownSearch(){
            $('.dropdown-toggle').dropdown();
        }

        function changeRole(roleId) {
            let url = '@Url.Content("~/Account/ChangeRole")';
            $.get(
                url,
                {
                    roleId: roleId
                },
                function (data) {
                    window.location.reload();
                }
            );
        }


        var options = {
            valueNames: [
                'Id',
                'Claimant',
                { attr: 'href', name: 'Url' },
            ],
            item: '<li><a class="Url" href=""><span class="Id"></span> - <span class="Claimant"></span></a></li>'
        };

        var values = @Html.Raw(caseSearchList.ToJson());

        var caseList = new List('cases', options, values);

    </script>

    <script type="text/javascript">

        function updateAssessmentDayTaskStatuses() {
            let urlIds = '@Url.Content("~/ServiceRequestTask/GetAssessmentDayTasks")';
            let urlUpdate = '@Url.Content("~/ServiceRequestTask/UpdateAssessmentDayTaskStatuses")';

            let adminMessages = document.getElementById('admin-tasks-messages');
            $.get(urlIds)
                .done(function (data) {
                    for (var i = 0; i < data.length; i++) {
                        $.post(urlUpdate, { serviceRequestTaskId: data[i].id, newTaskStatusId: data[i].newTaskStatusId })
                            .done(function (data) {
                                $(adminMessages).append('<div class="text-success">Assessment day task status success ' + data.serviceRequestId + '</div>');
                            })
                            .error(function () {
                                $(adminMessages).append('<div class="alert alert-danger">Assessment day task status error</div>');
                            });
                    }
                });
        }

        function updateTaskStatuses() {
            let urlIds = '@Url.Content("~/ServiceRequest/GetAllServiceRequestIds")';
            let urlUpdate = '@Url.Content("~/ServiceRequest/UpdateDependentTaskStatuses")';

            let adminMessages = document.getElementById('admin-tasks-messages');
            $.get(urlIds)
                .done(function (data) {
                    for (var i = 0; i < data.length - 1; i++) {
                        $.post(urlUpdate, { serviceRequestId: data[i] })
                            .done(function (data) {
                                $(adminMessages).append('<div class="text-success">Task status success ' + data.serviceRequestId + '</div>');
                            })
                            .error(function () {
                                $(adminMessages).append('<div class="alert alert-danger">Task status error</div>');
                            });
                    }
                });
        }

        function updateServiceRequestStatuses() {
            let urlIds = '@Url.Content("~/ServiceRequest/GetAllServiceRequestIds")';
            let urlUpdate = '@Url.Content("~/ServiceRequest/UpdateServiceRequestStatuses")';

            let adminMessages = document.getElementById('admin-tasks-messages');
            $.get(urlIds)
                .done(function (data) {
                    for (var i = 0; i < data.length - 1; i++) {
                        $.post(urlUpdate, { serviceRequestId: data[i] })
                            .done(function (data) {
                                $(adminMessages).append('<div class="text-success">Service request status success ' + data.serviceRequestId + '</div>');
                            })
                            .error(function () {
                                $(adminMessages).append('<div class="alert alert-danger">Service request status error</div>');
                            });
                    }
                });
        }

        function updateAllWorkStatuses() {


            let adminMessages = document.getElementById('admin-tasks-messages');
            $.get(urlIds)
                .done(function (data) {
                    for (var i = 0; i < data.length - 1; i++) {
                        $.post(urlUpdate, { serviceRequestId: data[i] })
                            .done(function (data) {
                                $(adminMessages).append('<div class="text-success">tasks success ' + data.serviceRequestId + '</div>');
                                $.post(urlRequestUpdate, { serviceRequestId: data.serviceRequestId })
                                    .done(function (data) {
                                        $(adminMessages).append('<div class="text-success">request success ' + data.serviceRequestId + '</div>');
                                    })
                                    .error(function () {
                                        $(adminMessages).append('<div class="alert alert-danger">request error</div>');
                                    });
                            })
                            .error(function () {
                                $(adminMessages).append('<div class="alert alert-danger">tasks error</div>');
                            });
                    }
                });

        }
    </script>

    @RenderSection("scripts", required: false)
</body>
</html>
