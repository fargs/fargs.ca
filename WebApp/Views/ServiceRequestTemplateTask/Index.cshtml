@using Orvosi.Data.Filters
@model Orvosi.Data.ServiceRequestTemplate

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>@Model.Name</h2>

<p>
    @Html.ActionLink("Create New", "Create", new { ServiceRequestTemplateId = Model.Id })
</p>
<table class="table">
    <tr>
        <th>
            Task
        </th>
        <th>
            Responsible Role
        </th>
        <th>
            Sequence
        </th>
        <th>
            Is Critical Path
        </th>
        <th>
            Is Baseline
        </th>
        <th>
            Due Date
        </th>
        <th>
            Effective Date
        </th>
        <th>
            Depends On
        </th>
        <th></th>
    </tr>

@foreach (var item in Model.ServiceRequestTemplateTasks.AsQueryable().AreNotDeleted().OrderBy(srt => srt.Sequence)) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.OTask.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.AspNetRole.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Sequence)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsCriticalPath)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.IsBaselineDate)
        </td>
        <td>
            @(!item.IsBaselineDate ? item.DueDateDurationFromBaseline.HasValue ? Html.DisplayFor(modelItem => item.DueDateDurationFromBaseline) : Html.Raw("<span class='text-muted'>ASAP</span>") : Html.Raw("<span class='text-muted'> (BASELINE)</span>"))
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.EffectiveDateDurationFromBaseline)
        </td>
        <td>
             @item.Child.Count
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
