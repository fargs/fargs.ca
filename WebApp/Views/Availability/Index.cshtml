@using Orvosi.Data
@using Orvosi.Shared.Enums
@using WebApp.Library.Extensions
@using System.Runtime.InteropServices


<script src="https://code.jquery.com/jquery-1.10.2.js"></script>

@model WebApp.ViewModels.AvailabilityViewModels.IndexViewModel
@{
    ViewBag.Title = "Availability";
}

@{
    var db = new OrvosiDbContext();

    ViewBag.Users = db.AspNetUsers
        .AsEnumerable()
        .Where(a => a.GetRole().Id == AspNetRoles.Physician)
        .Select(c => new SelectListItem()
        {
            Text = c.GetDisplayName(),
            Value = c.Id.ToString(),
            Group = new SelectListGroup() { Name = c.AspNetUserRoles.First().AspNetRole.Name }
        });

    ViewBag.Intake = db.AspNetUsers
        .AsEnumerable()
        .Where(a => a.GetRole().Id == AspNetRoles.Physician 
        || a.GetRole().Id == AspNetRoles.DocumentReviewer
        || a.GetRole().Id == AspNetRoles.IntakeAssistant)
        .Select(c => new SelectListItem()
        {
            Text = c.GetDisplayName(),
            Value = c.Id.ToString(),
            Group = new SelectListGroup() { Name = c.AspNetUserRoles.First().AspNetRole.Name }
        });

    

    ViewBag.Provinces = db.Provinces
    .AsEnumerable()
    .Where(a => a.ProvinceCode == "CA-ON" || a.ProvinceCode == "CA-BC")
    .OrderByDescending(b => b.Id)
    .Select(c => new SelectListItem()
    {
        Text = c.ProvinceName,
        Value = c.Id.ToString()
    });

    ViewBag.Years = DateRanges.GetYears()
    .Select(c => new SelectListItem()
    {
        Text = c.Value,
        Value = c.Key.ToString()
    }).ToList();

    ViewBag.Months = DateRanges.GetMonths()
        .Select(c => new SelectListItem()
        {
            Text = c.Value,
            Value = c.Key.ToString()
        }).ToList();


}

@if (User.Identity.GetGuidUserId() != Model.SelectedUser.Id)
{
    <div class="lead">@Model.SelectedUser.GetDisplayName()</div>
}



<h2>Availability</h2>

<div class="row">
    <div class="col-md-12">
        
        <form action="~/Availability/Index/" method="get" class="form-inline">
            @if (User.Identity.GetRoleId() == AspNetRoles.SuperAdmin || User.Identity.GetRoleId() == AspNetRoles.CaseCoordinator)
            {
                <div class="form-group">
                    @Html.DropDownList("PhysicianId", new SelectList(ViewBag.Users, "Value", "Text", Model.FilterArgs.PhysicianId), new { @class = "form-control" })
                </div>
            }
            <div class="form-group">
                @Html.DropDownList("Year", new SelectList(ViewBag.Years, "Value", "Text", Model.FilterArgs.Year.Value.ToString()), new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.DropDownList("Month", new SelectList(ViewBag.Months, "Value", "Text", Model.FilterArgs.Month.Value.ToString()), new { @class = "form-control" })
            </div>
            <button type="submit" class="btn btn-primary">Filter</button>
        </form>
    </div>
</div>
<p />
<div class="row">
    <div class="col-md-12">
        <form action="~/Availability/AddDay/@Model.SelectedUser.Id" method="get" class="form-inline">
            <div class="form-group">
                @Html.DropDownList("Province", new SelectList(ViewBag.Provinces, "Value", "Text", ViewBag.Provinces), new { @class = "form-control" })
            </div>
            <button type="submit" class="btn btn-primary">Add Available Day(s)</button>
        </form>
     </div>
</div>
<h3>@Model.FilterArgs.FilterDate.ToString("yyyy MMMM")</h3>
@{
    int i = 0;

    //var selectedList = Model.Resources.Select(x => new { x.AppointmentDate, x.IntakeAssistantId, x.DocumentReviewerId}).Distinct();
}

@foreach (var day in Model.AvailableDays.OrderBy(c => c.Day))
{
    <div class="row o-dashboard-tr">
        <div class="col-md-2" style="padding:15px 15px">
            <div>
                    @if (day.AvailableSlots.Any() && day.AvailableSlots.All(a => a.ServiceRequests.Where(sr => !sr.CancelledDate.HasValue).Any()))
                    {
                        <div class="pull-left">@day.Day.ToString("dddd dd")<span>&nbsp;&nbsp;</span></div>
                        <i class="fa fa-check fa-lg text-success"></i>
                    }
                    else if (day.AvailableSlots.Any(a => a.ServiceRequests.Where(sr => !sr.CancelledDate.HasValue).Any()))
                    {
                        <div class="pull-left bg-warning">@day.Day.ToString("dddd dd")<span>&nbsp;&nbsp;</span></div>
                        <i class="fa fa-exclamation fa-lg text-warning"></i>
                    }
                    else
                    {
                        <form action="~/Availability/CancelDay" method="post">
                            @Html.Hidden("id", day.Id)
                            <div class="pull-left bg-danger">@day.Day.ToString("dddd dd")<span>&nbsp;&nbsp;</span></div>
                            <button type="submit" class="btn btn-link" style="padding: 0 0 0 0;"><i class="glyphicon glyphicon-remove"></i></button>
                        </form>
                    }
            </div>
            <span>
                @if (day.LocationId == null)
                {
                    <span class="small text-muted">No Location</span>
                }
                else
                {
                    <strong class="small">@string.Format("{0} - {1}", day.Address.Name, day.Address.City)</strong>
                }
            </span>
            <span> | </span>
            <span>
                @if (day.CompanyId == null)
                {
                    <span class="small text-muted">No Company</span>
                }
                else
                {
                    <strong class="small">@day.Company.Name</strong>
                }
            </span>
            <input type="button" data-target="#result@(i)" data-toggle="modal" value="Open Modal Popup" onclick="ShowModelPopUp();" />
            <div id="result@(i)" class="modal" tabindex="-1" style="display:none;">                             
                   @{
                       Html.BeginForm("AssignResources", "Availability");
                       //create IEnumerable of resources of each available day - null if empty
                       IEnumerable<AvailableDayResource> resources;
                       if (day.AvailableDayResources.FirstOrDefault(x => x.AvailableDayId == day.Id) != null)
                       {
                           resources = day.AvailableDayResources.Where(x => x.AvailableDayId == day.Id);
                       }
                       else
                       {
                           resources = null;
                       }
                }
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <button class="close" data-dissmiss="modal">&times;</button>
                            <h4 class="modal-title">
                                Select Resources for 
                                @Model.SelectedUser.GetDisplayName()
                                 on
                                @day.Day.ToString("dddd dd")
                            </h4>
                        </div>
                        <div class="modal-body">
                            <div class="form-group">
                               
                                @Html.Hidden("AvailabilityId", day.Id)             
                                @{
                                        //displays either List with selected values or without (based on DB)
                                       if (resources != null)
                                       {
                                            @Html.ListBox("list", 
                                            new MultiSelectList(ViewBag.Intake, "Value", "Text", resources.Select(x=>x.UserId)), 
                                            new { name="list", @class = "form-control" });
                                       }
                                       else
                                       {
                                            @Html.ListBox("list",
                                            new MultiSelectList(ViewBag.Intake, "Value", "Text"),
                                            new { name = "list", @class = "form-control" });
                                       }
                                }
                                </div>
                            <!-- this script handles multiple input in listbox without using CTRL key-->
                            <script>
                                window.onmousedown = function (e) {
                                    var el = e.target;
                                    if (el.tagName.toLowerCase() == 'option' && el.parentNode.hasAttribute('multiple')) {
                                        e.preventDefault();

                                        // toggle selection
                                        if (el.hasAttribute('selected')) el.removeAttribute('selected');
                                        else el.setAttribute('selected', '');

                                        // hack to correct buggy behavior
                                        var select = el.parentNode.cloneNode(true);
                                        el.parentNode.parentNode.replaceChild(select, el.parentNode);
                                    }
                                }
                            </script>
                        </div>                       
                        <div class="modal-footer">                            
                            <input class="btn btn-primary" value="Edit" type="submit">
                            <button class="btn btn-primary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                 </div>
            </div>
        </div>   
        <div class="col-md-10" style="padding:15px 15px">
            <form action="~/Availability/AddSlots" method="post">
                @Html.Hidden("AvailableDayId", day.Id)
                <div class="bootstrap-timepicker">
                    <select name="StartHour">
                        <option value="7">7h</option>
                        <option value="8" selected>8h</option>
                        <option value="9">9h</option>
                        <option value="10">10h</option>
                        <option value="11">11h</option>
                        <option value="12">12h</option>
                        <option value="13">13h</option>
                        <option value="14">14h</option>
                        <option value="15">15h</option>
                        <option value="16">16h</option>
                        <option value="17">17h</option>
                        <option value="18">18h</option>
                        <option value="19">19h</option>
                        <option value="20">20h</option>
                        <option value="21">21h</option>
                    </select>
                    <select name="StartMinute">
                        <option value="00">00</option>
                        <option value="15">15</option>
                        <option value="30">30</option>
                        <option value="45">45</option>
                    </select>
                    <select name="Duration">
                        <option value="15">15</option>
                        <option value="30">30</option>
                        <option value="45">45</option>
                        <option value="60" selected>1h</option>
                        <option value="75">1h15</option>
                        <option value="90">1h30</option>
                        <option value="105">1h45</option>
                        <option value="120">2h</option>
                    </select>
                    <select name="Repeat">
                        <option value="1">1</option>
                        <option value="2">2</option>
                        <option value="3">3</option>
                        <option value="4">4</option>
                        <option value="5">5</option>
                        <option value="6">6</option>
                        <option value="7">7</option>
                        <option value="8">8</option>
                        <option value="9">9</option>
                        <option value="10">10</option>
                    </select>
                    <button type="submit" class="btn btn-default btn-sm">Add Slot(s)</button>
                </div>
            </form>
            <ul class="list-inline" style="margin-bottom: 0;">
                @foreach (var slot in day.AvailableSlots.OrderBy(c => c.StartTime))
                {
                    <li>
                        <div class="pull-left" style="vertical-align: middle">
                            <form action="~/Availability/CancelSlot" method="post">
                                @Html.Hidden("id", slot.Id)
                                @if (slot.ServiceRequests.Where(sr => !sr.CancelledDate.HasValue).Any())
                                {
                                    <a href="~/ServiceRequest/Details/@slot.ServiceRequests.First().Id" target="_blank">
                                        <div class="pull-left text-muted">@slot.StartTime.ToString(@"hh\:mm") (@slot.Duration)</div>
                                        <i class="fa fa-check fa-lg" style="color:green;"></i>
                                    </a>
                                }
                                else
                                {
                                    <div class="bg-info">
                                        <div class="pull-left">
                                            <strong>@slot.StartTime.ToString(@"hh\:mm") (@slot.Duration)</strong>
                                        </div>
                                        <button type="submit" class="btn btn-link" style="padding: 0 0 0 0"><i class="glyphicon glyphicon-remove"></i></button>
                                    </div>
                                }
                            </form>
                        </div>
                    </li>
                }
            </ul>
        </div>
    </div>

    i++;
}
