// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Orvosi.Data
{

    // ServiceRequestTemplateTaskRelated
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class ServiceRequestTemplateTaskRelatedConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ServiceRequestTemplateTaskRelated>
    {
        public ServiceRequestTemplateTaskRelatedConfiguration()
            : this("dbo")
        {
        }

        public ServiceRequestTemplateTaskRelatedConfiguration(string schema)
        {
            ToTable(schema + ".ServiceRequestTemplateTaskRelated");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("int").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.Identity);
            Property(x => x.ServiceRequestTemplateTaskId).HasColumnName(@"ServiceRequestTemplateTaskId").IsOptional().HasColumnType("uniqueidentifier");
            Property(x => x.RelatedTaskId).HasColumnName(@"RelatedTaskId").IsOptional().HasColumnType("uniqueidentifier");
            Property(x => x.Relationship).HasColumnName(@"Relationship").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);

            // Foreign keys
            HasOptional(a => a.RelatedTask).WithMany(b => b.RelatedTask).HasForeignKey(c => c.RelatedTaskId).WillCascadeOnDelete(false); // FK_ServiceRequestTemplateTaskRelated_ServiceRequestTemplateTask1
            HasOptional(a => a.ServiceRequestTemplateTask_ServiceRequestTemplateTaskId).WithMany(b => b.ServiceRequestTemplateTaskId).HasForeignKey(c => c.ServiceRequestTemplateTaskId).WillCascadeOnDelete(false); // FK_ServiceRequestTemplateTaskRelated_ServiceRequestTemplateTask
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
