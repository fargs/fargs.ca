@using Orvosi.Data
@using WebApp.Models
@using Orvosi.Shared.Enums
@using WebApp.Library.Extensions
@using WebApp.Library
@using LinqKit
@model WebApp.ViewModels.ServiceCatalogueViewModels.IndexViewModel

@{

    var db = DependencyResolver.Current.GetService<OrvosiDbContext>();
    var viewDataService = DependencyResolver.Current.GetService<ViewDataService>();

    var userId = User.Identity.GetGuidUserId();
    var userContext = User.Identity.GetPhysicianContext();
    var physicianId = userContext == null ? (Guid?)null : userContext.Id;
    var currentContextId = physicianId.GetValueOrDefault(userId);
    var roleId = User.Identity.GetRoleId();

    var assessmentServices = viewDataService.GetPhysicianAssessmentServices(currentContextId);

    var provinces = db.Provinces
        .Where(p => p.Cities.Any())
        .Select(ProvinceDto.FromProvinceEntity.Expand())
        .OrderBy(p => p.Name)
        .ToList();
}


<table class="table table-bordered" id="exams-table">
    <thead>
        <tr>
            <th>
                City
            </th>
            @foreach (var item in assessmentServices)
            {
                <th>
                    @item.Name
                </th>
            }
        </tr>
    </thead>
    <tbody>
        @foreach (var province in provinces)
        {
            <tr>
                <td style="background-color: lightgrey" colspan="@(assessmentServices.Count + 1)">
                    <strong>@province.Name</strong>
                </td>
            </tr>
            foreach (var city in province.Cities.OrderBy(c => c.Name))
            {
                <tr>
                    <td>
                        <div>@city.Name</div>
                    </td>
                    @foreach (var service in assessmentServices)
                    {
                        var serviceCatalogueItem = Model.ServiceCatalogues.SingleOrDefault(c => c.ServiceId == service.Id && c.LocationId == city.Id);
                        <td onclick='showServiceCatalogueEditForm(@Html.Raw(new { UserId = currentContextId, CompanyId = Model.FilterArgs.CompanyId, ServiceId = service.Id, LocationId = city.Id }.ToJson()))'>
                            @if (serviceCatalogueItem.Price.HasValue)
                            {
                                <span>@serviceCatalogueItem.Price.GetValueOrDefault(0).ToString("C2")</span>
                            }
                        </td>
                    }
                </tr>
            }
        }
    </tbody>
</table>
