// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Orvosi.Data
{

    // ServiceRequestTemplateTask
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class ServiceRequestTemplateTaskConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ServiceRequestTemplateTask>
    {
        public ServiceRequestTemplateTaskConfiguration()
            : this("dbo")
        {
        }

        public ServiceRequestTemplateTaskConfiguration(string schema)
        {
            ToTable(schema + ".ServiceRequestTemplateTask");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("uniqueidentifier").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.Sequence).HasColumnName(@"Sequence").IsOptional().HasColumnType("smallint");
            Property(x => x.ServiceRequestTemplateId).HasColumnName(@"ServiceRequestTemplateId").IsRequired().HasColumnType("smallint");
            Property(x => x.TaskId).HasColumnName(@"TaskId").IsOptional().HasColumnType("smallint");
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").IsRequired().HasColumnType("datetime");
            Property(x => x.ModifiedUser).HasColumnName(@"ModifiedUser").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.DueDateType).HasColumnName(@"DueDateType").IsOptional().IsFixedLength().HasColumnType("nchar").HasMaxLength(10);
            Property(x => x.ResponsibleRoleId).HasColumnName(@"ResponsibleRoleId").IsOptional().HasColumnType("uniqueidentifier");

            // Foreign keys
            HasOptional(a => a.AspNetRole).WithMany(b => b.ServiceRequestTemplateTasks).HasForeignKey(c => c.ResponsibleRoleId).WillCascadeOnDelete(false); // FK_ServiceRequestTemplateTask_AspNetRoles
            HasOptional(a => a.OTask).WithMany(b => b.ServiceRequestTemplateTasks).HasForeignKey(c => c.TaskId).WillCascadeOnDelete(false); // FK_ServiceRequestTemplateTask_Task
            HasRequired(a => a.ServiceRequestTemplate).WithMany(b => b.ServiceRequestTemplateTasks).HasForeignKey(c => c.ServiceRequestTemplateId).WillCascadeOnDelete(false); // FK_ServiceRequestTemplateTask_ServiceRequestTemplate
            HasMany(t => t.Parent).WithMany(t => t.Child).Map(m =>
            {
                m.ToTable("ServiceRequestTemplateTaskDependent", "dbo");
                m.MapLeftKey("ChildId");
                m.MapRightKey("ParentId");
            });
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
