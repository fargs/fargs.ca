@using Model
@using Model.Enums
@model WebApp.ViewModels.AvailabilityViewModels.IndexViewModel
@{
    ViewBag.Title = "Availability";
}

@{
    var db = new OrvosiEntities();

    ViewBag.Users = db.Users
        .Select(c => new SelectListItem()
        {
            Text = c.DisplayName,
            Value = c.Id,
            Group = new SelectListGroup() { Name = c.RoleName }
        }).ToList();

    ViewBag.Companies = db.Companies
        .Where(c => c.IsParent == false)
        .Select(c => new SelectListItem()
        {
            Text = c.Name,
            Value = c.Id.ToString(),
            Group = new SelectListGroup() { Name = c.ParentName }
        }).ToList();
}

@if (Model.CurrentUser.RoleCategoryId == RoleCategory.Admin)
{
    <div class="dropdown">
        <button class="btn btn-default dropdown-toggle" type="button" id="UsersDropdownMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
            Users
            <span class="caret"></span>
        </button>
        <ul class="dropdown-menu" aria-labelledby="UsersDropdownMenu">
            @foreach (SelectListItem item in ViewBag.Users)
            {
                //TODO: Group the list items
                <li><a href="~/Availability/Index/@item.Value">@item.Text</a></li>
            }
        </ul>
    </div>
}
<h2>Availability</h2>

<form action="~/Availability/AddDay" method="post" class="form-horizontal">

    @Html.HiddenFor(c => c.NewAvailableDay.PhysicianId)

    <div class="form-group">
        <label class="control-label col-md-2">Is Prebook</label>
        <div class="col-md-10">
            <div class="checkbox">
                @Html.CheckBoxFor(model => model.NewAvailableDay.IsPrebook)
                @Html.ValidationMessageFor(model => model.NewAvailableDay.IsPrebook, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Company</label>
        <div class="col-md-10">
            @Html.DropDownListFor(c => c.NewAvailableDay.CompanyId, new SelectList(ViewBag.Companies, "Value", "Text", "Group.Name", new { }), string.Empty, new { @class = "form-control" })
            @Html.ValidationMessageFor(c => c.NewAvailableDay.CompanyId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2">Available Day</label>
        <div class="col-md-10">
            <div class="input-group date" style="width:100%" id="AvailableDayPicker">
                @Html.TextBoxFor(c => c.NewAvailableDay.Day, new { @class = "form-control", size = "16" })
                <span class="input-group-addon"><i class="glyphicon glyphicon-calendar"></i></span>
            </div>
            @Html.ValidationMessageFor(c => c.NewAvailableDay.Day, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-push-2 col-md-10">
            <button type="submit" class="btn btn-primary">Submit</button>
        </div>
    </div>

</form>

@foreach (var day in Model.AvailableDays.OrderBy(c => c.Day))
{
    <div class="row">
        <p>
            <div class="col-md-2">
                <div>
                    @day.Day.ToString("yyyy MMM ddd dd")
                </div>
                <div>
                    @day.LocationName for @day.CompanyName
            </div>
        </div>
        <div class="col-md-10">
            <div class="btn-group">
                @foreach (var slot in day.AvailableSlots)
                {
                    <button class="btn btn-default">@slot.StartTime</button>
                }
            </div>
        </div>
    </p>
    </div>
}

<h2>This Month</h2>

<div class="btn-group">
    @for (int i = 1; i <= Model.Calendar.GetDaysInMonth(Model.Today.Year, Model.Today.Month); i++)
    {
        <button class="btn btn-default">@i</button>
    }
</div>

@section Scripts {

    @Scripts.Render("~/bundles/jqueryval")

    <script type="text/javascript">

        $('#AvailableDayPicker').datepicker({
            startDate: '-1d',
            format: 'yyyy-mm-dd',
            autoclose: true,
            datesDisabled: [@ViewBag.AvailableDaysCSV]
        });

    </script>
}