@using e = Model.Enums
@model WebApp.ViewModels.ServiceRequestViewModels.DetailsViewModel

<p>
    <ul class="list-unstyled">
        <li>
            <a href="@(Request.UrlReferrer == null ? Url.Content("~/servicerequest") : Request.UrlReferrer.ToString())" class="btn btn-default"><i class="glyphicon glyphicon-arrow-left"></i></a>

            <div class="btn-group">
                <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    Actions <span class="caret"></span>
                </button>
                @if (Model.User.RoleId == e.Roles.CaseCoordinator || Model.User.RoleId == e.Roles.SuperAdmin)
                {
                    <ul class="dropdown-menu">
                        <li><a href="~/ServiceRequest/Edit/@Model.ServiceRequest.Id">Edit</a></li>
                        <li><a href="~/ServiceRequest/Reschedule/@Model.ServiceRequest.Id">Reschedule</a></li>
                        <li><a href="~/ServiceRequest/ResourceAssignment/@Model.ServiceRequest.Id">Resource Assignment</a></li>
                        @if (Model.ServiceRequest.ServiceStatusId != e.ServiceStatus.NoShow)
                        {
                            <li role="separator" class="divider"></li>
                            if (Model.ServiceRequest.ServiceStatusId == e.ServiceStatus.Cancellation || Model.ServiceRequest.ServiceStatusId == e.ServiceStatus.LateCancellation)
                            {
                                <li>@Html.ActionLink("Undo Cancellation", "UndoCancel", new { id = Model.ServiceRequest.Id })</li>
                            }
                            else
                            {
                                <li>@Html.ActionLink("Cancel", "Cancel", new { id = Model.ServiceRequest.Id })</li>
                            }
                        }
                    </ul>
                }
            </div>

            <strong class="pull-right">Case @Model.ServiceRequest.Id</strong>

        </li>
    </ul>
</p>



<div class="row">
    <div class="col-sm-3">
        <h4><span class="btn btn-circle" style="color: white; background-color: @Model.ServiceRequest.PhysicianColorCode">@Model.ServiceRequest.PhysicianInitials </span> @Model.ServiceRequest.PhysicianDisplayName</h4>
        <hr />
        <h3>@Model.ServiceRequest.ClaimantName</h3>
        <p class="small text-muted">@Model.ServiceRequest.ServiceName, @Model.ServiceRequest.CompanyName</p>
        @if (Model.ServiceRequest.ServiceRequestStatusId == e.ServiceRequestStatus.Closed)
        {
            <span class="label label-danger">
                @Model.ServiceRequest.ServiceRequestStatusText
            </span>
        }
        @if (Model.ServiceRequest.ServiceCategoryId != e.ServiceCategories.AddOn)
        {
            <div class="form-group">
                <label class="control-label">Exam Date</label>
                <p class="form-control-static"> @Model.ServiceRequest.AppointmentDate.Value.ToString("ddd MMM dd yyyy")</p>
            </div>
        }
        <div class="form-group">
            <label class="control-label">Report Date</label>
            @if (Model.ServiceRequest.DueDate.HasValue)
            {
                <p class="form-control-static">@Model.ServiceRequest.DueDate.Value.ToString("ddd MMM dd yyyy")</p>
            }
            else
            {
                <p class="form-control-static">Not Set</p>
            }
        </div>

        <div class="form-group">
            <label class="control-label">Assignments</label>
            <p class="form-control-static">
                @Html.Partial("_ResourceAssignments", Model.ServiceRequest)
            </p>
        </div>

        <div class="row">
            <div class="col-md-12">
                @if (Model.ServiceRequest.ServiceStatusId == e.ServiceStatus.Cancellation || Model.ServiceRequest.ServiceStatusId == e.ServiceStatus.LateCancellation)
                {
                    <span class="alert alert-danger"><i class="glyphicon glyphicon-info-sign"></i> This case was a <strong>@(Model.ServiceRequest.IsLateCancellation ? "Late " : "")Cancellation</strong></span>
                    @Html.ActionLink("Undo", "UndoCancel", new { id = Model.ServiceRequest.Id })
                }
                else if (Model.ServiceRequest.ServiceStatusId == e.ServiceStatus.NoShow)
                {
                    <form action="~/ServiceRequest/ToggleNoShow" method="post">
                        @Html.AntiForgeryToken()
                        @Html.Hidden("id")
                        <span class="alert alert-danger"><i class="glyphicon gyphicon-info-sign"></i> This case was a <strong>No Show</strong></span>
                        <span><button class="btn btn-link">Undo</button></span>
                    </form>
                }
                else
                {
                    <form action="~/ServiceRequest/ToggleNoShow" method="post">
                        @Html.AntiForgeryToken()
                        @Html.Hidden("id")
                        <button class="btn btn-default">No Show</button>
                        <div class="help-block">Click to flag this case as a "No Show"</div>
                    </form>
                }
            </div>
        </div>
    </div>
    <div class="col-sm-5">
        <div class="panel panel-success">
            <div class="panel-heading"><strong>My Tasks</strong></div>
            @Html.Action("TaskList", "ServiceRequestTask", new { serviceRequestId = Model.ServiceRequest.Id, collapsed = true })
        </div>
        <div class="panel panel-default">
            <div class="panel-heading"><a href="#AllTasks" data-toggle="collapse">All Tasks</a></div>
            <div id="AllTasks" class="panel-collapse collapse">
                @Html.Action("TaskList", "ServiceRequestTask", new { serviceRequestId = Model.ServiceRequest.Id, myTasksOnly = false, collapsed = true })
            </div>
        </div>
        @if (Model.User.RoleCategoryId == e.RoleCategory.Admin)
        {
            <form action="~/ServiceRequestTask/AddRespondToQACommentsTask" method="post">
                @Html.Hidden("serviceRequestId", Model.ServiceRequest.Id)
                <input type="submit" value="Add Physician Task - Respond To QA Comments" class="btn btn-primary" />
            </form>
        }
    </div>
    <div class="col-sm-4">
        @if (Model.User.RoleCategoryId == e.RoleCategory.Admin)
        {
            <div class="panel panel-default">
                <div class="panel-heading">
                    Dropbox Integration
                </div>
                <div class="panel-body">
                    @if (Model.DropboxFolder == null)
                    {
                        <div>
                            <form action="~/ServiceRequest/CreateDropboxFolder/@Model.ServiceRequest.Id" method="post">
                                <button type="submit" class="btn btn-primary">Create Dropbox Folder</button>
                            </form>
                        </div>
                    }
                    else
                    {
                        <div class="row">
                            <div class="col-sm-12">
                                <small><strong>@Model.DropboxFolder.AsFolder.Name</strong></small>
                            </div>
                        </div>
                        if (Model.DropboxFolder.AsFolder.SharingInfo == null)
                        {
                            <div class="row top-buffer">
                                <div class="col-sm-12">
                                    <form action="~/ServiceRequest/ShareDropboxFolder" method="post">
                                        @Html.Hidden("folderId", Model.DropboxFolder.AsFolder.Id)
                                        @Html.Hidden("serviceRequestId", Model.ServiceRequest.Id)
                                        <button class="btn btn-sm btn-primary">Share</button>
                                    </form>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="row top-buffer">
                                <div class="col-sm-12">
                                    <form action="~/ServiceRequest/UnshareDropboxFolder" method="post">
                                        @Html.Hidden("folderId", Model.DropboxFolder.AsFolder.Id)
                                        @Html.Hidden("serviceRequestId", Model.ServiceRequest.Id)
                                        <button title="This is equivalent to unsharing the entire folder on dropbox." class="btn btn-sm btn-primary">Unshare Folder</button>
                                    </form>
                                </div>
                            </div>
                                <div class="row top-buffer">
                                    <div class="col-sm-12">
                                        @if (Model.ServiceRequest.PhysicianId != null)
                                        {
                                        <span title="@Model.ServiceRequest.PhysicianDisplayName - Physician" class="btn btn-circle disabled pull-left" style="cursor: default; color: white; background-color: @Model.ServiceRequest.PhysicianColorCode;">@Model.ServiceRequest.PhysicianInitials</span>
                                            if (Model.DropboxFolderMembers != null && Model.DropboxFolderMembers.Exists(c => c.AsMemberInfo.Value.Profile.Email.StartsWith((Model.ServiceRequest.PhysicianUserName == null ? string.Empty : Model.ServiceRequest.PhysicianUserName))))
                                            {
                                                var physician = Model.DropboxFolderMembers.Single(c => c.AsMemberInfo.Value.Profile.Email.StartsWith((Model.ServiceRequest.PhysicianUserName == null ? string.Empty : Model.ServiceRequest.PhysicianUserName)));
                                        <form action="~/ServiceRequest/UnshareDropboxFolderFromMember" method="post" class="pull-left">
                                            @Html.Hidden("folderId", Model.DropboxFolder.AsFolder.Id)
                                            @Html.Hidden("userId", Model.ServiceRequest.PhysicianId)
                                            @Html.Hidden("serviceRequestId", Model.ServiceRequest.Id)
                                            <button type="submit" class="btn btn-sm btn-primary">Unshare</button>
                                        </form>
                                        <span>@physician.AsMemberInfo.Value.Profile.Name.DisplayName</span>
                                        <em class="text-muted"> Physician</em>
                                            }
                                            else
                                            {
                                        <form action="~/ServiceRequest/ShareDropboxFolderToMember" method="post" class="pull-left">
                                            @Html.Hidden("folderId", Model.DropboxFolder.AsFolder.Id)
                                            @Html.Hidden("userId", Model.ServiceRequest.PhysicianId)
                                            @Html.Hidden("serviceRequestId", Model.ServiceRequest.Id)
                                            <button type="submit" class="btn btn-sm btn-primary">Share</button>
                                        </form>
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="row top-buffer">
                                    <div class="col-sm-12">
                                        @if (Model.ServiceRequest.IntakeAssistantId != null)
                                        {
                                        <span title="@Model.ServiceRequest.IntakeAssistantName - Intake Assistant" class="btn btn-circle disabled pull-left" style="cursor: default; color: white; background-color: @Model.ServiceRequest.IntakeAssistantColorCode;">@Model.ServiceRequest.IntakeAssistantInitials</span>
                                            if (Model.DropboxFolderMembers != null && Model.DropboxFolderMembers.Exists(c => c.AsMemberInfo.Value.Profile.Email.StartsWith((Model.ServiceRequest.IntakeAssistantUserName == null ? string.Empty : Model.ServiceRequest.IntakeAssistantUserName))))
                                            {
                                                var intake = Model.DropboxFolderMembers.Single(c => c.AsMemberInfo.Value.Profile.Email.StartsWith((Model.ServiceRequest.IntakeAssistantUserName == null ? string.Empty : Model.ServiceRequest.IntakeAssistantUserName)));
                                        <form action="~/ServiceRequest/UnshareDropboxFolderFromMember" method="post" class="pull-left">
                                            @Html.Hidden("folderId", Model.DropboxFolder.AsFolder.Id)
                                            @Html.Hidden("userId", Model.ServiceRequest.IntakeAssistantId)
                                            @Html.Hidden("serviceRequestId", Model.ServiceRequest.Id)
                                            <button type="submit" class="btn btn-sm btn-primary">Unshare</button>
                                        </form>
                                        <span>@intake.AsMemberInfo.Value.Profile.Name.DisplayName</span>
                                        <em class="text-muted"> Intake Assistant</em>
                                            }
                                            else
                                            {
                                        <form action="~/ServiceRequest/ShareDropboxFolderToMember" method="post" class="pull-left">
                                            @Html.Hidden("folderId", Model.DropboxFolder.AsFolder.Id)
                                            @Html.Hidden("userId", Model.ServiceRequest.IntakeAssistantId)
                                            @Html.Hidden("serviceRequestId", Model.ServiceRequest.Id)
                                            <button type="submit" class="btn btn-sm btn-primary">Share</button>
                                        </form>
                                            }
                                        }
                                    </div>
                                </div>
                                <div class="row top-buffer">
                                    <div class="col-sm-12">
                                        @if (Model.ServiceRequest.DocumentReviewerId != null)
                                            {
                                            <span title="@Model.ServiceRequest.DocumentReviewerName - Document Reviewer" class="btn btn-circle disabled pull-left" style="cursor: default; color: white; background-color: @Model.ServiceRequest.DocumentReviewerColorCode;">@Model.ServiceRequest.DocumentReviewerInitials</span>
                                                if (Model.DropboxFolderMembers != null && Model.DropboxFolderMembers.Exists(c => c.AsMemberInfo.Value.Profile.Email.StartsWith((Model.ServiceRequest.DocumentReviewerUserName == null ? string.Empty : Model.ServiceRequest.DocumentReviewerUserName))))
                                                {
                                                    var member = Model.DropboxFolderMembers.Single(c => c.AsMemberInfo.Value.Profile.Email.StartsWith((Model.ServiceRequest.DocumentReviewerUserName == null ? string.Empty : Model.ServiceRequest.DocumentReviewerUserName)));
                                            <form action="~/ServiceRequest/UnshareDropboxFolderFromMember" method="post" class="pull-left">
                                                @Html.Hidden("folderId", Model.DropboxFolder.AsFolder.Id)
                                                @Html.Hidden("userId", Model.ServiceRequest.DocumentReviewerId)
                                                @Html.Hidden("serviceRequestId", Model.ServiceRequest.Id)
                                                <button type="submit" class="btn btn-sm btn-primary">Unshare</button>
                                            </form>
                                            <span>@member.AsMemberInfo.Value.Profile.Name.DisplayName</span>
                                            <em class="text-muted"> Document Reviewer</em>
                                                }
                                                else
                                                {
                                            <form action="~/ServiceRequest/ShareDropboxFolderToMember" method="post" class="pull-left">
                                                @Html.Hidden("folderId", Model.DropboxFolder.AsFolder.Id)
                                                @Html.Hidden("userId", Model.ServiceRequest.DocumentReviewerId)
                                                @Html.Hidden("serviceRequestId", Model.ServiceRequest.Id)
                                                <button type="submit" class="btn btn-sm btn-primary">Share</button>
                                            </form>
                                                }
                                            }
                                    </div>
                                </div>
                                    <div class="row top-buffer">
                                        <div class="col-sm-12">
                                            @if (Model.ServiceRequest.CaseCoordinatorId != null)
                                        {
                                        <span title="@Model.ServiceRequest.CaseCoordinatorName - Case Coordinator" class="btn btn-circle disabled pull-left" style="cursor: default; color: white; background-color: @Model.ServiceRequest.CaseCoordinatorColorCode;">@Model.ServiceRequest.CaseCoordinatorInitials</span>
                                            if (Model.DropboxFolderMembers != null && Model.DropboxFolderMembers.Exists(c => c.AsMemberInfo.Value.Profile.Email.StartsWith((Model.ServiceRequest.CaseCoordinatorUserName == null ? string.Empty : Model.ServiceRequest.CaseCoordinatorUserName))))
                                            {
                                                var member = Model.DropboxFolderMembers.Single(c => c.AsMemberInfo.Value.Profile.Email.StartsWith((Model.ServiceRequest.CaseCoordinatorUserName == null ? string.Empty : Model.ServiceRequest.CaseCoordinatorUserName)));
                                        <form action="~/ServiceRequest/UnshareDropboxFolderFromMember" method="post" class="pull-left">
                                            @Html.Hidden("folderId", Model.DropboxFolder.AsFolder.Id)
                                            @Html.Hidden("userId", Model.ServiceRequest.CaseCoordinatorId)
                                            @Html.Hidden("serviceRequestId", Model.ServiceRequest.Id)
                                            <button type="submit" class="btn btn-sm btn-primary">Unshare</button>
                                        </form>
                                        <span>@member.AsMemberInfo.Value.Profile.Name.DisplayName</span>
                                        <em class="text-muted"> Case Coordinator</em>
                                            }
                                            else
                                            {
                                        <form action="~/ServiceRequest/ShareDropboxFolderToMember" method="post" class="pull-left">
                                            @Html.Hidden("folderId", Model.DropboxFolder.AsFolder.Id)
                                            @Html.Hidden("userId", Model.ServiceRequest.CaseCoordinatorId)
                                            @Html.Hidden("serviceRequestId", Model.ServiceRequest.Id)
                                            <button type="submit" class="btn btn-sm btn-primary">Share</button>
                                        </form>
                                            }
                                        }
                                        </div>
                                    </div>
                        }
                    }

                </div>
            </div>

            <div class="panel panel-default">
                <div class="panel-heading">
                    Google Calendar Integration
                </div>
                <div class="panel-body">
                    <h4>@Model.ServiceRequest.CalendarEventTitle</h4>
                    <strong>Google Event Data</strong>
                    <div>@Model.ServiceRequest.CalendarEventTitle</div>
                    @*<div>@Model.ServiceRequest.AppointmentDate.Value.GetDateTimeFormats('D')[0]</div>*@
                    <div>@Model.ServiceRequest.StartTime</div>
                    <div>@Model.ServiceRequest.EndTime</div>
                    @*<dt>Effective Price</dt>
                        <dd>
                            <a data-toggle="popover" data-trigger="click" title="Price Details" data-placement="left" data-content="@Html.Partial("_PriceDetails", Model)">
                                <strong class="text-success">@Model.EffectivePrice</strong>
                            </a>
                        </dd>*@
                </div>
            </div>
        }
        <div class="panel panel-default">
            <div class="panel-heading">
                Location
            </div>
            <div class="panel-body">
                <address>
                    <strong>@Model.ServiceRequest.LocationName</strong><br>
                    <strong>@Model.ServiceRequest.AddressName</strong><br>
                    @Model.ServiceRequest.Address1<br>
                    @if (!string.IsNullOrEmpty(Model.ServiceRequest.City))
                    {
                        @:@Model.ServiceRequest.City, @Model.ServiceRequest.ProvinceName @Model.ServiceRequest.PostalCode<br>
                    }
                </address>
            </div>
        </div>
    </div>
</div>

@if (Model.User.RoleId == e.Roles.SuperAdmin)
{
    <div id="SuperAdminSection" class="row">
        <div class="col-md-12">
            <div class="panel panel-default">
                <div class="panel-heading">
                    Invoice from Physician to Company
                </div>
                @if (Model.Invoices.Count() == 0)
                {
                    var newInvoiceFormOptions = new AjaxOptions { HttpMethod = "Post", InsertionMode = InsertionMode.Replace, UpdateTargetId = "create-invoice-form" };
                    <div class="panel-body">
                        @using (Ajax.BeginForm("Create", "Invoice", new { }, newInvoiceFormOptions, new { id = "create-invoice-form" }))
                        {
                            @Html.Hidden("ServiceRequestId", Model.ServiceRequest.Id)
                            <button type="submit" class="btn btn-primary">Create Invoice</button>
                        }
                    </div>
                }
                else
                {
                    @Html.Action("Table", "Invoice", new { invoices = Model.Invoices.ToList() })
                }
            </div>

            <div class="panel panel-default">
                <div class="panel-heading">
                    Invoice from Staff to Orvosi
                </div>
                <div class="panel-body">
                    @if ((Model.ServiceRequest.ClosedTasks.HasValue ? Model.ServiceRequest.ClosedTasks.Value : 0) == 0)
                    {
                        <div>No billable tasks have been completed.</div>
                    }
                </div>
            </div>
        </div>
    </div>
}


@section Scripts {
    <script type="text/javascript">
        $(function () {
        })
    </script>
}
