@using WebApp.Library.Extensions
@model WebApp.Areas.Admin.ViewModels.AvailabilityViewModels.IndexViewModel

@{
    ViewBag.Title = "Availability";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<h2>Availability for</h2>
<div class="h3 lead">@Model.Physician.DisplayName</div>

<div class="row">
    <div class="col-md-12">
        <div id="availability"></div>
    </div>
</div>


@section Scripts {

    @Scripts.Render("~/bundles/fullcalendar")


    <script type="text/javascript">
        $(document).ready(function () {

            var fc = $.fullCalendar;
            var formatDate = fc.formatDate;
            var parseISO8601 = fc.parseISO8601;
            var addDays = fc.addDays;
            var applyAll = fc.applyAll;

            $('#availability').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month,agendaWeek,agendaDay'
                },
                defaultView: 'month',
                selectable: true,
                minTime: 7,
                maxTime: 21,
                height: 400,
                views: {
                    month: {
                        // options apply to basicWeek and basicDay views
                    },
                    agenda: {
                        // options apply to agendaWeek and agendaDay views
                    }
                },
                events: @(Html.Raw(Model.AvailableDays.ToJson()))
                    @*,
                    function (start, end, callback) {
                        if (physicianId != null) {
                            $.post(
                            '@Url.Content("~/admin/availability/availabledays")',
                            {
                                physicianId: physician.val()
                            },
                            function (data, status, e) {
                                $.each(data, function (index, object) {
                                    location
                                    .append($("<option></option>")
                                    .attr("Value", object.Value)
                                    .text(object.Text));
                                });
                            },
                            'json'
                            );
                        }
                    }
                ]
                            function (result) {
                                    var events = [];
                                    $.each(result.data.Items, function (i, entry) {
                                        var startStr = entry.Start.DateTimeRaw;
                                        var start = parseISO8601(startStr, true);
                                        var end = parseISO8601(entry.End.DateTimeRaw, true);
                                        var allDay = startStr.indexOf('T') == -1;
                                        var url;
                                        //$.each(entry.link, function (i, link) {
                                        //    if (link.type == 'text/html') {
                                        //        url = link.href;
                                        //        if (ctz) {
                                        //            url += (url.indexOf('?') == -1 ? '?' : '&') + 'ctz=' + ctz;
                                        //        }
                                        //    }
                                        //});
                                        if (allDay) {
                                            addDays(end, -1); // make inclusive
                                        }
                                        events.push({
                                            id: entry.ICalUID,
                                            title: entry.Summary,
                                            url: url,
                                            start: start,
                                            end: end,
                                            allDay: allDay,
                                            location: entry.Location,
                                            description: entry.Description
                                        });
                                    });
                                    var args = [events].concat(Array.prototype.slice.call(arguments, 1));
                                    var res = applyAll(callback, this, args);
                                    if ($.isArray(res)) {
                                        return res;
                                    }
                                    //return events;
                                    callback(events);
                                }
                            });
                            *@
            });
        });
    </script>
}