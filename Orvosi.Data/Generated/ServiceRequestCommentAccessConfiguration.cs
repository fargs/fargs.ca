// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Orvosi.Data
{

    // ServiceRequestCommentAccess
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class ServiceRequestCommentAccessConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<ServiceRequestCommentAccess>
    {
        public ServiceRequestCommentAccessConfiguration()
            : this("dbo")
        {
        }

        public ServiceRequestCommentAccessConfiguration(string schema)
        {
            ToTable(schema + ".ServiceRequestCommentAccess");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("uniqueidentifier").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.ServiceRequestCommentId).HasColumnName(@"ServiceRequestCommentId").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.UserId).HasColumnName(@"UserId").IsRequired().HasColumnType("uniqueidentifier");
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedUser).HasColumnName(@"CreatedUser").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").IsRequired().HasColumnType("datetime");
            Property(x => x.ModifiedUser).HasColumnName(@"ModifiedUser").IsRequired().HasColumnType("nvarchar").HasMaxLength(100);

            // Foreign keys
            HasRequired(a => a.AspNetUser).WithMany(b => b.ServiceRequestCommentAccesses).HasForeignKey(c => c.UserId); // FK_ServiceRequestCommentAccess_AspNetUsers
            HasRequired(a => a.ServiceRequestComment).WithMany(b => b.ServiceRequestCommentAccesses).HasForeignKey(c => c.ServiceRequestCommentId); // FK_ServiceRequestCommentAccess_ServiceRequestComment
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
