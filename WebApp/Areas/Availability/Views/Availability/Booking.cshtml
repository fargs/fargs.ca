@using Enums = ImeHub.Models.Enums
@using WebApp.Library.Extensions
@model BookingForm

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">
        Booking
    </h4>
</div>
<div class="modal-body">
    <form id="add-booking-form" class="form-horizontal">

        @Html.AntiForgeryToken()

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <input type="hidden" name="AvailableSlotId" value="@Model.AvailableSlotId" />

        @Html.Hidden("AppointmentDate", Model.AppointmentDate.ToOrvosiDateFormat())
        <div class="form-group">
            <label class="col-sm-3 control-label">Appointment Date</label>
            <div class="col-sm-9">
                <p class="form-control-static">@Model.AppointmentDate.ToLongDateString()</p>
            </div>
        </div>

        @if (Model.CompanyId.HasValue)
        {
            <div class="form-group">
                <div class="col-md-push-3 col-md-9 text-info">
                    This day has been offered to <strong>@Model.AvailableSlot.AvailableDay.Company.Name</strong>
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-sm-push-3 col-sm-9 text-info">
                    This day <strong>is available</strong> to <strong>all</strong> companies
                </div>
            </div>
        }

        <div class="form-group">
            <label class="control-label col-sm-3">Company</label>
            <div class="col-sm-9">
                @Html.DropDownList("CompanyId", new SelectList(Model.ViewData.Companies, "Value", "Text", "Group.Name", Model.CompanyId), new { @class = "form-control" })
                @Html.ValidationMessage("CompanyId", "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.AddressId.HasValue)
        {
            <div class="form-group">
                <div class="col-sm-push-3 col-sm-9 text-info">
                    A location has been committed to for this day
                </div>
            </div>

            @Html.Hidden("AddressId", Model.AddressId)
            <div class="form-group">
                <label class="col-sm-3 control-label">Location</label>
                <div class="col-sm-9">
                    <p class="form-control-static">@string.Format("{0}", Model.AvailableSlot.AvailableDay.Address.Name)</p>
                </div>
            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-sm-push-3 col-sm-9 text-info">
                    The location is <strong>to be determined</strong>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-3">Address</label>
                <div class="col-sm-9">
                    @Html.DropDownList("AddressId", new SelectList(Model.ViewData.Addresses, "Value", "Text", "Group.Name", new { }), new { @class = "form-control" })
                    @Html.ValidationMessage("AddressId", "", new { @class = "text-danger" })
                </div>
            </div>
        }

        <div class="form-group">
            <label class="control-label col-sm-3">Service</label>
            <div class="col-sm-9">
                @Html.DropDownList("ServiceId", new SelectList(Model.ViewData.Services, "Value", "Text", new { }), new { @class = "form-control" })
                @Html.ValidationMessage("ServiceId", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Due Date</label>
            <div class="col-sm-9">
                <input type="date" name="DueDate" value="@Model.DueDate.ToOrvosiDateFormat()" id="DueDate" class="form-control" style="line-height:14px;" />
                @Html.ValidationMessage("DueDate", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Claimant</label>
            <div class="col-sm-9">
                @Html.Editor("ClaimantName", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("ClaimantName", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Case Reference Id</label>
            <div class="col-sm-9">
                @Html.Editor("CompanyReferenceId", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("CompanyReferenceId", "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Referral Source</label>
            <div class="col-sm-9">
                @Html.Editor("SourceCompany", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessage("SourceCompany", "", new { @class = "text-danger" })
                <div class="help-block">Eg. Law Firm, Insurance Company</div>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Workflow</label>
            <div class="col-sm-9">
                @Html.DropDownList("WorkflowId", new SelectList(Model.ViewData.Workflows, "Value", "Text"), string.Empty, new { @class = "form-control" })
                @Html.ValidationMessage("WorkflowId", "", new { @class = "text-danger" })
            </div>
        </div>

    </form>


</div>
<div class="modal-footer">
    <button class="btn btn-default" data-dismiss="modal" aria-label="Close">Close</button>
    <button class="btn btn-success" onclick="bookAssessment($('#add-booking-form'), false)">Save</button>
</div>
