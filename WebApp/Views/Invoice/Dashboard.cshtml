@using WebApp.Library.Extensions
@using Model
@using e = Model.Enums
@model WebApp.ViewModels.InvoiceViewModels.DashboardViewModel

@{
    var db = new OrvosiEntities();

    ViewBag.ServiceProviders = db.BillableEntities
        .Where(c => c.EntityType == e.EntityTypes.Physician)
        .Select(c => new SelectListItem()
        {
            Text = c.EntityName,
            Value = c.EntityGuid.ToString()
        });

    ViewBag.Customers = db.Companies
        .Where(c => c.IsParent == false)
        .Select(c => new SelectListItem()
        {
            Text = c.Name,
            Value = c.ObjectGuid.ToString(),
            Group = new SelectListGroup() { Name = c.ParentName }
        });

    ViewBag.Years = e.DateRanges.GetYears()
        .Select(c => new SelectListItem()
        {
            Text = c.Value,
            Value = c.Key.ToString()
        });

    ViewBag.Months = e.DateRanges.GetMonths()
        .Select(c => new SelectListItem()
        {
            Text = c.Value,
            Value = c.Key.ToString()
        });
}

<div class="row" style="margin-bottom:20px">
    <div class="col-md-12">
        <form action="~/Invoice/Dashboard/" method="get" class="form-inline">
            @if (Model.User.RoleId == e.Roles.SuperAdmin)
            {
                <div class="form-group">
                    @Html.DropDownList("ServiceProviderId", new SelectList(ViewBag.ServiceProviders, "Value", "Text", "Group.Name", Model.FilterArgs.ServiceProviderId.HasValue ? Model.FilterArgs.ServiceProviderId.Value : Guid.Empty), "-- Service Provider --", new { @class = "form-control", onchange = "this.form.submit();" })
                </div>
                <div class="form-group">
                    @Html.DropDownList("CustomerId", new SelectList(ViewBag.Customers, "Value", "Text", "Group.Name", Model.FilterArgs.CustomerId.HasValue ? Model.FilterArgs.CustomerId.Value : Guid.Empty), "-- Customer --", new { @class = "form-control", onchange = "this.form.submit();" })
                </div>
            }
            <div class="form-group">
                @Html.DropDownList("Year", new SelectList(ViewBag.Years, "Value", "Text", Model.FilterArgs.Year.HasValue ? Model.FilterArgs.Year.Value.ToString() : string.Empty), new { @class = "form-control", onchange = "this.form.submit();" })
            </div>
        </form>
    </div>
</div>
<div class="row">
    <div class="col-sm-4">
        <div class="thumbnail alert alert-info">
            <div class="caption">
                <div class="h1 text-center">@Model.InvoiceCount.ToString()</div>
                <div class="text-muted text-center">Invoices</div>
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="thumbnail alert alert-success">
            <div class="caption">
                <div class="h1 text-center">@Model.NetIncome.Value.ToString("C0")</div>
                <div class="text-muted text-center">Net Income</div>
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="thumbnail alert alert-info">
            <div class="caption">
                <div class="h1 text-center">@Model.Hst.Value.ToString("C0")</div>
                <div class="text-muted text-center">HST</div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-6">
        <h2>@Model.FilterArgs.Year Net Income By Month</h2>
        <div id="revenueByMonth" style="width:100%; height:100%;"></div>
    </div>
    <div class="col-sm-6">
        <h2>@Model.FilterArgs.Year Net Income By Company</h2>
        <div id="revenueByCompany" style="width:100%; height:100%;"></div>
    </div>
</div>
<div class="row">
    
</div>
<h2>@Model.FilterArgs.Year Invoices</h2>
@Html.Action("Table", new { invoices = Model.Invoices })

@section scripts {

    @Scripts.Render("~/bundles/highcharts")

    <script>
        $(function () {
            $('#revenueByMonth').highcharts({
                colors: ["#90ee7e"],
                chart: {
                    type: 'bar'
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: [@Model.Months.ToCSV()],
                    stackLabels: {
                        enabled: true,
                        style: {
                            fontWeight: 'bold',
                            color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                        }
                    }
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: ''
                    },
                    labels: {
                        formatter: function () {
                            return '$' + this.value;
                        }
                    }
                },
                legend: {
                    align: 'right',
                    x: -30,
                    verticalAlign: 'top',
                    y: -10,
                    floating: true,
                    backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                    borderColor: '#CCC',
                    borderWidth: 1,
                    shadow: false,
                    enabled: false
                },
                tooltip: {
                    headerFormat: '<b>{point.x}</b><br/>',
                    pointFormat: '{series.name}: {point.y}',
                    valueDecimals: 2,
                    valuePrefix: '$',
                    valueSuffix: ' CAD'
                },
                plotOptions: {
                    column: {
                        stacking: 'normal',
                        dataLabels: {
                            enabled: false,
                            color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                            style: {
                                textShadow: '0 0 3px black'
                            }
                        }
                    }
                },
                series: [{
                    name: 'Net Income',
                    data: [@string.Join(",", Model.NetIncomeByMonth)]
                }]
            });

            $('#revenueByCompany').highcharts({
                colors: ["#f7a35c"],
                chart: {
                    type: 'bar'
                },
                title: {
                    text: ''
                },
                xAxis: {
                    categories: [@Model.Companies.ToCSV()],
                    stackLabels: {
                        enabled: true,
                        style: {
                            fontWeight: 'bold',
                            color: (Highcharts.theme && Highcharts.theme.textColor) || 'gray'
                        }
                    }
                },
                yAxis: {
                    min: 0,
                    title: {
                        text: ''
                    },
                    labels: {
                        formatter: function () {
                            return '$' + this.value;
                        }
                    }
                },
                legend: {
                    align: 'right',
                    x: -30,
                    verticalAlign: 'top',
                    y: -10,
                    floating: true,
                    backgroundColor: (Highcharts.theme && Highcharts.theme.background2) || 'white',
                    borderColor: '#CCC',
                    borderWidth: 1,
                    shadow: false,
                    enabled: false
                },
                tooltip: {
                    headerFormat: '<b>{point.x}</b><br/>',
                    pointFormat: '{series.name}: {point.y}',
                    valueDecimals: 2,
                    valuePrefix: '$',
                    valueSuffix: ' CAD'
                },
                plotOptions: {
                    column: {
                        stacking: 'normal',
                        dataLabels: {
                            enabled: false,
                            color: (Highcharts.theme && Highcharts.theme.dataLabelsColor) || 'white',
                            style: {
                                textShadow: '0 0 3px black'
                            }
                        }
                    }
                },
                series: [{
                    name: 'Net Income',
                    data: [@string.Join(",", Model.NetIncomeByCompany)]
                }]
            });
        });
    </script>
}
