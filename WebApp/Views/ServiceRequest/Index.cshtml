@using Model.Enums;
@model WebApp.ViewModels.ServiceRequestViewModels.IndexViewModel

@{
    ViewBag.Title = "Service Requests";
}

<h2>Service Requests</h2>

<div class="row">
    <div class="col-md-2">
        @if (User.IsInRole("Super Admin") || User.IsInRole("Case Coordinator"))
        {
            <p>
                <a class="btn btn-primary" href="~/ServiceRequest/Availability">Create Request</a>
            </p>
        }
        <div class="well well-sm">
            <form action="@Url.Content("~/ServiceRequest/Index")" method="get">
                @*<div class="input-group">
                        <input type="text" class="form-control" name="Search" value="" placeholder="Search for ..." />
                        <span class="input-group-btn">
                            <button class="btn btn-default" type="button"><i class="glyphicon glyphicon-search"></i></button>
                        </span>
                    </div>*@
                <div class="form-group form-group-sm">
                    <label class="control-label small">Claimant / Reference Id</label>
                    <input type="text" class="form-control" name="FilterArgs.ClaimantName" value="@Model.FilterArgs.ClaimantName" />
                </div>
                <div class="form-group form-group-sm">
                    <label class="control-label small">Id(s) (csv)</label>
                    <input type="text" class="form-control" name="FilterArgs.Ids" value="@Model.FilterArgs.Ids" />
                </div>
                <div class="form-group form-group-sm">
                    <label class="control-label small">Status</label>
                    @Html.DropDownList("FilterArgs.StatusId", new SelectList(ViewBag.ServiceRequestStatuses, "Value", "Text", Model.FilterArgs.StatusId), string.Empty, new { @class = "form-control" })
                </div>
                <div class="form-group form-group-sm">
                    <label class="control-label small">Date Range</label>
                    <select class="form-control" name="FilterArgs.DateRange">
                        <option></option>
                        <option value="@DateRanges.Today" @(Model.FilterArgs.DateRange == DateRanges.Today ? "selected" : string.Empty)>Today</option>
                        <option value="@DateRanges.Next10Days" @(Model.FilterArgs.DateRange == DateRanges.Next10Days ? "selected" : string.Empty)>Next 10 Days</option>
                    </select>
                </div>
                <div class="form-group form-group-sm">
                    <label class="control-label small">Sort</label>
                    <select class="form-control" name="FilterArgs.Sort">
                        <option value="Newest" @(Model.FilterArgs.Sort == "Newest" ? "selected" : string.Empty)>Newest</option>
                        <option value="Oldest" @(Model.FilterArgs.Sort == "Oldest" ? "selected" : string.Empty)>Oldest</option>
                    </select>
                </div>
                @if (Model.User.RoleCategoryId == RoleCategory.Staff || Model.User.RoleCategoryId == RoleCategory.Admin)
                {
                    <fieldset>
                        <legend class="small">Staff Only</legend>
                        <div class="form-group form-group-sm">
                            <label class="control-label small">Physician</label>
                            @Html.DropDownList("FilterArgs.PhysicianId", new SelectList(ViewBag.Physicians, "Value", "Text", Model.FilterArgs.PhysicianId), string.Empty, new { @class = "form-control" })
                        </div>
                    </fieldset>
                }
                @if (Model.User.RoleCategoryId == RoleCategory.Admin)
                {
                    <fieldset>
                        <legend class="small">Admin Only</legend>
                        <div class="form-group form-group-sm">
                            <select class="form-control" name="FilterArgs.ShowAll">
                                <option value="false" @(Model.FilterArgs.ShowAll == false ? "selected" : string.Empty)>Only Mine</option>
                                <option value="true" @(Model.FilterArgs.ShowAll == true ? "selected" : string.Empty)>Show All</option>
                            </select>
                        </div>
                    </fieldset>
                }
                <button class="btn btn-primary">Apply</button>
            </form>
        </div>
    </div>
    <div class="col-md-10">
        <table class="table">
            <tr>
                <th></th>
                <th>
                    Status
                </th>
                <th>
                    When
                </th>
                @*<th>
                        Where
                    </th>*@
                <th>
                    What
                </th>
                @*<th>
                        Who
                    </th>*@
                <th>
                    Id
                </th>
            </tr>

            @foreach (var item in Model.ServiceRequests)
            {
                <tr>
                    @*<td class="@(item.StatusId == ServiceRequestStatus.Open ? "bordered-left-success" : "bordered-left-warning")">*@
                    <td>
                        <div class="btn-group" style="width:100px">
                            @if (item.ServiceRequestStatusId == ServiceRequestStatus.Closed)
                            {
                                <a href="~/ServiceRequest/Details/@item.Id">View</a>
                            }
                            else
                            {
                                @Html.ActionLink("View", "Details", new { id = item.Id }, new { @class = "btn btn-default" })
                                if (Model.User.RoleCategoryId != RoleCategory.Physician)
                                {
                                    <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                        <span class="caret"></span>
                                        <span class="sr-only">Toggle Dropdown</span>
                                    </button>
                                    <ul class="dropdown-menu">
                                        <li><a href="~/ServiceRequest/Edit/@item.Id#ResourceAssignment">Assign Resources</a></li>
                                        @if (item.ServiceStatusId != ServiceStatus.NoShow)
                                        {
                                            <li role="separator" class="divider"></li>
                                            if (item.ServiceStatusId == ServiceStatus.Cancellation || item.ServiceStatusId == ServiceStatus.LateCancellation)
                                            {
                                                <li>@Html.ActionLink("Undo Cancellation", "UndoCancel", new { id = item.Id })</li>
                                            }
                                            else
                                            {
                                                <li>@Html.ActionLink("Cancellation", "Cancel", new { id = item.Id })</li>
                                            }
                                        }
                                    </ul>
                                }
                            }
                        </div>
                    </td>
                    @if (item.ServiceRequestStatusId == ServiceRequestStatus.Closed)
                    {
                        <td colspan="4">
                            <div class="text-muted"><strong>Closed</strong> @item.Title</div>
                        </td>
                    }
                    else
                    {
                        <td>
                            <div class="label label-@(item.ServiceStatusId == ServiceStatus.Completed ? "success" : "danger")">@item.ServiceStatusText</div>
                            <div>
                                <div class="progress" style="margin-bottom: 0">
                                    <div class="progress-bar progress-bar-info" role="progressbar" aria-valuenow="@item.ClosedTasks" aria-valuemin="0" aria-valuemax="@item.TotalTasks" style="width: @(item.ClosedTasks * 100 / item.TotalTasks)%;">
                                    </div>
                                </div>
                                <small class="text-muted">@item.ClosedTasks out of @item.TotalTasks completed</small>
                            </div>
                            <div>
                                <small class="text-muted">Next Task: </small><small><strong>@item.NextTaskName</strong></small>
                            </div>
                            <div>
                                <small class="text-muted">Assigned To: <strong>@(string.IsNullOrEmpty(item.NextTaskAssignedTo) ? "<Not Assigned>" : item.NextTaskAssignedtoName)</strong></small>
                            </div>
                        </td>
                        <td>
                            <strong>@item.AppointmentDate.Value.ToString("ddd, MMM dd yyyy")</strong>
                            <div class="text-muted">@item.AppointmentDate.Value.Add(item.StartTime.Value).ToShortTimeString()</div>
                            <div class="text-muted">@item.AddressName</div>
                            <strong>@item.LocationName</strong>
                        </td>
                        <td>
                            <strong>@item.ServiceName</strong>
                            <div class="text-muted">
                                @item.CompanyName<br />
                                @(string.IsNullOrEmpty(item.ClaimantName) ? item.CompanyReferenceId : item.ClaimantName)
                            </div>
                        </td>
                        @*<td>
                                <strong>@item.PhysicianDisplayName</strong><br />
                                @item.CaseCoordinatorName <small class="text-muted">(Case Coordinator)</small><br />
                                @item.DocumentReviewerName <small class="text-muted">(Document Reviewer)</small><br />
                                @item.IntakeAssistantName <small class="text-muted">(Intake Assistant)</small><br />
                            </td>*@
                        <td>
                            <strong>@item.Id</strong>
                        </td>
                    }
                </tr>
            }

        </table>
    </div>
</div>
