@using WebApp.Library

@model WebApp.ViewModels.TeleconferenceNotificationViewModel

@{
    var session = DependencyResolver.Current.GetService<SessionService>();
    var features = session.AuthorizedFeatures;
    var identity = session.identity;
    var viewDataService = DependencyResolver.Current.GetService<ViewDataService>();
    var resultTypes = viewDataService.GetTeleconferenceResultTypes();
    var teamMembers = viewDataService.GetCaseResourceSelectList(Model.Teleconference.ServiceRequestId).Where(c => c.Value != session.userId.ToString());
}

<div class="modal-header">
    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <h4 class="modal-title">
        Send Teleconference Result Message
    </h4>
</div>
<div class="modal-body">
    <form id="edit-teleconference-message-form" method="post" enctype="multipart/form-data">
        <input type="hidden" name="TeleconferenceId" value="@Model.Teleconference.Id" />
        <div class="form-group">
            <label class="control-label">Result</label>
            @*@Html.DropDownList("CommentTypeId", new SelectList(commentTypes, "Value", "Text", Model.CommentTypeId), new { @class = "form-control", style = "width:100%;" })*@
            @foreach (var ct in resultTypes)
            {
                <div class="radio">
                    <label><input type="radio" name="TeleconferenceResultId" value="@ct.Id" checked="@(Model.Teleconference.ResultTypeId == ct.Id)" onchange="getTeleconferenceNotificationTemplate(@ct.Id , @Model.CaseNotificationViewModel.ServiceRequestId)">@ct.Name</label>
                </div>
            }
            @Html.ValidationMessageFor(c => c.Teleconference.ResultTypeId, "", new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label class="control-label">From</label>
            <input type="text" name="Message.From" class="form-control" value="@Model.Message.From" />
        </div>
        <div class="form-group">
            <label class="control-label">To</label>
            <input type="text" name="Message.To" class="form-control" value="@Model.Message.To" />
        </div>
        <div class="form-group">
            <label class="control-label">CC</label>
            <input type="text" name="Message.CC" class="form-control" value="@Model.Message.CC" />
        </div>
        <div class="form-group">
            <label class="control-label">Subject</label>
            <input type="text" name="Message.Subject" class="form-control" value="@Model.Message.Subject" />
        </div>
        <div class="form-group">
            <label class="control-label">Body</label>
            <textarea id="teleconference-message-body" name="Message.Body" class="form-control" rows="8">@Model.Message.Body</textarea>
        </div>
        @*<div class="checkbox">
                <label>
                    <input name="IncludeAttachment" type="checkbox"> Include invoice as email attachment
                </label>
            </div>*@
        <div class="form-group">
            <label class="control-label">Attachment</label>
            <input type="file" name="Attachment1" class="form-control" />
        </div>
    </form>
</div>
<div class="modal-footer">
    <input class="btn btn-success"
           type="submit"
           onclick="saveTeleconferenceResultForm('@Model.Teleconference.Id' , '@Model.Teleconference.ServiceRequestId')"
           value="Send" />



</div>