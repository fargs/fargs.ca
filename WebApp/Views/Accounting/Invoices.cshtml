@using WebApp.Library.Extensions
@using Orvosi.Shared.Enums
@using Orvosi.Data
@using Orvosi.Shared.Enums.Features
@model WebApp.ViewModels.InvoiceViewModels.InvoiceListViewModel
@{
    Layout = "~/Views/Accounting/_Layout.cshtml";

    var roleId = User.Identity.GetRoleId();

    var db = new OrvosiDbContext();

    ViewBag.BillableEntities = db.BillableEntities
        .Select(c => new SelectListItem()
        {
            Text = c.EntityName,
            Value = c.EntityGuid.ToString(),
            Group = new SelectListGroup() { Name = c.EntityType }
        })
        .OrderBy(c => c.Group)
        .ThenBy(c => c.Text)
        .ToList();

    ViewBag.Years = DateRanges.GetYears()
        .Where(y => y.Key <= SystemTime.Now().Year)
        .Select(c => new SelectListItem()
        {
            Text = c.Value,
            Value = c.Key.ToString()
        }).ToList();

    ViewBag.Months = DateRanges.GetMonths()
        .Select(c => new SelectListItem()
        {
            Text = c.Value,
            Value = c.Key.ToString()
        })
        .ToList();

    var features = User.Identity.GetFeatures();
}

<div class="row" style="margin-bottom:20px">
    <div class="col-md-12">
        <form action="~/@this.ViewContext.RouteData.Values["Controller"]/@this.ViewContext.RouteData.Values["Action"]/" method="get" class="form-inline">
            @Html.Hidden("ServiceProviderId", Model.FilterArgs.ServiceProviderId.HasValue ? Model.FilterArgs.ServiceProviderId.Value : Guid.Empty)
            @if (User.Identity.GetRoleId() == AspNetRoles.SuperAdmin || User.Identity.GetRoleId() == AspNetRoles.CaseCoordinator)
            {
                <div class="form-group">
                    @Html.DropDownList("CustomerId", new SelectList(ViewBag.BillableEntities, "Value", "Text", "Group.Name", Model.FilterArgs.CustomerId.HasValue ? Model.FilterArgs.CustomerId.Value : Guid.Empty), "-- Customer --", new { @class = "form-control", onchange = "this.form.submit();" })
                </div>
            }
            <div class="form-group">
                @Html.DropDownList("Year", new SelectList(ViewBag.Years, "Value", "Text", Model.FilterArgs.Year.HasValue ? Model.FilterArgs.Year.Value.ToString() : string.Empty), "-- Year --", new { @class = "form-control", onchange = "this.form.submit();" })
            </div>
            <div class="form-group">
                @Html.DropDownList("Month", new SelectList(ViewBag.Months, "Value", "Text", Model.FilterArgs.Month.HasValue ? Model.FilterArgs.Month.Value.ToString() : string.Empty), "-- Month --", new { @class = "form-control", onchange = "this.form.submit();" })
            </div>
            @*<div class="form-group">
                    @Html.CheckBox("ShowSubmitted", false, new { @class = "form-control", onchange = "this.form.submit();" })
                    Show Submitted
                </div>*@
        </form>
    </div>
</div>

@if (Model.UnsentInvoices.Count() == 0)
{
    <p><strong>There are no invoices that need to be sent out.</strong></p>
}
else
{
    <p><strong>@Model.UnsentInvoices.Sum(day => day.UnsentInvoices.Count())</strong> invoices</p>
}

@foreach (var dayFolder in Model.UnsentInvoices)
{
    <div class="row o-th" style="background-color: aliceblue">
        <div class="col-md-12">
            <div class="h3">
                @dayFolder.Day.ToString("MMM dd dddd")
            </div>
        </div>
    </div>
    <div class="row o-dashboard-tr">
        <strong class="col-md-2 o-dashboard-td bg-warning">Case</strong>
        <strong class="col-md-2 o-dashboard-td">Header</strong>
        <strong class="col-md-4 o-dashboard-td">Items</strong>
        <strong class="col-md-2 o-dashboard-td">Total</strong>
        <strong class="col-md-2 o-dashboard-td text-right">Actions</strong>
    </div>

    foreach (var unsentInvoice in dayFolder.UnsentInvoices)
    {
        <div class="row o-dashboard-tr">
            <div class="col-md-2 o-dashboard-td bg-warning">
                @if (unsentInvoice.ServiceRequest != null)
                {
                    @Html.Partial("_ServiceRequest", unsentInvoice.ServiceRequest)
                }
                else
                {
                    <div>No related service request</div>
                }
            </div>
            <div class="col-md-8 o-dashboard-td" id="service-request-invoice-@(unsentInvoice.ServiceRequest == null ? "null" : unsentInvoice.ServiceRequest.ServiceRequestId.ToString())">
                @if (unsentInvoice.Invoice != null)
                {
                    @Html.Partial("_Invoice", unsentInvoice.Invoice)
                }
                else
                {
                    <div class="text-muted">Create invoice</div>
                }
            </div>
            <div class="col-md-2 o-dashboard-td" id="invoice-menu-@(unsentInvoice.ServiceRequest == null ? "null" : unsentInvoice.ServiceRequest.ServiceRequestId.ToString())">
                @if (unsentInvoice.Invoice == null)
                {
                    if (features.Contains(Accounting.CreateInvoice))
                    {
                        <div id="service-request-invoice-menu-@unsentInvoice.ServiceRequest.ServiceRequestId">
                            <div class="pull-right">
                                <button type="button" class="btn btn-success" name="Create" onclick="onCreate(@unsentInvoice.ServiceRequest.ServiceRequestId)"><i class="fa fa-lg fa-plus"></i></button>
                            </div>
                        </div>
                    }
                }
                else
                {
                    @Html.Partial("_InvoiceMenu", unsentInvoice)
                }

                @if (unsentInvoice.ServiceRequest != null)
                {
                    @Html.Partial("_SubmitInvoiceTaskStatus", unsentInvoice.ServiceRequest)
                }
            </div>
        </div>
    }
}

<div class="modal fade" id="edit-invoice-message-modal">
    <div class="modal-dialog">
        <div class="modal-content" id="edit-invoice-message-form-container">
        </div>
    </div>
</div>

<div class="modal fade" id="edit-invoice-header-modal">
    <div class="modal-dialog modal-sm">
        <div class="modal-content" id="edit-invoice-header-form-container">
        </div>
    </div>
</div>

<div class="modal fade" id="edit-invoice-item-modal">
    <div class="modal-dialog modal-lg">
        <div class="modal-content" id="edit-invoice-item-form-container">
        </div>
    </div>
</div>

@section Scripts {
    <script type="text/javascript">

        function onEditAndSendInvoice(invoiceId, serviceRequestId) {
            let url = '@Url.Content("~/Accounting/EditAndSendInvoice?invoiceId=")' + invoiceId + (serviceRequestId != null ? '&serviceRequestId=' + serviceRequestId : '');
            $.get(url).done(function (result) {

                var modalDiv = $("#edit-invoice-message-modal");
                var formContainer = $("#edit-invoice-message-form-container");

                formContainer.html(result);

                modalDiv.modal('toggle');
            });
        }

        function editAndSendInvoiceSaveChanges(invoiceId, serviceRequestId) {
            let url = '@Url.Content("~/Accounting/EditAndSendInvoice")';
            let form = $('#edit-invoice-message-form');
            let formData = new FormData(form[0]);
            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                async: false,
                cache: false,
                contentType: false,
                processData: false,
                success: function () {
                    toastr.success("Invoice sent successfully");
                    $("#edit-invoice-message-modal").modal('toggle');
                    refreshInvoice(invoiceId);
                    refreshInvoiceMenu(invoiceId, serviceRequestId);
                }
            });
        }

        function onSend(invoiceId, serviceRequestId) {
            let url = '@Url.Content("~/Accounting/SendInvoice")';
            $.post(url, {
                InvoiceId: invoiceId
            })
            .done(function () {
                toastr.success("Invoice sent successfully");
                refreshInvoice(invoiceId);
                refreshInvoiceMenu(invoiceId, serviceRequestId);
            });
        }

        function onPaid(invoiceId, serviceRequestId) {
            let url = '@Url.Content("~/Accounting/CreateReceipt")';
            $.post(url, {
                invoiceId: invoiceId
            })
            .done(function () {
                toastr.success("Invoice has been paided in full");
                refreshInvoice(invoiceId);
                refreshInvoiceMenu(invoiceId, serviceRequestId);
            });
        }

        function onCreate(serviceRequestId) {
            let url = '@Url.Content("~/Accounting/Create")';

            $.post(url, {
                serviceRequestId: serviceRequestId
            })
            .done(function (result) {
                toastr.success("Invoice created successfully");
                refreshServiceRequest(serviceRequestId, result.id);
                refreshServiceRequestMenu(serviceRequestId, result.id);
            });
        }

        function onDeleteInvoice(invoiceId, serviceRequestId) {
            let url = '@Url.Content("~/Accounting/DeleteInvoice")';

            $.post(url, {
                invoiceId: invoiceId
            })
            .done(function () {
                toastr.success("Invoice deleted successfully");
                if (serviceRequestId) {
                    refreshInvoice(invoiceId);
                    refreshInvoiceMenu(invoiceId, serviceRequestId);
                }
                else {
                    var invoiceContainer = document.getElementById('invoice-' + invoiceId).parentNode.parentNode;
                    invoiceContainer.remove();
                }
            });
        }

        function onEditInvoiceHeader(invoiceId) {
            let url = '@Url.Content("~/Accounting/EditInvoiceHeader?invoiceId=")' + invoiceId;
            $.get(url).done(function (result) {

                var modalDiv = $("#edit-invoice-header-modal");
                var formContainer = $("#edit-invoice-header-form-container");

                formContainer.html(result);

                modalDiv.modal('toggle');
            });
        }

        function invoiceHeaderSaveChanges() {
            var url = '@Url.Content("~/Accounting/EditInvoiceHeader")';
            var form = $('#edit-invoice-header-form');

            $.post(url,
                form.serialize()
            )
            .done(function () {
                toastr.success("Invoice updated successfully");
                $("#edit-invoice-header-modal").modal('toggle');
                refreshInvoice(form.find('#Id').val());
            });
        }

        function onEditInvoiceItem(invoiceDetailId) {
            let url = '@Url.Content("~/Accounting/EditInvoiceItem?invoiceDetailId=")' + invoiceDetailId;
            $.get(url).done(function (result) {

                var modalDiv = $("#edit-invoice-item-modal");
                var formContainer = $("#edit-invoice-item-form-container");

                formContainer.html(result);

                modalDiv.modal('toggle');
            });
        }

        function onAddInvoiceItem(invoiceId) {
            let url = '@Url.Content("~/Accounting/AddInvoiceItem?invoiceId=")' + invoiceId;
            $.post(url).done(function (result) {
                onEditInvoiceItem(result.data.Id);
            });
        }

        function onDeleteInvoiceItem(invoiceDetailId, invoiceId) {
            let url = '@Url.Content("~/Accounting/DeleteInvoiceItem?invoiceDetailId=")' + invoiceDetailId;
            $.post(url).done(function (result) {
                refreshInvoice(invoiceId);
            });
        }

        function invoiceItemSaveChanges() {
            var url = '@Url.Content("~/Accounting/EditInvoiceItem")';
            var form = $('#edit-invoice-item-form');

            $.post(url,
                form.serialize()
            )
            .done(function () {
                toastr.success("Invoice item updated successfully");
                $("#edit-invoice-item-modal").modal('toggle');
                refreshInvoice(form.find('#InvoiceId').val());
            });
        }

        function refreshInvoice(invoiceId) {
            let url = '@Url.Content("~/Accounting/Invoice?invoiceId=")' + invoiceId;
            $.get(url)
                .done(function (result) {
                    $('#invoice-' + invoiceId).replaceWith(result);
                })
                .error(function () {
                    //window.location.reload();
                });
        }

        function refreshInvoiceMenu(invoiceId, serviceRequestId) {
            let url = '@Url.Content("~/Accounting/InvoiceMenu?invoiceId=")' + invoiceId + (serviceRequestId != null ? '&serviceRequestId=' + serviceRequestId : '');
            $.get(url)
                .done(function (result) {
                    $('#invoice-menu-' + invoiceId).replaceWith(result);
                })
                .error(function () {
                    //window.location.reload();
                });
        }

        function refreshServiceRequest(serviceRequestId, invoiceId) {
            let url = '@Url.Content("~/Accounting/Invoice?invoiceId=")' + invoiceId;
            $.get(url)
                .done(function (result) {
                    var invoiceContainer = $('#service-request-invoice-' + serviceRequestId);
                    invoiceContainer.empty();
                    invoiceContainer.append(result);
                })
                .error(function () {
                    //window.location.reload();
                });
        }

        function refreshServiceRequestMenu(serviceRequestId, invoiceId) {
            let url = '@Url.Content("~/Accounting/InvoiceMenu?serviceRequestId=")' + serviceRequestId + '&invoiceId=' + invoiceId;
            $.get(url)
                .done(function (result) {
                    $('#service-request-invoice-menu-' + serviceRequestId).replaceWith(result);
                })
                .error(function () {
                    // undo the UI change made before the ajax call
                    //window.location.reload();
                });
        }
    </script>
}
