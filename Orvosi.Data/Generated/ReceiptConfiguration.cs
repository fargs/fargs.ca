// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.51
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

namespace Orvosi.Data
{

    // Receipt
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.21.1.0")]
    public partial class ReceiptConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Receipt>
    {
        public ReceiptConfiguration()
            : this("dbo")
        {
        }

        public ReceiptConfiguration(string schema)
        {
            ToTable(schema + ".Receipt");
            HasKey(x => x.Id);

            Property(x => x.Id).HasColumnName(@"Id").IsRequired().HasColumnType("uniqueidentifier").HasDatabaseGeneratedOption(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption.None);
            Property(x => x.InvoiceId).HasColumnName(@"InvoiceId").IsRequired().HasColumnType("int");
            Property(x => x.ReceivedDate).HasColumnName(@"ReceivedDate").IsRequired().HasColumnType("datetime");
            Property(x => x.IsPaidInFull).HasColumnName(@"IsPaidInFull").IsRequired().HasColumnType("bit");
            Property(x => x.Amount).HasColumnName(@"Amount").IsRequired().HasColumnType("decimal").HasPrecision(18,2);
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").IsRequired().HasColumnType("datetime");
            Property(x => x.CreatedUser).HasColumnName(@"CreatedUser").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").IsRequired().HasColumnType("datetime");
            Property(x => x.ModifiedUser).HasColumnName(@"ModifiedUser").IsRequired().HasColumnType("nvarchar").HasMaxLength(50);

            // Foreign keys
            HasRequired(a => a.Invoice).WithMany(b => b.Receipts).HasForeignKey(c => c.InvoiceId).WillCascadeOnDelete(false); // FK_Receipt_Invoice
            InitializePartial();
        }
        partial void InitializePartial();
    }

}
// </auto-generated>
